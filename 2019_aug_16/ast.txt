AnyTypeKind (VOID, BOOL, BYTE, UBYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, PTR, STRUCT, FUNC_PTR, FIXED_ARRAY)
StringOwnership (REFERENCE, OWN, GIVEN, DONOR)
Item (NONE, STAR, WING, GUN, CANNON)
Resource (NONE, STRING, SLIME, WOOD, FEATHER, METAL, CRYSTAL)
Ownership (REFERENCE, OWN, GIVEN)
struct Any (type *AnyType, placeholder ulong)
struct AnyType (kind AnyTypeKind, name *ubyte, is_alias bool)
struct AnyPtrType (kind AnyTypeKind, name *ubyte, is_alias bool, subtype *AnyType)
struct AnyStructType (kind AnyTypeKind, name *ubyte, is_alias bool, members **AnyType, length usize, offsets *usize, member_names **ubyte, is_packed bool)
struct AnyFuncPtrType (kind AnyTypeKind, name *ubyte, is_alias bool, args **AnyType, length usize, return_type *AnyType, is_vararg bool, is_stdcall bool)
struct AnyFixedArrayType (kind AnyTypeKind, name *ubyte, is_alias bool, subtype *AnyType, length usize)
struct AABB (x int, y int, w int, h int)
struct Bullet (x int, y int, vx int)
struct Cannon (x int, y int, vy int, direction int)
struct CannonBall (x int, y int, vx int)
struct ControlScheme (up int, down int, left int, right int, a int, b int, pause int, alt_up int)
struct dl_info (dli_fname *ubyte, dli_fbase ptr, dli_sname *ubyte, dli_saddr ptr)
struct GLFWvidmode (width int, height int, redBits int, greenBits int, blueBits int, refreshRate int)
struct GLFWgammaramp (red *ushort, green *ushort, blue *ushort, size uint)
struct GLFWimage (width int, height int, pixels *ubyte)
struct GLFWwindow (width int, height int, pixels *ubyte)
struct GLFWcursor (width int, height int, pixels *ubyte)
struct GLFWmonitor (width int, height int, pixels *ubyte)
struct GLFWglproc (width int, height int, pixels *ubyte)
struct tm (tm_sec int, tm_min int, tm_hour int, tm_mday int, tm_mon int, tm_year int, tm_wday int, tm_yday int, tm_isdst int)
struct FILE (_opaque 32 usize)
struct Vector3f (x float, y float, z float)
struct Matrix4f (array 16 float)
struct String (array *ubyte, length usize, capacity usize, ownership StringOwnership)
struct CaptColor (r float, g float, b float, a float)
struct CaptTexture (id GLuint)
struct CaptModel (vao GLuint, vertices_vbo GLuint, uvs_vbo GLuint, texture_id GLuint, triangle_count int)
struct CaptShader (program GLuint, vertex GLuint, fragment GLuint)
struct CaptFrameModel (model CaptModel, width float, height float)
struct GameAnimation (frames *CaptTexture, length usize, currentFrame usize, ticker usize, interval usize)
struct GameImageEx (texture CaptTexture, x_offset int, y_offset int, width int, height int)
struct CollectedResource (resource Resource, x float, y float)
struct Price (string int, slime int, wood int, feathers int, metal int, crystals int)
struct Player (x int, y int, vx int, vy int, direction int, swimming bool, moving bool, moving_horizontally bool, parachuting bool, on_ground *Region, frozen_image GameImageEx)
struct Region (collision AABB, visual AABB)
struct Platform (collision AABB, visual AABB, decorations <Decoration> List)
struct Lake (collision AABB, visual AABB)
struct Bridge (collision AABB, visual AABB)
struct Portal (collision AABB, visual AABB)
struct Decoration (collision AABB, visual AABB, texture CaptTexture)
struct ItemSpawn (collision AABB, visual AABB, item Item)
struct PortalEnabler (collision AABB, visual AABB, collected bool)
struct Particle (collision AABB, visual AABB, animation GameAnimation)
struct Spider (x int, y int, vx int, vy int, speed int, animation GameAnimation, potential_resource Resource)
struct Swordfish (x int, y int, vx int, speed int, interval int, ticker int, animation GameAnimation)
struct Theme (sky CaptTexture, wave GameAnimation, water CaptTexture, platform_n CaptTexture, platform_ne CaptTexture, platform_nw CaptTexture, platform_s CaptTexture, platform_se CaptTexture, platform_sw CaptTexture, platform_e CaptTexture, platform_w CaptTexture, platform_c CaptTexture, bushl CaptTexture, bushr CaptTexture)
__types__ **AnyType
__types_length__ usize
__type_kinds__ **ubyte
__type_kinds_length__ usize
errno int
glActiveProgramEXT stdcall func(GLuint) void
glActiveShaderProgram stdcall func(GLuint, GLuint) void
glActiveStencilFaceEXT stdcall func(GLenum) void
glActiveTextureARB stdcall func(GLenum) void
glActiveTexture stdcall func(GLenum) void
glActiveVaryingNV stdcall func(GLuint, *GLchar) void
glAddSwapHintRectWIN stdcall func(GLint, GLint, GLsizei, GLsizei) void
glAlphaFragmentOp1ATI stdcall func(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) void
glAlphaFragmentOp2ATI stdcall func(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) void
glAlphaFragmentOp3ATI stdcall func(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) void
glAlphaFuncx stdcall func(GLenum, GLclampx) void
glApplyTextureEXT stdcall func(GLenum) void
glArrayElementEXT stdcall func(GLint) void
glArrayObjectATI stdcall func(GLenum, GLint, GLenum, GLsizei, GLuint, GLuint) void
glAsyncMarkerSGIX stdcall func(GLuint) void
glAttachObjectARB stdcall func(GLhandleARB, GLhandleARB) void
glAttachShader stdcall func(GLuint, GLuint) void
glBeginConditionalRenderNV stdcall func(GLuint, GLenum) void
glBeginConditionalRenderNVX stdcall func(GLuint) void
glBeginConditionalRender stdcall func(GLuint, GLenum) void
glBeginFragmentShaderATI stdcall func() void
glBeginOcclusionQueryNV stdcall func(GLuint) void
glBeginPerfMonitorAMD stdcall func(GLuint) void
glBeginPerfQueryINTEL stdcall func(GLuint) void
glBeginQueryANGLE stdcall func(GLenum, GLuint) void
glBeginQueryARB stdcall func(GLenum, GLuint) void
glBeginQueryIndexed stdcall func(GLenum, GLuint, GLuint) void
glBeginQuery stdcall func(GLenum, GLuint) void
glBeginSceneEXT stdcall func() void
glBeginTransformFeedbackEXT stdcall func(GLenum) void
glBeginTransformFeedbackNV stdcall func(GLenum) void
glBeginTransformFeedback stdcall func(GLenum) void
glBeginVertexShaderEXT stdcall func() void
glBeginVideoCaptureNV stdcall func(GLuint) void
glBindAttribLocationARB stdcall func(GLhandleARB, GLuint, *GLcharARB) void
glBindAttribLocation stdcall func(GLuint, GLuint, *GLchar) void
glBindBufferARB stdcall func(GLenum, GLuint) void
glBindBufferBaseEXT stdcall func(GLenum, GLuint, GLuint) void
glBindBufferBaseNV stdcall func(GLenum, GLuint, GLuint) void
glBindBufferBase stdcall func(GLenum, GLuint, GLuint) void
glBindBufferOffsetEXT stdcall func(GLenum, GLuint, GLuint, GLintptr) void
glBindBufferOffsetNV stdcall func(GLenum, GLuint, GLuint, GLintptr) void
glBindBuffer stdcall func(GLenum, GLuint) void
glBindBufferRangeEXT stdcall func(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) void
glBindBufferRangeNV stdcall func(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) void
glBindBufferRange stdcall func(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) void
glBindBuffersBase stdcall func(GLenum, GLuint, GLsizei, *GLuint) void
glBindBuffersRange stdcall func(GLenum, GLuint, GLsizei, *GLuint, *GLintptr, *GLsizeiptr) void
glBindFragDataLocationEXT stdcall func(GLuint, GLuint, *GLchar) void
glBindFragDataLocationIndexed stdcall func(GLuint, GLuint, GLuint, *GLchar) void
glBindFragDataLocation stdcall func(GLuint, GLuint, *GLchar) void
glBindFragmentShaderATI stdcall func(GLuint) void
glBindFramebufferEXT stdcall func(GLenum, GLuint) void
glBindFramebuffer stdcall func(GLenum, GLuint) void
glBindImageTextureEXT stdcall func(GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLint) void
glBindImageTexture stdcall func(GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLenum) void
glBindImageTextures stdcall func(GLuint, GLsizei, *GLuint) void
glBindMultiTextureEXT stdcall func(GLenum, GLenum, GLuint) void
glBindProgramARB stdcall func(GLenum, GLuint) void
glBindProgramNV stdcall func(GLenum, GLuint) void
glBindProgramPipeline stdcall func(GLuint) void
glBindRenderbufferEXT stdcall func(GLenum, GLuint) void
glBindRenderbuffer stdcall func(GLenum, GLuint) void
glBindSampler stdcall func(GLuint, GLuint) void
glBindSamplers stdcall func(GLuint, GLsizei, *GLuint) void
glBindTextureEXT stdcall func(GLenum, GLuint) void
glBindTextures stdcall func(GLuint, GLsizei, *GLuint) void
glBindTextureUnit stdcall func(GLuint, GLuint) void
glBindTransformFeedbackNV stdcall func(GLenum, GLuint) void
glBindTransformFeedback stdcall func(GLenum, GLuint) void
glBindVertexArrayAPPLE stdcall func(GLuint) void
glBindVertexArray stdcall func(GLuint) void
glBindVertexBuffer stdcall func(GLuint, GLuint, GLintptr, GLsizei) void
glBindVertexBuffers stdcall func(GLuint, GLsizei, *GLuint, *GLintptr, *GLsizei) void
glBindVertexShaderEXT stdcall func(GLuint) void
glBindVideoCaptureStreamBufferNV stdcall func(GLuint, GLuint, GLenum, GLintptrARB) void
glBindVideoCaptureStreamTextureNV stdcall func(GLuint, GLuint, GLenum, GLenum, GLuint) void
glBinormalPointerEXT stdcall func(GLenum, GLsizei, ptr) void
glBlendBarrierKHR stdcall func() void
glBlendBarrierNV stdcall func() void
glBlendColorEXT stdcall func(GLclampf, GLclampf, GLclampf, GLclampf) void
glBlendColor stdcall func(GLclampf, GLclampf, GLclampf, GLclampf) void
glBlendEquationEXT stdcall func(GLenum) void
glBlendEquationiARB stdcall func(GLuint, GLenum) void
glBlendEquationIndexedAMD stdcall func(GLuint, GLenum) void
glBlendEquationi stdcall func(GLuint, GLenum) void
glBlendEquation stdcall func(GLenum) void
glBlendEquationSeparateEXT stdcall func(GLenum, GLenum) void
glBlendEquationSeparateiARB stdcall func(GLuint, GLenum, GLenum) void
glBlendEquationSeparateIndexedAMD stdcall func(GLuint, GLenum, GLenum) void
glBlendEquationSeparatei stdcall func(GLuint, GLenum, GLenum) void
glBlendEquationSeparate stdcall func(GLenum, GLenum) void
glBlendFunciARB stdcall func(GLuint, GLenum, GLenum) void
glBlendFuncIndexedAMD stdcall func(GLuint, GLenum, GLenum) void
glBlendFunci stdcall func(GLuint, GLenum, GLenum) void
glBlendFuncSeparateEXT stdcall func(GLenum, GLenum, GLenum, GLenum) void
glBlendFuncSeparateiARB stdcall func(GLuint, GLenum, GLenum, GLenum, GLenum) void
glBlendFuncSeparateIndexedAMD stdcall func(GLuint, GLenum, GLenum, GLenum, GLenum) void
glBlendFuncSeparatei stdcall func(GLuint, GLenum, GLenum, GLenum, GLenum) void
glBlendFuncSeparate stdcall func(GLenum, GLenum, GLenum, GLenum) void
glBlendParameteriNV stdcall func(GLenum, GLint) void
glBlitFramebufferANGLE stdcall func(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) void
glBlitFramebufferEXT stdcall func(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) void
glBlitFramebuffer stdcall func(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) void
glBlitNamedFramebuffer stdcall func(GLuint, GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) void
glBufferAddressRangeNV stdcall func(GLenum, GLuint, GLuint64EXT, GLsizeiptr) void
glBufferDataARB stdcall func(GLenum, GLsizeiptrARB, ptr, GLenum) void
glBufferData stdcall func(GLenum, GLsizeiptr, ptr, GLenum) void
glBufferPageCommitmentARB stdcall func(GLenum, GLintptr, GLsizeiptr, GLboolean) void
glBufferParameteriAPPLE stdcall func(GLenum, GLenum, GLint) void
glBufferStorage stdcall func(GLenum, GLsizeiptr, ptr, GLbitfield) void
glBufferSubDataARB stdcall func(GLenum, GLintptrARB, GLsizeiptrARB, ptr) void
glBufferSubData stdcall func(GLenum, GLintptr, GLsizeiptr, ptr) void
glClampColorARB stdcall func(GLenum, GLenum) void
glClampColor stdcall func(GLenum, GLenum) void
glClearBufferData stdcall func(GLenum, GLenum, GLenum, GLenum, ptr) void
glClearBufferfi stdcall func(GLenum, GLint, GLfloat, GLint) void
glClearBufferfv stdcall func(GLenum, GLint, *GLfloat) void
glClearBufferiv stdcall func(GLenum, GLint, *GLint) void
glClearBufferSubData stdcall func(GLenum, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, ptr) void
glClearBufferuiv stdcall func(GLenum, GLint, *GLuint) void
glClearColorIiEXT stdcall func(GLint, GLint, GLint, GLint) void
glClearColorIuiEXT stdcall func(GLuint, GLuint, GLuint, GLuint) void
glClearColorx stdcall func(GLclampx, GLclampx, GLclampx, GLclampx) void
glClearDepthdNV stdcall func(GLdouble) void
glClearDepthfOES stdcall func(GLclampf) void
glClearDepthf stdcall func(GLclampf) void
glClearDepthx stdcall func(GLclampx) void
glClearNamedBufferDataEXT stdcall func(GLuint, GLenum, GLenum, GLenum, ptr) void
glClearNamedBufferData stdcall func(GLuint, GLenum, GLenum, GLenum, ptr) void
glClearNamedBufferSubDataEXT stdcall func(GLuint, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, ptr) void
glClearNamedBufferSubData stdcall func(GLuint, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, ptr) void
glClearNamedFramebufferfi stdcall func(GLuint, GLenum, GLfloat, GLint) void
glClearNamedFramebufferfv stdcall func(GLuint, GLenum, GLint, *GLfloat) void
glClearNamedFramebufferiv stdcall func(GLuint, GLenum, GLint, *GLint) void
glClearNamedFramebufferuiv stdcall func(GLuint, GLenum, GLint, *GLuint) void
glClearTexImage stdcall func(GLuint, GLint, GLenum, GLenum, ptr) void
glClearTexSubImage stdcall func(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ptr) void
glClientActiveTextureARB stdcall func(GLenum) void
glClientActiveTexture stdcall func(GLenum) void
glClientActiveVertexStreamATI stdcall func(GLenum) void
glClientAttribDefaultEXT stdcall func(GLbitfield) void
glClipControl stdcall func(GLenum, GLenum) void
glClipPlanefOES stdcall func(GLenum, *GLfloat) void
glClipPlanef stdcall func(GLenum, *GLfloat) void
glClipPlanex stdcall func(GLenum, *GLfixed) void
glColor3fVertex3fSUN stdcall func(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glColor3fVertex3fvSUN stdcall func(*GLfloat, *GLfloat) void
glColor3hNV stdcall func(GLhalf, GLhalf, GLhalf) void
glColor3hvNV stdcall func(*GLhalf) void
glColor4fNormal3fVertex3fSUN stdcall func(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glColor4fNormal3fVertex3fvSUN stdcall func(*GLfloat, *GLfloat, *GLfloat) void
glColor4hNV stdcall func(GLhalf, GLhalf, GLhalf, GLhalf) void
glColor4hvNV stdcall func(*GLhalf) void
glColor4ubVertex2fSUN stdcall func(GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat) void
glColor4ubVertex2fvSUN stdcall func(*GLubyte, *GLfloat) void
glColor4ubVertex3fSUN stdcall func(GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) void
glColor4ubVertex3fvSUN stdcall func(*GLubyte, *GLfloat) void
glColor4x stdcall func(GLfixed, GLfixed, GLfixed, GLfixed) void
glColorFormatNV stdcall func(GLint, GLenum, GLsizei) void
glColorFragmentOp1ATI stdcall func(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) void
glColorFragmentOp2ATI stdcall func(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) void
glColorFragmentOp3ATI stdcall func(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) void
glColorMaskIndexedEXT stdcall func(GLuint, GLboolean, GLboolean, GLboolean, GLboolean) void
glColorMaski stdcall func(GLuint, GLboolean, GLboolean, GLboolean, GLboolean) void
glColorP3ui stdcall func(GLenum, GLuint) void
glColorP3uiv stdcall func(GLenum, *GLuint) void
glColorP4ui stdcall func(GLenum, GLuint) void
glColorP4uiv stdcall func(GLenum, *GLuint) void
glColorPointerEXT stdcall func(GLint, GLenum, GLsizei, GLsizei, ptr) void
glColorPointerListIBM stdcall func(GLint, GLenum, GLint, *ptr, GLint) void
glColorPointervINTEL stdcall func(GLint, GLenum, *ptr) void
glColorSubTableEXT stdcall func(GLenum, GLsizei, GLsizei, GLenum, GLenum, ptr) void
glColorSubTable stdcall func(GLenum, GLsizei, GLsizei, GLenum, GLenum, ptr) void
glColorTableEXT stdcall func(GLenum, GLenum, GLsizei, GLenum, GLenum, ptr) void
glColorTableParameterfv stdcall func(GLenum, GLenum, *GLfloat) void
glColorTableParameterfvSGI stdcall func(GLenum, GLenum, *GLfloat) void
glColorTableParameteriv stdcall func(GLenum, GLenum, *GLint) void
glColorTableParameterivSGI stdcall func(GLenum, GLenum, *GLint) void
glColorTable stdcall func(GLenum, GLenum, GLsizei, GLenum, GLenum, ptr) void
glColorTableSGI stdcall func(GLenum, GLenum, GLsizei, GLenum, GLenum, ptr) void
glCombinerInputNV stdcall func(GLenum, GLenum, GLenum, GLenum, GLenum, GLenum) void
glCombinerOutputNV stdcall func(GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean) void
glCombinerParameterfNV stdcall func(GLenum, GLfloat) void
glCombinerParameterfvNV stdcall func(GLenum, *GLfloat) void
glCombinerParameteriNV stdcall func(GLenum, GLint) void
glCombinerParameterivNV stdcall func(GLenum, *GLint) void
glCombinerStageParameterfvNV stdcall func(GLenum, GLenum, *GLfloat) void
glCompileShaderARB stdcall func(GLhandleARB) void
glCompileShaderIncludeARB stdcall func(GLuint, GLsizei, **GLchar, *GLint) void
glCompileShader stdcall func(GLuint) void
glCompressedMultiTexImage1DEXT stdcall func(GLenum, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ptr) void
glCompressedMultiTexImage2DEXT stdcall func(GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ptr) void
glCompressedMultiTexImage3DEXT stdcall func(GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ptr) void
glCompressedMultiTexSubImage1DEXT stdcall func(GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ptr) void
glCompressedMultiTexSubImage2DEXT stdcall func(GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ptr) void
glCompressedMultiTexSubImage3DEXT stdcall func(GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ptr) void
glCompressedTexImage1DARB stdcall func(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ptr) void
glCompressedTexImage1D stdcall func(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ptr) void
glCompressedTexImage2DARB stdcall func(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ptr) void
glCompressedTexImage2D stdcall func(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ptr) void
glCompressedTexImage3DARB stdcall func(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ptr) void
glCompressedTexImage3D stdcall func(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ptr) void
glCompressedTexSubImage1DARB stdcall func(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ptr) void
glCompressedTexSubImage1D stdcall func(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ptr) void
glCompressedTexSubImage2DARB stdcall func(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ptr) void
glCompressedTexSubImage2D stdcall func(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ptr) void
glCompressedTexSubImage3DARB stdcall func(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ptr) void
glCompressedTexSubImage3D stdcall func(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ptr) void
glCompressedTextureImage1DEXT stdcall func(GLuint, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ptr) void
glCompressedTextureImage2DEXT stdcall func(GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ptr) void
glCompressedTextureImage3DEXT stdcall func(GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ptr) void
glCompressedTextureSubImage1DEXT stdcall func(GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ptr) void
glCompressedTextureSubImage1D stdcall func(GLuint, GLint, GLint, GLsizei, GLenum, GLsizei, ptr) void
glCompressedTextureSubImage2DEXT stdcall func(GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ptr) void
glCompressedTextureSubImage2D stdcall func(GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ptr) void
glCompressedTextureSubImage3DEXT stdcall func(GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ptr) void
glCompressedTextureSubImage3D stdcall func(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ptr) void
glConservativeRasterParameterfNV stdcall func(GLenum, GLfloat) void
glConvolutionFilter1DEXT stdcall func(GLenum, GLenum, GLsizei, GLenum, GLenum, ptr) void
glConvolutionFilter1D stdcall func(GLenum, GLenum, GLsizei, GLenum, GLenum, ptr) void
glConvolutionFilter2DEXT stdcall func(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ptr) void
glConvolutionFilter2D stdcall func(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ptr) void
glConvolutionParameterfEXT stdcall func(GLenum, GLenum, GLfloat) void
glConvolutionParameterf stdcall func(GLenum, GLenum, GLfloat) void
glConvolutionParameterfvEXT stdcall func(GLenum, GLenum, *GLfloat) void
glConvolutionParameterfv stdcall func(GLenum, GLenum, *GLfloat) void
glConvolutionParameteriEXT stdcall func(GLenum, GLenum, GLint) void
glConvolutionParameteri stdcall func(GLenum, GLenum, GLint) void
glConvolutionParameterivEXT stdcall func(GLenum, GLenum, *GLint) void
glConvolutionParameteriv stdcall func(GLenum, GLenum, *GLint) void
glCopyBufferSubData stdcall func(GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr) void
glCopyColorSubTableEXT stdcall func(GLenum, GLsizei, GLint, GLint, GLsizei) void
glCopyColorSubTable stdcall func(GLenum, GLsizei, GLint, GLint, GLsizei) void
glCopyColorTable stdcall func(GLenum, GLenum, GLint, GLint, GLsizei) void
glCopyColorTableSGI stdcall func(GLenum, GLenum, GLint, GLint, GLsizei) void
glCopyConvolutionFilter1DEXT stdcall func(GLenum, GLenum, GLint, GLint, GLsizei) void
glCopyConvolutionFilter1D stdcall func(GLenum, GLenum, GLint, GLint, GLsizei) void
glCopyConvolutionFilter2DEXT stdcall func(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei) void
glCopyConvolutionFilter2D stdcall func(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei) void
glCopyImageSubDataNV stdcall func(GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) void
glCopyImageSubData stdcall func(GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) void
glCopyMultiTexImage1DEXT stdcall func(GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) void
glCopyMultiTexImage2DEXT stdcall func(GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) void
glCopyMultiTexSubImage1DEXT stdcall func(GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei) void
glCopyMultiTexSubImage2DEXT stdcall func(GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) void
glCopyMultiTexSubImage3DEXT stdcall func(GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) void
glCopyNamedBufferSubData stdcall func(GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr) void
glCopyPathNV stdcall func(GLuint, GLuint) void
glCopyTexImage1DEXT stdcall func(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) void
glCopyTexImage2DEXT stdcall func(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) void
glCopyTexSubImage1DEXT stdcall func(GLenum, GLint, GLint, GLint, GLint, GLsizei) void
glCopyTexSubImage2DEXT stdcall func(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) void
glCopyTexSubImage3DEXT stdcall func(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) void
glCopyTexSubImage3D stdcall func(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) void
glCopyTextureImage1DEXT stdcall func(GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) void
glCopyTextureImage2DEXT stdcall func(GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) void
glCopyTextureSubImage1DEXT stdcall func(GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei) void
glCopyTextureSubImage1D stdcall func(GLuint, GLint, GLint, GLint, GLint, GLsizei) void
glCopyTextureSubImage2DEXT stdcall func(GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) void
glCopyTextureSubImage2D stdcall func(GLuint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) void
glCopyTextureSubImage3DEXT stdcall func(GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) void
glCopyTextureSubImage3D stdcall func(GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) void
glCoverageModulationNV stdcall func(GLenum) void
glCoverageModulationTableNV stdcall func(GLsizei, *GLfloat) void
glCoverFillPathInstancedNV stdcall func(GLsizei, GLenum, ptr, GLuint, GLenum, GLenum, *GLfloat) void
glCoverFillPathNV stdcall func(GLuint, GLenum) void
glCoverStrokePathInstancedNV stdcall func(GLsizei, GLenum, ptr, GLuint, GLenum, GLenum, *GLfloat) void
glCoverStrokePathNV stdcall func(GLuint, GLenum) void
glCreateBuffers stdcall func(GLsizei, *GLuint) void
glCreateFramebuffers stdcall func(GLsizei, *GLuint) void
glCreatePerfQueryINTEL stdcall func(GLuint, *GLuint) void
glCreateProgram stdcall func() GLuint
glCreateProgramPipelines stdcall func(GLsizei, *GLuint) void
glCreateQueries stdcall func(GLenum, GLsizei, *GLuint) void
glCreateRenderbuffers stdcall func(GLsizei, *GLuint) void
glCreateSamplers stdcall func(GLsizei, *GLuint) void
glCreateShader stdcall func(GLenum) GLuint
glCreateTextures stdcall func(GLenum, GLsizei, *GLuint) void
glCreateTransformFeedbacks stdcall func(GLsizei, *GLuint) void
glCreateVertexArrays stdcall func(GLsizei, *GLuint) void
glCullParameterdvEXT stdcall func(GLenum, *GLdouble) void
glCullParameterfvEXT stdcall func(GLenum, *GLfloat) void
glCurrentPaletteMatrixARB stdcall func(GLint) void
glDebugMessageCallbackAMD stdcall func(stdcall func(GLuint, GLenum, GLenum, GLsizei, *GLchar, ptr) void, ptr) void
glDebugMessageCallbackARB stdcall func(stdcall func(GLenum, GLenum, GLuint, GLenum, GLsizei, *GLchar, ptr) void, ptr) void
glDebugMessageCallback stdcall func(stdcall func(GLuint, GLenum, GLenum, GLsizei, *GLchar, ptr) void, ptr) void
glDebugMessageControlARB stdcall func(GLenum, GLenum, GLenum, GLsizei, *GLuint, GLboolean) void
glDebugMessageControl stdcall func(GLenum, GLenum, GLenum, GLsizei, *GLuint, GLboolean) void
glDebugMessageEnableAMD stdcall func(GLenum, GLenum, GLsizei, *GLuint, GLboolean) void
glDebugMessageInsertAMD stdcall func(GLenum, GLenum, GLuint, GLsizei, *GLchar) void
glDebugMessageInsertARB stdcall func(GLenum, GLenum, GLuint, GLenum, GLsizei, *GLchar) void
glDebugMessageInsert stdcall func(GLenum, GLenum, GLuint, GLenum, GLsizei, *GLchar) void
glDeleteAsyncMarkersSGIX stdcall func(GLuint, GLsizei) void
glDeleteBufferRegion stdcall func(GLenum) void
glDeleteBuffersARB stdcall func(GLsizei, *GLuint) void
glDeleteBuffers stdcall func(GLsizei, *GLuint) void
glDeleteFencesAPPLE stdcall func(GLsizei, *GLuint) void
glDeleteFencesNV stdcall func(GLsizei, *GLuint) void
glDeleteFragmentShaderATI stdcall func(GLuint) void
glDeleteFramebuffersEXT stdcall func(GLsizei, *GLuint) void
glDeleteFramebuffers stdcall func(GLsizei, *GLuint) void
glDeleteNamedStringARB stdcall func(GLint, *GLchar) void
glDeleteNamesAMD stdcall func(GLenum, GLuint, *GLuint) void
glDeleteObjectARB stdcall func(GLhandleARB) void
glDeleteOcclusionQueriesNV stdcall func(GLsizei, *GLuint) void
glDeletePathsNV stdcall func(GLuint, GLsizei) void
glDeletePerfMonitorsAMD stdcall func(GLsizei, *GLuint) void
glDeletePerfQueryINTEL stdcall func(GLuint) void
glDeleteProgramPipelines stdcall func(GLsizei, *GLuint) void
glDeleteProgram stdcall func(GLuint) void
glDeleteProgramsARB stdcall func(GLsizei, *GLuint) void
glDeleteProgramsNV stdcall func(GLsizei, *GLuint) void
glDeleteQueriesANGLE stdcall func(GLsizei, *GLuint) void
glDeleteQueriesARB stdcall func(GLsizei, *GLuint) void
glDeleteQueries stdcall func(GLsizei, *GLuint) void
glDeleteRenderbuffersEXT stdcall func(GLsizei, *GLuint) void
glDeleteRenderbuffers stdcall func(GLsizei, *GLuint) void
glDeleteSamplers stdcall func(GLsizei, *GLuint) void
glDeleteShader stdcall func(GLuint) void
glDeleteSync stdcall func(GLsync) void
glDeleteTexturesEXT stdcall func(GLsizei, *GLuint) void
glDeleteTransformFeedbacksNV stdcall func(GLsizei, *GLuint) void
glDeleteTransformFeedbacks stdcall func(GLsizei, *GLuint) void
glDeleteVertexArraysAPPLE stdcall func(GLsizei, *GLuint) void
glDeleteVertexArrays stdcall func(GLsizei, *GLuint) void
glDeleteVertexShaderEXT stdcall func(GLuint) void
glDepthBoundsdNV stdcall func(GLdouble, GLdouble) void
glDepthBoundsEXT stdcall func(GLclampd, GLclampd) void
glDepthRangeArrayv stdcall func(GLuint, GLsizei, *GLclampd) void
glDepthRangedNV stdcall func(GLdouble, GLdouble) void
glDepthRangefOES stdcall func(GLclampf, GLclampf) void
glDepthRangef stdcall func(GLclampf, GLclampf) void
glDepthRangeIndexed stdcall func(GLuint, GLclampd, GLclampd) void
glDepthRangex stdcall func(GLclampx, GLclampx) void
glDetachObjectARB stdcall func(GLhandleARB, GLhandleARB) void
glDetachShader stdcall func(GLuint, GLuint) void
glDetailTexFuncSGIS stdcall func(GLenum, GLsizei, *GLfloat) void
glDisableClientStateiEXT stdcall func(GLenum, GLuint) void
glDisableClientStateIndexedEXT stdcall func(GLenum, GLuint) void
glDisableIndexedEXT stdcall func(GLenum, GLuint) void
glDisablei stdcall func(GLenum, GLuint) void
glDisableVariantClientStateEXT stdcall func(GLuint) void
glDisableVertexArrayAttribEXT stdcall func(GLuint, GLuint) void
glDisableVertexArrayAttrib stdcall func(GLuint, GLuint) void
glDisableVertexArrayEXT stdcall func(GLuint, GLenum) void
glDisableVertexAttribAPPLE stdcall func(GLuint, GLenum) void
glDisableVertexAttribArrayARB stdcall func(GLuint) void
glDisableVertexAttribArray stdcall func(GLuint) void
glDispatchComputeGroupSizeARB stdcall func(GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) void
glDispatchComputeIndirect stdcall func(GLintptr) void
glDispatchCompute stdcall func(GLuint, GLuint, GLuint) void
glDrawArraysEXT stdcall func(GLenum, GLint, GLsizei) void
glDrawArraysIndirect stdcall func(GLenum, ptr) void
glDrawArraysInstancedANGLE stdcall func(GLenum, GLint, GLsizei, GLsizei) void
glDrawArraysInstancedARB stdcall func(GLenum, GLint, GLsizei, GLsizei) void
glDrawArraysInstancedBaseInstance stdcall func(GLenum, GLint, GLsizei, GLsizei, GLuint) void
glDrawArraysInstancedEXT stdcall func(GLenum, GLint, GLsizei, GLsizei) void
glDrawArraysInstanced stdcall func(GLenum, GLint, GLsizei, GLsizei) void
glDrawBufferRegion stdcall func(GLuint, GLint, GLint, GLsizei, GLsizei, GLint, GLint) void
glDrawBuffersARB stdcall func(GLsizei, *GLenum) void
glDrawBuffersATI stdcall func(GLsizei, *GLenum) void
glDrawBuffers stdcall func(GLsizei, *GLenum) void
glDrawElementArrayAPPLE stdcall func(GLenum, GLint, GLsizei) void
glDrawElementArrayATI stdcall func(GLenum, GLsizei) void
glDrawElementsBaseVertex stdcall func(GLenum, GLsizei, GLenum, ptr, GLint) void
glDrawElementsIndirect stdcall func(GLenum, GLenum, ptr) void
glDrawElementsInstancedANGLE stdcall func(GLenum, GLsizei, GLenum, ptr, GLsizei) void
glDrawElementsInstancedARB stdcall func(GLenum, GLsizei, GLenum, ptr, GLsizei) void
glDrawElementsInstancedBaseInstance stdcall func(GLenum, GLsizei, GLenum, ptr, GLsizei, GLuint) void
glDrawElementsInstancedBaseVertexBaseInstance stdcall func(GLenum, GLsizei, GLenum, ptr, GLsizei, GLint, GLuint) void
glDrawElementsInstancedBaseVertex stdcall func(GLenum, GLsizei, GLenum, ptr, GLsizei, GLint) void
glDrawElementsInstancedEXT stdcall func(GLenum, GLsizei, GLenum, ptr, GLsizei) void
glDrawElementsInstanced stdcall func(GLenum, GLsizei, GLenum, ptr, GLsizei) void
glDrawRangeElementArrayAPPLE stdcall func(GLenum, GLuint, GLuint, GLint, GLsizei) void
glDrawRangeElementArrayATI stdcall func(GLenum, GLuint, GLuint, GLsizei) void
glDrawRangeElementsBaseVertex stdcall func(GLenum, GLuint, GLuint, GLsizei, GLenum, ptr, GLint) void
glDrawRangeElementsEXT stdcall func(GLenum, GLuint, GLuint, GLsizei, GLenum, ptr) void
glDrawRangeElements stdcall func(GLenum, GLuint, GLuint, GLsizei, GLenum, ptr) void
glDrawTextureNV stdcall func(GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glDrawTransformFeedbackInstanced stdcall func(GLenum, GLuint, GLsizei) void
glDrawTransformFeedbackNV stdcall func(GLenum, GLuint) void
glDrawTransformFeedback stdcall func(GLenum, GLuint) void
glDrawTransformFeedbackStreamInstanced stdcall func(GLenum, GLuint, GLuint, GLsizei) void
glDrawTransformFeedbackStream stdcall func(GLenum, GLuint, GLuint) void
glEdgeFlagFormatNV stdcall func(GLsizei) void
glEdgeFlagPointerEXT stdcall func(GLsizei, GLsizei, *GLboolean) void
glEdgeFlagPointerListIBM stdcall func(GLint, **GLboolean, GLint) void
glElementPointerAPPLE stdcall func(GLenum, ptr) void
glElementPointerATI stdcall func(GLenum, ptr) void
glEnableClientStateiEXT stdcall func(GLenum, GLuint) void
glEnableClientStateIndexedEXT stdcall func(GLenum, GLuint) void
glEnableIndexedEXT stdcall func(GLenum, GLuint) void
glEnablei stdcall func(GLenum, GLuint) void
glEnableVariantClientStateEXT stdcall func(GLuint) void
glEnableVertexArrayAttribEXT stdcall func(GLuint, GLuint) void
glEnableVertexArrayAttrib stdcall func(GLuint, GLuint) void
glEnableVertexArrayEXT stdcall func(GLuint, GLenum) void
glEnableVertexAttribAPPLE stdcall func(GLuint, GLenum) void
glEnableVertexAttribArrayARB stdcall func(GLuint) void
glEnableVertexAttribArray stdcall func(GLuint) void
glEndConditionalRenderNV stdcall func() void
glEndConditionalRenderNVX stdcall func() void
glEndConditionalRender stdcall func() void
glEndFragmentShaderATI stdcall func() void
glEndOcclusionQueryNV stdcall func() void
glEndPerfMonitorAMD stdcall func(GLuint) void
glEndPerfQueryINTEL stdcall func(GLuint) void
glEndQueryANGLE stdcall func(GLenum) void
glEndQueryARB stdcall func(GLenum) void
glEndQueryIndexed stdcall func(GLenum, GLuint) void
glEndQuery stdcall func(GLenum) void
glEndSceneEXT stdcall func() void
glEndTransformFeedbackEXT stdcall func() void
glEndTransformFeedbackNV stdcall func() void
glEndTransformFeedback stdcall func() void
glEndVertexShaderEXT stdcall func() void
glEndVideoCaptureNV stdcall func(GLuint) void
glEvalMapsNV stdcall func(GLenum, GLenum) void
glExecuteProgramNV stdcall func(GLenum, GLuint, *GLfloat) void
glExtractComponentEXT stdcall func(GLuint, GLuint, GLuint) void
glFinalCombinerInputNV stdcall func(GLenum, GLenum, GLenum, GLenum) void
glFinishFenceAPPLE stdcall func(GLuint) void
glFinishFenceNV stdcall func(GLuint) void
glFinishObjectAPPLE stdcall func(GLenum, GLint) void
glFinishTextureSUNX stdcall func() void
glFlushMappedBufferRangeAPPLE stdcall func(GLenum, GLintptr, GLsizeiptr) void
glFlushMappedBufferRange stdcall func(GLenum, GLintptr, GLsizeiptr) void
glFlushMappedNamedBufferRangeEXT stdcall func(GLuint, GLintptr, GLsizeiptr) void
glFlushMappedNamedBufferRange stdcall func(GLuint, GLintptr, GLsizeiptr) void
glFlushPixelDataRangeNV stdcall func(GLenum) void
glFlushRasterSGIX stdcall func() void
glFlushVertexArrayRangeAPPLE stdcall func(GLsizei, ptr) void
glFlushVertexArrayRangeNV stdcall func() void
glFogCoorddEXT stdcall func(GLdouble) void
glFogCoordd stdcall func(GLdouble) void
glFogCoorddvEXT stdcall func(*GLdouble) void
glFogCoorddv stdcall func(*GLdouble) void
glFogCoordfEXT stdcall func(GLfloat) void
glFogCoordFormatNV stdcall func(GLenum, GLsizei) void
glFogCoordf stdcall func(GLfloat) void
glFogCoordfvEXT stdcall func(*GLfloat) void
glFogCoordfv stdcall func(*GLfloat) void
glFogCoordhNV stdcall func(GLhalf) void
glFogCoordhvNV stdcall func(*GLhalf) void
glFogCoordPointerEXT stdcall func(GLenum, GLsizei, ptr) void
glFogCoordPointerListIBM stdcall func(GLenum, GLint, *ptr, GLint) void
glFogCoordPointer stdcall func(GLenum, GLsizei, ptr) void
glFogFuncSGIS stdcall func(GLsizei, *GLfloat) void
glFogx stdcall func(GLenum, GLfixed) void
glFogxv stdcall func(GLenum, *GLfixed) void
glFragmentColorMaterialEXT stdcall func(GLenum, GLenum) void
glFragmentColorMaterialSGIX stdcall func(GLenum, GLenum) void
glFragmentCoverageColorNV stdcall func(GLuint) void
glFragmentLightfEXT stdcall func(GLenum, GLenum, GLfloat) void
glFragmentLightfSGIX stdcall func(GLenum, GLenum, GLfloat) void
glFragmentLightfvEXT stdcall func(GLenum, GLenum, *GLfloat) void
glFragmentLightfvSGIX stdcall func(GLenum, GLenum, *GLfloat) void
glFragmentLightiEXT stdcall func(GLenum, GLenum, GLint) void
glFragmentLightiSGIX stdcall func(GLenum, GLenum, GLint) void
glFragmentLightivEXT stdcall func(GLenum, GLenum, *GLint) void
glFragmentLightivSGIX stdcall func(GLenum, GLenum, *GLint) void
glFragmentLightModelfEXT stdcall func(GLenum, GLfloat) void
glFragmentLightModelfSGIX stdcall func(GLenum, GLfloat) void
glFragmentLightModelfvEXT stdcall func(GLenum, *GLfloat) void
glFragmentLightModelfvSGIX stdcall func(GLenum, *GLfloat) void
glFragmentLightModeliEXT stdcall func(GLenum, GLint) void
glFragmentLightModeliSGIX stdcall func(GLenum, GLint) void
glFragmentLightModelivEXT stdcall func(GLenum, *GLint) void
glFragmentLightModelivSGIX stdcall func(GLenum, *GLint) void
glFragmentMaterialfEXT stdcall func(GLenum, GLenum, GLfloat) void
glFragmentMaterialfSGIX stdcall func(GLenum, GLenum, GLfloat) void
glFragmentMaterialfvEXT stdcall func(GLenum, GLenum, *GLfloat) void
glFragmentMaterialfvSGIX stdcall func(GLenum, GLenum, *GLfloat) void
glFragmentMaterialiEXT stdcall func(GLenum, GLenum, GLint) void
glFragmentMaterialiSGIX stdcall func(GLenum, GLenum, GLint) void
glFragmentMaterialivEXT stdcall func(GLenum, GLenum, *GLint) void
glFragmentMaterialivSGIX stdcall func(GLenum, GLenum, *GLint) void
glFramebufferDrawBufferEXT stdcall func(GLuint, GLenum) void
glFramebufferDrawBuffersEXT stdcall func(GLuint, GLsizei, *GLenum) void
glFramebufferParameteri stdcall func(GLenum, GLenum, GLint) void
glFramebufferReadBufferEXT stdcall func(GLuint, GLenum) void
glFramebufferRenderbufferEXT stdcall func(GLenum, GLenum, GLenum, GLuint) void
glFramebufferRenderbuffer stdcall func(GLenum, GLenum, GLenum, GLuint) void
glFramebufferSampleLocationsfvARB stdcall func(GLenum, GLuint, GLsizei, *GLfloat) void
glFramebufferSampleLocationsfvNV stdcall func(GLenum, GLuint, GLsizei, *GLfloat) void
glFramebufferTexture1DEXT stdcall func(GLenum, GLenum, GLenum, GLuint, GLint) void
glFramebufferTexture1D stdcall func(GLenum, GLenum, GLenum, GLuint, GLint) void
glFramebufferTexture2DEXT stdcall func(GLenum, GLenum, GLenum, GLuint, GLint) void
glFramebufferTexture2D stdcall func(GLenum, GLenum, GLenum, GLuint, GLint) void
glFramebufferTexture3DEXT stdcall func(GLenum, GLenum, GLenum, GLuint, GLint, GLint) void
glFramebufferTexture3D stdcall func(GLenum, GLenum, GLenum, GLuint, GLint, GLint) void
glFramebufferTextureARB stdcall func(GLenum, GLenum, GLuint, GLint) void
glFramebufferTextureEXT stdcall func(GLenum, GLenum, GLuint, GLint) void
glFramebufferTextureFaceARB stdcall func(GLenum, GLenum, GLuint, GLint, GLenum) void
glFramebufferTextureFaceEXT stdcall func(GLenum, GLenum, GLuint, GLint, GLenum) void
glFramebufferTextureLayerARB stdcall func(GLenum, GLenum, GLuint, GLint, GLint) void
glFramebufferTextureLayerEXT stdcall func(GLenum, GLenum, GLuint, GLint, GLint) void
glFramebufferTextureLayer stdcall func(GLenum, GLenum, GLuint, GLint, GLint) void
glFramebufferTextureMultiviewOVR stdcall func(GLenum, GLenum, GLuint, GLint, GLint, GLsizei) void
glFramebufferTexture stdcall func(GLenum, GLenum, GLuint, GLint) void
glFrameTerminatorGREMEDY stdcall func() void
glFrameZoomSGIX stdcall func(GLint) void
glFreeObjectBufferATI stdcall func(GLuint) void
glFrustumfOES stdcall func(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glFrustumf stdcall func(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glFrustumx stdcall func(GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) void
glGenBuffersARB stdcall func(GLsizei, *GLuint) void
glGenBuffers stdcall func(GLsizei, *GLuint) void
glGenerateMipmapEXT stdcall func(GLenum) void
glGenerateMipmap stdcall func(GLenum) void
glGenerateMultiTexMipmapEXT stdcall func(GLenum, GLenum) void
glGenerateTextureMipmapEXT stdcall func(GLuint, GLenum) void
glGenerateTextureMipmap stdcall func(GLuint) void
glGenFencesAPPLE stdcall func(GLsizei, *GLuint) void
glGenFencesNV stdcall func(GLsizei, *GLuint) void
glGenFramebuffersEXT stdcall func(GLsizei, *GLuint) void
glGenFramebuffers stdcall func(GLsizei, *GLuint) void
glGenNamesAMD stdcall func(GLenum, GLuint, *GLuint) void
glGenOcclusionQueriesNV stdcall func(GLsizei, *GLuint) void
glGenPerfMonitorsAMD stdcall func(GLsizei, *GLuint) void
glGenProgramPipelines stdcall func(GLsizei, *GLuint) void
glGenProgramsARB stdcall func(GLsizei, *GLuint) void
glGenProgramsNV stdcall func(GLsizei, *GLuint) void
glGenQueriesANGLE stdcall func(GLsizei, *GLuint) void
glGenQueriesARB stdcall func(GLsizei, *GLuint) void
glGenQueries stdcall func(GLsizei, *GLuint) void
glGenRenderbuffersEXT stdcall func(GLsizei, *GLuint) void
glGenRenderbuffers stdcall func(GLsizei, *GLuint) void
glGenSamplers stdcall func(GLsizei, *GLuint) void
glGenTexturesEXT stdcall func(GLsizei, *GLuint) void
glGenTransformFeedbacksNV stdcall func(GLsizei, *GLuint) void
glGenTransformFeedbacks stdcall func(GLsizei, *GLuint) void
glGenVertexArraysAPPLE stdcall func(GLsizei, *GLuint) void
glGenVertexArrays stdcall func(GLsizei, *GLuint) void
glGetActiveAtomicCounterBufferiv stdcall func(GLuint, GLuint, GLenum, *GLint) void
glGetActiveAttribARB stdcall func(GLhandleARB, GLuint, GLsizei, *GLsizei, *GLint, *GLenum, *GLcharARB) void
glGetActiveAttrib stdcall func(GLuint, GLuint, GLsizei, *GLsizei, *GLint, *GLenum, *GLchar) void
glGetActiveSubroutineName stdcall func(GLuint, GLenum, GLuint, GLsizei, *GLsizei, *GLchar) void
glGetActiveSubroutineUniformiv stdcall func(GLuint, GLenum, GLuint, GLenum, *GLint) void
glGetActiveSubroutineUniformName stdcall func(GLuint, GLenum, GLuint, GLsizei, *GLsizei, *GLchar) void
glGetActiveUniformARB stdcall func(GLhandleARB, GLuint, GLsizei, *GLsizei, *GLint, *GLenum, *GLcharARB) void
glGetActiveUniformBlockiv stdcall func(GLuint, GLuint, GLenum, *GLint) void
glGetActiveUniformBlockName stdcall func(GLuint, GLuint, GLsizei, *GLsizei, *GLchar) void
glGetActiveUniformName stdcall func(GLuint, GLuint, GLsizei, *GLsizei, *GLchar) void
glGetActiveUniform stdcall func(GLuint, GLuint, GLsizei, *GLsizei, *GLint, *GLenum, *GLchar) void
glGetActiveUniformsiv stdcall func(GLuint, GLsizei, *GLuint, GLenum, *GLint) void
glGetActiveVaryingNV stdcall func(GLuint, GLuint, GLsizei, *GLsizei, *GLsizei, *GLenum, *GLchar) void
glGetArrayObjectfvATI stdcall func(GLenum, GLenum, *GLfloat) void
glGetArrayObjectivATI stdcall func(GLenum, GLenum, *GLint) void
glGetAttachedObjectsARB stdcall func(GLhandleARB, GLsizei, *GLsizei, *GLhandleARB) void
glGetAttachedShaders stdcall func(GLuint, GLsizei, *GLsizei, *GLuint) void
glGetBooleanIndexedvEXT stdcall func(GLenum, GLuint, *GLboolean) void
glGetBooleani_v stdcall func(GLenum, GLuint, *GLboolean) void
glGetBufferParameteri64v stdcall func(GLenum, GLenum, *GLint64) void
glGetBufferParameterivARB stdcall func(GLenum, GLenum, *GLint) void
glGetBufferParameteriv stdcall func(GLenum, GLenum, *GLint) void
glGetBufferParameterui64vNV stdcall func(GLenum, GLenum, *GLuint64EXT) void
glGetBufferPointervARB stdcall func(GLenum, GLenum, *ptr) void
glGetBufferPointerv stdcall func(GLenum, GLenum, *ptr) void
glGetBufferSubDataARB stdcall func(GLenum, GLintptrARB, GLsizeiptrARB, ptr) void
glGetBufferSubData stdcall func(GLenum, GLintptr, GLsizeiptr, ptr) void
glGetClipPlanefOES stdcall func(GLenum, *GLfloat) void
glGetClipPlanef stdcall func(GLenum, *GLfloat) void
glGetColorTableEXT stdcall func(GLenum, GLenum, GLenum, ptr) void
glGetColorTableParameterfvEXT stdcall func(GLenum, GLenum, *GLfloat) void
glGetColorTableParameterfv stdcall func(GLenum, GLenum, *GLfloat) void
glGetColorTableParameterfvSGI stdcall func(GLenum, GLenum, *GLfloat) void
glGetColorTableParameterivEXT stdcall func(GLenum, GLenum, *GLint) void
glGetColorTableParameteriv stdcall func(GLenum, GLenum, *GLint) void
glGetColorTableParameterivSGI stdcall func(GLenum, GLenum, *GLint) void
glGetColorTable stdcall func(GLenum, GLenum, GLenum, ptr) void
glGetColorTableSGI stdcall func(GLenum, GLenum, GLenum, ptr) void
glGetCombinerInputParameterfvNV stdcall func(GLenum, GLenum, GLenum, GLenum, *GLfloat) void
glGetCombinerInputParameterivNV stdcall func(GLenum, GLenum, GLenum, GLenum, *GLint) void
glGetCombinerOutputParameterfvNV stdcall func(GLenum, GLenum, GLenum, *GLfloat) void
glGetCombinerOutputParameterivNV stdcall func(GLenum, GLenum, GLenum, *GLint) void
glGetCombinerStageParameterfvNV stdcall func(GLenum, GLenum, *GLfloat) void
glGetCompressedMultiTexImageEXT stdcall func(GLenum, GLenum, GLint, ptr) void
glGetCompressedTexImageARB stdcall func(GLenum, GLint, ptr) void
glGetCompressedTexImage stdcall func(GLenum, GLint, ptr) void
glGetCompressedTextureImageEXT stdcall func(GLuint, GLenum, GLint, ptr) void
glGetCompressedTextureImage stdcall func(GLuint, GLint, GLsizei, ptr) void
glGetCompressedTextureSubImage stdcall func(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, ptr) void
glGetConvolutionFilterEXT stdcall func(GLenum, GLenum, GLenum, ptr) void
glGetConvolutionFilter stdcall func(GLenum, GLenum, GLenum, ptr) void
glGetConvolutionParameterfvEXT stdcall func(GLenum, GLenum, *GLfloat) void
glGetConvolutionParameterfv stdcall func(GLenum, GLenum, *GLfloat) void
glGetConvolutionParameterivEXT stdcall func(GLenum, GLenum, *GLint) void
glGetConvolutionParameteriv stdcall func(GLenum, GLenum, *GLint) void
glGetCoverageModulationTableNV stdcall func(GLsizei, *GLfloat) void
glGetDetailTexFuncSGIS stdcall func(GLenum, *GLfloat) void
glGetDoubleIndexedvEXT stdcall func(GLenum, GLuint, *GLdouble) void
glGetDoublei_vEXT stdcall func(GLenum, GLuint, *GLdouble) void
glGetDoublei_v stdcall func(GLenum, GLuint, *GLdouble) void
glGetFenceivNV stdcall func(GLuint, GLenum, *GLint) void
glGetFinalCombinerInputParameterfvNV stdcall func(GLenum, GLenum, *GLfloat) void
glGetFinalCombinerInputParameterivNV stdcall func(GLenum, GLenum, *GLint) void
glGetFirstPerfQueryIdINTEL stdcall func(*GLuint) void
glGetFixedv stdcall func(GLenum, *GLfixed) void
glGetFloatIndexedvEXT stdcall func(GLenum, GLuint, *GLfloat) void
glGetFloati_vEXT stdcall func(GLenum, GLuint, *GLfloat) void
glGetFloati_v stdcall func(GLenum, GLuint, *GLfloat) void
glGetFogFuncSGIS stdcall func(*GLfloat) void
glGetFragmentLightfvEXT stdcall func(GLenum, GLenum, *GLfloat) void
glGetFragmentLightfvSGIX stdcall func(GLenum, GLenum, *GLfloat) void
glGetFragmentLightivEXT stdcall func(GLenum, GLenum, *GLint) void
glGetFragmentLightivSGIX stdcall func(GLenum, GLenum, *GLint) void
glGetFragmentMaterialfvEXT stdcall func(GLenum, GLenum, *GLfloat) void
glGetFragmentMaterialfvSGIX stdcall func(GLenum, GLenum, *GLfloat) void
glGetFragmentMaterialivEXT stdcall func(GLenum, GLenum, *GLint) void
glGetFragmentMaterialivSGIX stdcall func(GLenum, GLenum, *GLint) void
glGetFramebufferAttachmentParameterivEXT stdcall func(GLenum, GLenum, GLenum, *GLint) void
glGetFramebufferAttachmentParameteriv stdcall func(GLenum, GLenum, GLenum, *GLint) void
glGetFramebufferParameterivEXT stdcall func(GLuint, GLenum, *GLint) void
glGetFramebufferParameteriv stdcall func(GLenum, GLenum, *GLint) void
glGetHistogramEXT stdcall func(GLenum, GLboolean, GLenum, GLenum, ptr) void
glGetHistogramParameterfvEXT stdcall func(GLenum, GLenum, *GLfloat) void
glGetHistogramParameterfv stdcall func(GLenum, GLenum, *GLfloat) void
glGetHistogramParameterivEXT stdcall func(GLenum, GLenum, *GLint) void
glGetHistogramParameteriv stdcall func(GLenum, GLenum, *GLint) void
glGetHistogram stdcall func(GLenum, GLboolean, GLenum, GLenum, ptr) void
glGetImageTransformParameterfvHP stdcall func(GLenum, GLenum, *GLfloat) void
glGetImageTransformParameterivHP stdcall func(GLenum, GLenum, *GLint) void
glGetInfoLogARB stdcall func(GLhandleARB, GLsizei, *GLsizei, *GLcharARB) void
glGetInteger64i_v stdcall func(GLenum, GLuint, *GLint64) void
glGetInteger64v stdcall func(GLenum, *GLint64) void
glGetIntegerIndexedvEXT stdcall func(GLenum, GLuint, *GLint) void
glGetIntegeri_v stdcall func(GLenum, GLuint, *GLint) void
glGetIntegerui64i_vNV stdcall func(GLenum, GLuint, **GLuint64EXT, stdcall func(GLenum, GLsizei) void) void
glGetIntegerui64vNV stdcall func(GLenum, *GLuint64EXT) void
glGetInternalformati64v stdcall func(GLenum, GLenum, GLenum, GLsizei, *GLint64) void
glGetInternalformativ stdcall func(GLenum, GLenum, GLenum, GLsizei, *GLint) void
glGetInternalformatSampleivNV stdcall func(GLenum, GLenum, GLsizei, GLenum, GLsizei, *GLint) void
glGetInvariantBooleanvEXT stdcall func(GLuint, GLenum, *GLboolean) void
glGetInvariantFloatvEXT stdcall func(GLuint, GLenum, *GLfloat) void
glGetInvariantIntegervEXT stdcall func(GLuint, GLenum, *GLint) void
glGetLightxv stdcall func(GLenum, GLenum, *GLfixed) void
glGetLocalConstantBooleanvEXT stdcall func(GLuint, GLenum, *GLboolean) void
glGetLocalConstantFloatvEXT stdcall func(GLuint, GLenum, *GLfloat) void
glGetLocalConstantIntegervEXT stdcall func(GLuint, GLenum, *GLint) void
glGetMapAttribParameterfvNV stdcall func(GLenum, GLuint, GLenum, *GLfloat) void
glGetMapAttribParameterivNV stdcall func(GLenum, GLuint, GLenum, *GLint) void
glGetMapControlPointsNV stdcall func(GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean, ptr) void
glGetMapParameterfvNV stdcall func(GLenum, GLenum, *GLfloat) void
glGetMapParameterivNV stdcall func(GLenum, GLenum, *GLint) void
glGetMaterialxv stdcall func(GLenum, GLenum, *GLfixed) void
glGetMinmaxEXT stdcall func(GLenum, GLboolean, GLenum, GLenum, ptr) void
glGetMinmaxParameterfvEXT stdcall func(GLenum, GLenum, *GLfloat) void
glGetMinmaxParameterfv stdcall func(GLenum, GLenum, *GLfloat) void
glGetMinmaxParameterivEXT stdcall func(GLenum, GLenum, *GLint) void
glGetMinmaxParameteriv stdcall func(GLenum, GLenum, *GLint) void
glGetMinmax stdcall func(GLenum, GLboolean, GLenum, GLenum, ptr) void
glGetMultisamplefvNV stdcall func(GLenum, GLuint, *GLfloat) void
glGetMultisamplefv stdcall func(GLenum, GLuint, *GLfloat) void
glGetMultiTexEnvfvEXT stdcall func(GLenum, GLenum, GLenum, *GLfloat) void
glGetMultiTexEnvivEXT stdcall func(GLenum, GLenum, GLenum, *GLint) void
glGetMultiTexGendvEXT stdcall func(GLenum, GLenum, GLenum, *GLdouble) void
glGetMultiTexGenfvEXT stdcall func(GLenum, GLenum, GLenum, *GLfloat) void
glGetMultiTexGenivEXT stdcall func(GLenum, GLenum, GLenum, *GLint) void
glGetMultiTexImageEXT stdcall func(GLenum, GLenum, GLint, GLenum, GLenum, ptr) void
glGetMultiTexLevelParameterfvEXT stdcall func(GLenum, GLenum, GLint, GLenum, *GLfloat) void
glGetMultiTexLevelParameterivEXT stdcall func(GLenum, GLenum, GLint, GLenum, *GLint) void
glGetMultiTexParameterfvEXT stdcall func(GLenum, GLenum, GLenum, *GLfloat) void
glGetMultiTexParameterIivEXT stdcall func(GLenum, GLenum, GLenum, *GLint) void
glGetMultiTexParameterIuivEXT stdcall func(GLenum, GLenum, GLenum, *GLuint) void
glGetMultiTexParameterivEXT stdcall func(GLenum, GLenum, GLenum, *GLint) void
glGetNamedBufferParameteri64v stdcall func(GLuint, GLenum, *GLint64) void
glGetNamedBufferParameterivEXT stdcall func(GLuint, GLenum, *GLint) void
glGetNamedBufferParameteriv stdcall func(GLuint, GLenum, *GLint) void
glGetNamedBufferParameterui64vNV stdcall func(GLuint, GLenum, *GLuint64EXT) void
glGetNamedBufferPointervEXT stdcall func(GLuint, GLenum, *ptr) void
glGetNamedBufferPointerv stdcall func(GLuint, GLenum, *ptr) void
glGetNamedBufferSubDataEXT stdcall func(GLuint, GLintptr, GLsizeiptr, ptr) void
glGetNamedBufferSubData stdcall func(GLuint, GLintptr, GLsizeiptr, ptr) void
glGetNamedFramebufferAttachmentParameterivEXT stdcall func(GLuint, GLenum, GLenum, *GLint) void
glGetNamedFramebufferAttachmentParameteriv stdcall func(GLuint, GLenum, GLenum, *GLint) void
glGetNamedFramebufferParameterivEXT stdcall func(GLuint, GLenum, *GLint) void
glGetNamedFramebufferParameteriv stdcall func(GLuint, GLenum, *GLint) void
glGetNamedProgramivEXT stdcall func(GLuint, GLenum, GLenum, *GLint) void
glGetNamedProgramLocalParameterdvEXT stdcall func(GLuint, GLenum, GLuint, *GLdouble) void
glGetNamedProgramLocalParameterfvEXT stdcall func(GLuint, GLenum, GLuint, *GLfloat) void
glGetNamedProgramLocalParameterIivEXT stdcall func(GLuint, GLenum, GLuint, *GLint) void
glGetNamedProgramLocalParameterIuivEXT stdcall func(GLuint, GLenum, GLuint, *GLuint) void
glGetNamedProgramStringEXT stdcall func(GLuint, GLenum, GLenum, ptr) void
glGetNamedRenderbufferParameterivEXT stdcall func(GLuint, GLenum, *GLint) void
glGetNamedRenderbufferParameteriv stdcall func(GLuint, GLenum, *GLint) void
glGetNamedStringARB stdcall func(GLint, *GLchar, GLsizei, *GLint, *GLchar) void
glGetNamedStringivARB stdcall func(GLint, *GLchar, GLenum, *GLint) void
glGetnColorTableARB stdcall func(GLenum, GLenum, GLenum, GLsizei, ptr) void
glGetnCompressedTexImageARB stdcall func(GLenum, GLint, GLsizei, ptr) void
glGetnCompressedTexImage stdcall func(GLenum, GLint, GLsizei, ptr) void
glGetnConvolutionFilterARB stdcall func(GLenum, GLenum, GLenum, GLsizei, ptr) void
glGetNextPerfQueryIdINTEL stdcall func(GLuint, *GLuint) void
glGetnHistogramARB stdcall func(GLenum, GLboolean, GLenum, GLenum, GLsizei, ptr) void
glGetnMapdvARB stdcall func(GLenum, GLenum, GLsizei, *GLdouble) void
glGetnMapfvARB stdcall func(GLenum, GLenum, GLsizei, *GLfloat) void
glGetnMapivARB stdcall func(GLenum, GLenum, GLsizei, *GLint) void
glGetnMinmaxARB stdcall func(GLenum, GLboolean, GLenum, GLenum, GLsizei, ptr) void
glGetnPixelMapfvARB stdcall func(GLenum, GLsizei, *GLfloat) void
glGetnPixelMapuivARB stdcall func(GLenum, GLsizei, *GLuint) void
glGetnPixelMapusvARB stdcall func(GLenum, GLsizei, *GLushort) void
glGetnPolygonStippleARB stdcall func(GLsizei, *GLubyte) void
glGetnSeparableFilterARB stdcall func(GLenum, GLenum, GLenum, GLsizei, ptr, GLsizei, ptr, ptr) void
glGetnTexImageARB stdcall func(GLenum, GLint, GLenum, GLenum, GLsizei, ptr) void
glGetnTexImage stdcall func(GLenum, GLint, GLenum, GLenum, GLsizei, ptr) void
glGetnUniformdvARB stdcall func(GLuint, GLint, GLsizei, *GLdouble) void
glGetnUniformdv stdcall func(GLuint, GLint, GLsizei, *GLdouble) void
glGetnUniformfvARB stdcall func(GLuint, GLint, GLsizei, *GLfloat) void
glGetnUniformfv stdcall func(GLuint, GLint, GLsizei, *GLfloat) void
glGetnUniformi64vARB stdcall func(GLuint, GLint, GLsizei, *GLint64) void
glGetnUniformivARB stdcall func(GLuint, GLint, GLsizei, *GLint) void
glGetnUniformiv stdcall func(GLuint, GLint, GLsizei, *GLint) void
glGetnUniformui64vARB stdcall func(GLuint, GLint, GLsizei, *GLuint64) void
glGetnUniformuivARB stdcall func(GLuint, GLint, GLsizei, *GLuint) void
glGetnUniformuiv stdcall func(GLuint, GLint, GLsizei, *GLuint) void
glGetObjectBufferfvATI stdcall func(GLuint, GLenum, *GLfloat) void
glGetObjectBufferivATI stdcall func(GLuint, GLenum, *GLint) void
glGetObjectLabelEXT stdcall func(GLenum, GLuint, GLsizei, *GLsizei, *GLchar) void
glGetObjectLabel stdcall func(GLenum, GLuint, GLsizei, *GLsizei, *GLchar) void
glGetObjectParameterfvARB stdcall func(GLhandleARB, GLenum, *GLfloat) void
glGetObjectParameterivAPPLE stdcall func(GLenum, GLuint, GLenum, *GLint) void
glGetObjectParameterivARB stdcall func(GLhandleARB, GLenum, *GLint) void
glGetObjectPtrLabel stdcall func(ptr, GLsizei, *GLsizei, *GLchar) void
glGetOcclusionQueryivNV stdcall func(GLuint, GLenum, *GLint) void
glGetOcclusionQueryuivNV stdcall func(GLuint, GLenum, *GLuint) void
glGetPathColorGenfvNV stdcall func(GLenum, GLenum, *GLfloat) void
glGetPathColorGenivNV stdcall func(GLenum, GLenum, *GLint) void
glGetPathCommandsNV stdcall func(GLuint, *GLubyte) void
glGetPathCoordsNV stdcall func(GLuint, *GLfloat) void
glGetPathDashArrayNV stdcall func(GLuint, *GLfloat) void
glGetPathMetricRangeNV stdcall func(GLbitfield, GLuint, GLsizei, GLsizei, *GLfloat) void
glGetPathMetricsNV stdcall func(GLbitfield, GLsizei, GLenum, ptr, GLuint, GLsizei, *GLfloat) void
glGetPathParameterfvNV stdcall func(GLuint, GLenum, *GLfloat) void
glGetPathParameterivNV stdcall func(GLuint, GLenum, *GLint) void
glGetPathSpacingNV stdcall func(GLenum, GLsizei, GLenum, ptr, GLuint, GLfloat, GLfloat, GLenum, *GLfloat) void
glGetPathTexGenfvNV stdcall func(GLenum, GLenum, *GLfloat) void
glGetPathTexGenivNV stdcall func(GLenum, GLenum, *GLint) void
glGetPerfCounterInfoINTEL stdcall func(GLuint, GLuint, GLuint, *GLchar, GLuint, *GLchar, *GLuint, *GLuint, *GLuint, *GLuint, *GLuint64) void
glGetPerfMonitorCounterDataAMD stdcall func(GLuint, GLenum, GLsizei, *GLuint, *GLint) void
glGetPerfMonitorCounterInfoAMD stdcall func(GLuint, GLuint, GLenum, ptr) void
glGetPerfMonitorCountersAMD stdcall func(GLuint, *GLint, *GLint, GLsizei, *GLuint) void
glGetPerfMonitorCounterStringAMD stdcall func(GLuint, GLuint, GLsizei, *GLsizei, *GLchar) void
glGetPerfMonitorGroupsAMD stdcall func(*GLint, GLsizei, *GLuint) void
glGetPerfMonitorGroupStringAMD stdcall func(GLuint, GLsizei, *GLsizei, *GLchar) void
glGetPerfQueryDataINTEL stdcall func(GLuint, GLuint, GLsizei, ptr, *GLuint) void
glGetPerfQueryIdByNameINTEL stdcall func(*GLchar, *GLuint) void
glGetPerfQueryInfoINTEL stdcall func(GLuint, GLuint, *GLchar, *GLuint, *GLuint, *GLuint, *GLuint) void
glGetPixelTransformParameterfvEXT stdcall func(GLenum, GLenum, *GLfloat) void
glGetPixelTransformParameterivEXT stdcall func(GLenum, GLenum, *GLint) void
glGetPointerIndexedvEXT stdcall func(GLenum, GLuint, *ptr) void
glGetPointeri_vEXT stdcall func(GLenum, GLuint, *ptr) void
glGetProgramBinary stdcall func(GLuint, GLsizei, *GLsizei, *GLenum, ptr) void
glGetProgramEnvParameterdvARB stdcall func(GLenum, GLuint, *GLdouble) void
glGetProgramEnvParameterfvARB stdcall func(GLenum, GLuint, *GLfloat) void
glGetProgramInfoLog stdcall func(GLuint, GLsizei, *GLsizei, *GLchar) void
glGetProgramInterfaceiv stdcall func(GLuint, GLenum, GLenum, *GLint) void
glGetProgramivARB stdcall func(GLenum, GLenum, *GLint) void
glGetProgramivNV stdcall func(GLuint, GLenum, *GLint) void
glGetProgramiv stdcall func(GLuint, GLenum, *GLint) void
glGetProgramLocalParameterdvARB stdcall func(GLenum, GLuint, *GLdouble) void
glGetProgramLocalParameterfvARB stdcall func(GLenum, GLuint, *GLfloat) void
glGetProgramNamedParameterdvNV stdcall func(GLuint, GLsizei, *GLubyte, *GLdouble) void
glGetProgramNamedParameterfvNV stdcall func(GLuint, GLsizei, *GLubyte, *GLfloat) void
glGetProgramParameterdvNV stdcall func(GLenum, GLuint, GLenum, *GLdouble) void
glGetProgramParameterfvNV stdcall func(GLenum, GLuint, GLenum, *GLfloat) void
glGetProgramPipelineInfoLog stdcall func(GLuint, GLsizei, *GLsizei, *GLchar) void
glGetProgramPipelineiv stdcall func(GLuint, GLenum, *GLint) void
glGetProgramResourcefvNV stdcall func(GLuint, GLenum, GLuint, GLsizei, *GLenum, GLsizei, *GLsizei, *GLfloat) void
glGetProgramResourceiv stdcall func(GLuint, GLenum, GLuint, GLsizei, *GLenum, GLsizei, *GLsizei, *GLint) void
glGetProgramResourceName stdcall func(GLuint, GLenum, GLuint, GLsizei, *GLsizei, *GLchar) void
glGetProgramStageiv stdcall func(GLuint, GLenum, GLenum, *GLint) void
glGetProgramStringARB stdcall func(GLenum, GLenum, ptr) void
glGetProgramStringNV stdcall func(GLuint, GLenum, *GLubyte) void
glGetQueryBufferObjecti64v stdcall func(GLuint, GLuint, GLenum, GLintptr) void
glGetQueryBufferObjectiv stdcall func(GLuint, GLuint, GLenum, GLintptr) void
glGetQueryBufferObjectui64v stdcall func(GLuint, GLuint, GLenum, GLintptr) void
glGetQueryBufferObjectuiv stdcall func(GLuint, GLuint, GLenum, GLintptr) void
glGetQueryIndexediv stdcall func(GLenum, GLuint, GLenum, *GLint) void
glGetQueryivANGLE stdcall func(GLenum, GLenum, *GLint) void
glGetQueryivARB stdcall func(GLenum, GLenum, *GLint) void
glGetQueryiv stdcall func(GLenum, GLenum, *GLint) void
glGetQueryObjecti64vANGLE stdcall func(GLuint, GLenum, *GLint64) void
glGetQueryObjecti64vEXT stdcall func(GLuint, GLenum, *GLint64EXT) void
glGetQueryObjecti64v stdcall func(GLuint, GLenum, *GLint64) void
glGetQueryObjectivANGLE stdcall func(GLuint, GLenum, *GLint) void
glGetQueryObjectivARB stdcall func(GLuint, GLenum, *GLint) void
glGetQueryObjectiv stdcall func(GLuint, GLenum, *GLint) void
glGetQueryObjectui64vANGLE stdcall func(GLuint, GLenum, *GLuint64) void
glGetQueryObjectui64vEXT stdcall func(GLuint, GLenum, *GLuint64EXT) void
glGetQueryObjectui64v stdcall func(GLuint, GLenum, *GLuint64) void
glGetQueryObjectuivANGLE stdcall func(GLuint, GLenum, *GLuint) void
glGetQueryObjectuivARB stdcall func(GLuint, GLenum, *GLuint) void
glGetQueryObjectuiv stdcall func(GLuint, GLenum, *GLuint) void
glGetRenderbufferParameterivEXT stdcall func(GLenum, GLenum, *GLint) void
glGetRenderbufferParameteriv stdcall func(GLenum, GLenum, *GLint) void
glGetSamplerParameterfv stdcall func(GLuint, GLenum, *GLfloat) void
glGetSamplerParameterIiv stdcall func(GLuint, GLenum, *GLint) void
glGetSamplerParameterIuiv stdcall func(GLuint, GLenum, *GLuint) void
glGetSamplerParameteriv stdcall func(GLuint, GLenum, *GLint) void
glGetSeparableFilterEXT stdcall func(GLenum, GLenum, GLenum, ptr, ptr, ptr) void
glGetSeparableFilter stdcall func(GLenum, GLenum, GLenum, ptr, ptr, ptr) void
glGetShaderInfoLog stdcall func(GLuint, GLsizei, *GLsizei, *GLchar) void
glGetShaderiv stdcall func(GLuint, GLenum, *GLint) void
glGetShaderPrecisionFormat stdcall func(GLenum, GLenum, *GLint, *GLint) void
glGetShaderSourceARB stdcall func(GLhandleARB, GLsizei, *GLsizei, *GLcharARB) void
glGetShaderSource stdcall func(GLuint, GLsizei, *GLsizei, *GLchar) void
glGetSharpenTexFuncSGIS stdcall func(GLenum, *GLfloat) void
glGetSynciv stdcall func(GLsync, GLenum, GLsizei, *GLsizei, *GLint) void
glGetTexBumpParameterfvATI stdcall func(GLenum, *GLfloat) void
glGetTexBumpParameterivATI stdcall func(GLenum, *GLint) void
glGetTexEnvxv stdcall func(GLenum, GLenum, *GLfixed) void
glGetTexFilterFuncSGIS stdcall func(GLenum, GLenum, *GLfloat) void
glGetTexParameterIivEXT stdcall func(GLenum, GLenum, *GLint) void
glGetTexParameterIiv stdcall func(GLenum, GLenum, *GLint) void
glGetTexParameterIuivEXT stdcall func(GLenum, GLenum, *GLuint) void
glGetTexParameterIuiv stdcall func(GLenum, GLenum, *GLuint) void
glGetTexParameterPointervAPPLE stdcall func(GLenum, GLenum, *ptr) void
glGetTexParameterxv stdcall func(GLenum, GLenum, *GLfixed) void
glGetTextureImageEXT stdcall func(GLuint, GLenum, GLint, GLenum, GLenum, ptr) void
glGetTextureImage stdcall func(GLuint, GLint, GLenum, GLenum, GLsizei, ptr) void
glGetTextureLevelParameterfvEXT stdcall func(GLuint, GLenum, GLint, GLenum, *GLfloat) void
glGetTextureLevelParameterfv stdcall func(GLuint, GLint, GLenum, *GLfloat) void
glGetTextureLevelParameterivEXT stdcall func(GLuint, GLenum, GLint, GLenum, *GLint) void
glGetTextureLevelParameteriv stdcall func(GLuint, GLint, GLenum, *GLint) void
glGetTextureParameterfvEXT stdcall func(GLuint, GLenum, GLenum, *GLfloat) void
glGetTextureParameterfv stdcall func(GLuint, GLenum, *GLfloat) void
glGetTextureParameterIivEXT stdcall func(GLuint, GLenum, GLenum, *GLint) void
glGetTextureParameterIiv stdcall func(GLuint, GLenum, *GLint) void
glGetTextureParameterIuivEXT stdcall func(GLuint, GLenum, GLenum, *GLuint) void
glGetTextureParameterIuiv stdcall func(GLuint, GLenum, *GLuint) void
glGetTextureParameterivEXT stdcall func(GLuint, GLenum, GLenum, *GLint) void
glGetTextureParameteriv stdcall func(GLuint, GLenum, *GLint) void
glGetTextureSubImage stdcall func(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ptr) void
glGetTrackMatrixivNV stdcall func(GLenum, GLuint, GLenum, *GLint) void
glGetTransformFeedbacki64_v stdcall func(GLuint, GLenum, GLuint, *GLint64) void
glGetTransformFeedbackiv stdcall func(GLuint, GLenum, *GLint) void
glGetTransformFeedbacki_v stdcall func(GLuint, GLenum, GLuint, *GLint) void
glGetTransformFeedbackVaryingEXT stdcall func(GLuint, GLuint, GLsizei, *GLsizei, *GLsizei, *GLenum, *GLchar) void
glGetTransformFeedbackVaryingNV stdcall func(GLuint, GLuint, *GLint) void
glGetTransformFeedbackVarying stdcall func(GLuint, GLuint, GLsizei, *GLsizei, *GLsizei, *GLenum, *GLchar) void
glGetTranslatedShaderSourceANGLE stdcall func(GLuint, GLsizei, *GLsizei, *GLchar) void
glGetUniformLocation stdcall func(GLuint, *ubyte) GLint
glGetUniformdv stdcall func(GLuint, GLint, *GLdouble) void
glGetUniformfvARB stdcall func(GLhandleARB, GLint, *GLfloat) void
glGetUniformfv stdcall func(GLuint, GLint, *GLfloat) void
glGetUniformi64vARB stdcall func(GLuint, GLint, *GLint64) void
glGetUniformi64vNV stdcall func(GLuint, GLint, *GLint64EXT) void
glGetUniformIndices stdcall func(GLuint, GLsizei, **GLchar, *GLuint) void
glGetUniformivARB stdcall func(GLhandleARB, GLint, *GLint) void
glGetUniformiv stdcall func(GLuint, GLint, *GLint) void
glGetUniformSubroutineuiv stdcall func(GLenum, GLint, *GLuint) void
glGetUniformui64vARB stdcall func(GLuint, GLint, *GLuint64) void
glGetUniformui64vNV stdcall func(GLuint, GLint, *GLuint64EXT) void
glGetUniformuivEXT stdcall func(GLuint, GLint, *GLuint) void
glGetUniformuiv stdcall func(GLuint, GLint, *GLuint) void
glGetVariantArrayObjectfvATI stdcall func(GLuint, GLenum, *GLfloat) void
glGetVariantArrayObjectivATI stdcall func(GLuint, GLenum, *GLint) void
glGetVariantBooleanvEXT stdcall func(GLuint, GLenum, *GLboolean) void
glGetVariantFloatvEXT stdcall func(GLuint, GLenum, *GLfloat) void
glGetVariantIntegervEXT stdcall func(GLuint, GLenum, *GLint) void
glGetVariantPointervEXT stdcall func(GLuint, GLenum, *ptr) void
glGetVertexArrayIndexed64iv stdcall func(GLuint, GLuint, GLenum, *GLint64) void
glGetVertexArrayIndexediv stdcall func(GLuint, GLuint, GLenum, *GLint) void
glGetVertexArrayIntegeri_vEXT stdcall func(GLuint, GLuint, GLenum, *GLint) void
glGetVertexArrayIntegervEXT stdcall func(GLuint, GLenum, *GLint) void
glGetVertexArrayiv stdcall func(GLuint, GLenum, *GLint) void
glGetVertexArrayPointeri_vEXT stdcall func(GLuint, GLuint, GLenum, *ptr) void
glGetVertexArrayPointervEXT stdcall func(GLuint, GLenum, *ptr) void
glGetVertexAttribArrayObjectfvATI stdcall func(GLuint, GLenum, *GLfloat) void
glGetVertexAttribArrayObjectivATI stdcall func(GLuint, GLenum, *GLint) void
glGetVertexAttribdvARB stdcall func(GLuint, GLenum, *GLdouble) void
glGetVertexAttribdvNV stdcall func(GLuint, GLenum, *GLdouble) void
glGetVertexAttribdv stdcall func(GLuint, GLenum, *GLdouble) void
glGetVertexAttribfvARB stdcall func(GLuint, GLenum, *GLfloat) void
glGetVertexAttribfvNV stdcall func(GLuint, GLenum, *GLfloat) void
glGetVertexAttribfv stdcall func(GLuint, GLenum, *GLfloat) void
glGetVertexAttribIivEXT stdcall func(GLuint, GLenum, *GLint) void
glGetVertexAttribIiv stdcall func(GLuint, GLenum, *GLint) void
glGetVertexAttribIuivEXT stdcall func(GLuint, GLenum, *GLuint) void
glGetVertexAttribIuiv stdcall func(GLuint, GLenum, *GLuint) void
glGetVertexAttribivARB stdcall func(GLuint, GLenum, *GLint) void
glGetVertexAttribivNV stdcall func(GLuint, GLenum, *GLint) void
glGetVertexAttribiv stdcall func(GLuint, GLenum, *GLint) void
glGetVertexAttribLdvEXT stdcall func(GLuint, GLenum, *GLdouble) void
glGetVertexAttribLdv stdcall func(GLuint, GLenum, *GLdouble) void
glGetVertexAttribLi64vNV stdcall func(GLuint, GLenum, *GLint64EXT) void
glGetVertexAttribLui64vARB stdcall func(GLuint, GLenum, *GLuint64EXT) void
glGetVertexAttribLui64vNV stdcall func(GLuint, GLenum, *GLuint64EXT) void
glGetVertexAttribPointervARB stdcall func(GLuint, GLenum, *ptr) void
glGetVertexAttribPointervNV stdcall func(GLuint, GLenum, *ptr) void
glGetVertexAttribPointerv stdcall func(GLuint, GLenum, *ptr) void
glGetVideoCaptureivNV stdcall func(GLuint, GLenum, *GLint) void
glGetVideoCaptureStreamdvNV stdcall func(GLuint, GLuint, GLenum, *GLdouble) void
glGetVideoCaptureStreamfvNV stdcall func(GLuint, GLuint, GLenum, *GLfloat) void
glGetVideoCaptureStreamivNV stdcall func(GLuint, GLuint, GLenum, *GLint) void
glGetVideoi64vNV stdcall func(GLuint, GLenum, *GLint64EXT) void
glGetVideoivNV stdcall func(GLuint, GLenum, *GLint) void
glGetVideoui64vNV stdcall func(GLuint, GLenum, *GLuint64EXT) void
glGetVideouivNV stdcall func(GLuint, GLenum, *GLuint) void
glGlobalAlphaFactorbSUN stdcall func(GLbyte) void
glGlobalAlphaFactordSUN stdcall func(GLdouble) void
glGlobalAlphaFactorfSUN stdcall func(GLfloat) void
glGlobalAlphaFactoriSUN stdcall func(GLint) void
glGlobalAlphaFactorsSUN stdcall func(GLshort) void
glGlobalAlphaFactorubSUN stdcall func(GLubyte) void
glGlobalAlphaFactoruiSUN stdcall func(GLuint) void
glGlobalAlphaFactorusSUN stdcall func(GLushort) void
glHistogramEXT stdcall func(GLenum, GLsizei, GLenum, GLboolean) void
glHistogram stdcall func(GLenum, GLsizei, GLenum, GLboolean) void
glImageTransformParameterfHP stdcall func(GLenum, GLenum, GLfloat) void
glImageTransformParameterfvHP stdcall func(GLenum, GLenum, *GLfloat) void
glImageTransformParameteriHP stdcall func(GLenum, GLenum, GLint) void
glImageTransformParameterivHP stdcall func(GLenum, GLenum, *GLint) void
glIndexFuncEXT stdcall func(GLenum, GLfloat) void
glIndexMaterialEXT stdcall func(GLenum, GLenum) void
glIndexPointerEXT stdcall func(GLenum, GLsizei, GLsizei, ptr) void
glIndexPointerListIBM stdcall func(GLenum, GLint, *ptr, GLint) void
glInsertComponentEXT stdcall func(GLuint, GLuint, GLuint) void
glInsertEventMarkerEXT stdcall func(GLsizei, *GLchar) void
glInterpolatePathsNV stdcall func(GLuint, GLuint, GLuint, GLfloat) void
glInvalidateBufferData stdcall func(GLuint) void
glInvalidateBufferSubData stdcall func(GLuint, GLintptr, GLsizeiptr) void
glInvalidateFramebuffer stdcall func(GLenum, GLsizei, *GLenum) void
glInvalidateNamedFramebufferData stdcall func(GLuint, GLsizei, *GLenum) void
glInvalidateNamedFramebufferSubData stdcall func(GLuint, GLsizei, *GLenum, GLint, GLint, GLsizei, GLsizei) void
glInvalidateSubFramebuffer stdcall func(GLenum, GLsizei, *GLenum, GLint, GLint, GLsizei, GLsizei) void
glInvalidateTexImage stdcall func(GLuint, GLint) void
glInvalidateTexSubImage stdcall func(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) void
glLabelObjectEXT stdcall func(GLenum, GLuint, GLsizei, *GLchar) void
glLightEnviEXT stdcall func(GLenum, GLint) void
glLightModelx stdcall func(GLenum, GLfixed) void
glLightModelxv stdcall func(GLenum, *GLfixed) void
glLightx stdcall func(GLenum, GLenum, GLfixed) void
glLightxv stdcall func(GLenum, GLenum, *GLfixed) void
glLineWidthx stdcall func(GLfixed) void
glLinkProgramARB stdcall func(GLhandleARB) void
glLinkProgram stdcall func(GLuint) void
glLoadMatrixx stdcall func(*GLfixed) void
glLoadProgramNV stdcall func(GLenum, GLuint, GLsizei, *GLubyte) void
glLoadTransposeMatrixdARB stdcall func(**GLdouble, stdcall func(*GLfloat) void) void
glLoadTransposeMatrixd stdcall func(**GLdouble, stdcall func(*GLfloat) void) void
glLockArraysEXT stdcall func(GLint, GLsizei) void
glLogMessageCallbackREGAL stdcall func(stdcall func(GLenum, GLsizei, *GLchar, ptr) void) void
glMakeBufferNonResidentNV stdcall func(GLenum) void
glMakeBufferResidentNV stdcall func(GLenum, GLenum) void
glMakeImageHandleNonResidentARB stdcall func(GLuint64) void
glMakeImageHandleNonResidentNV stdcall func(GLuint64) void
glMakeImageHandleResidentARB stdcall func(GLuint64, GLenum) void
glMakeImageHandleResidentNV stdcall func(GLuint64, GLenum) void
glMakeNamedBufferNonResidentNV stdcall func(GLuint) void
glMakeNamedBufferResidentNV stdcall func(GLuint, GLenum) void
glMakeTextureHandleNonResidentARB stdcall func(GLuint64) void
glMakeTextureHandleNonResidentNV stdcall func(GLuint64) void
glMakeTextureHandleResidentARB stdcall func(GLuint64) void
glMakeTextureHandleResidentNV stdcall func(GLuint64) void
glMapControlPointsNV stdcall func(GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint, GLboolean, ptr) void
glMapParameterfvNV stdcall func(GLenum, GLenum, *GLfloat) void
glMapParameterivNV stdcall func(GLenum, GLenum, *GLint) void
glMapVertexAttrib1dAPPLE stdcall func(GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, *GLdouble) void
glMapVertexAttrib1fAPPLE stdcall func(GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, *GLfloat) void
glMapVertexAttrib2dAPPLE stdcall func(GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, *GLdouble) void
glMapVertexAttrib2fAPPLE stdcall func(GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, *GLfloat) void
glMaterialx stdcall func(GLenum, GLenum, GLfixed) void
glMaterialxv stdcall func(GLenum, GLenum, *GLfixed) void
glMatrixFrustumEXT stdcall func(GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) void
glMatrixIndexPointerARB stdcall func(GLint, GLenum, GLsizei, ptr) void
glMatrixIndexubvARB stdcall func(GLint, *GLubyte) void
glMatrixIndexuivARB stdcall func(GLint, *GLuint) void
glMatrixIndexusvARB stdcall func(GLint, *GLushort) void
glMatrixLoad3x2fNV stdcall func(GLenum, *GLfloat) void
glMatrixLoad3x3fNV stdcall func(GLenum, *GLfloat) void
glMatrixLoaddEXT stdcall func(GLenum, *GLdouble) void
glMatrixLoadfEXT stdcall func(GLenum, *GLfloat) void
glMatrixLoadIdentityEXT stdcall func(GLenum) void
glMatrixLoadTranspose3x3fNV stdcall func(GLenum, *GLfloat) void
glMatrixLoadTransposedEXT stdcall func(GLenum, *GLdouble) void
glMatrixLoadTransposefEXT stdcall func(GLenum, *GLfloat) void
glMatrixMult3x2fNV stdcall func(GLenum, *GLfloat) void
glMatrixMult3x3fNV stdcall func(GLenum, *GLfloat) void
glMatrixMultdEXT stdcall func(GLenum, *GLdouble) void
glMatrixMultfEXT stdcall func(GLenum, *GLfloat) void
glMatrixMultTranspose3x3fNV stdcall func(GLenum, *GLfloat) void
glMatrixMultTransposedEXT stdcall func(GLenum, *GLdouble) void
glMatrixMultTransposefEXT stdcall func(GLenum, *GLfloat) void
glMatrixOrthoEXT stdcall func(GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) void
glMatrixPopEXT stdcall func(GLenum) void
glMatrixPushEXT stdcall func(GLenum) void
glMatrixRotatedEXT stdcall func(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) void
glMatrixRotatefEXT stdcall func(GLenum, GLfloat, GLfloat, GLfloat, GLfloat) void
glMatrixScaledEXT stdcall func(GLenum, GLdouble, GLdouble, GLdouble) void
glMatrixScalefEXT stdcall func(GLenum, GLfloat, GLfloat, GLfloat) void
glMatrixTranslatedEXT stdcall func(GLenum, GLdouble, GLdouble, GLdouble) void
glMatrixTranslatefEXT stdcall func(GLenum, GLfloat, GLfloat, GLfloat) void
glMaxShaderCompilerThreadsARB stdcall func(GLuint) void
glMemoryBarrierByRegion stdcall func(GLbitfield) void
glMemoryBarrierEXT stdcall func(GLbitfield) void
glMemoryBarrier stdcall func(GLbitfield) void
glMinmaxEXT stdcall func(GLenum, GLenum, GLboolean) void
glMinmax stdcall func(GLenum, GLenum, GLboolean) void
glMinSampleShadingARB stdcall func(GLclampf) void
glMinSampleShading stdcall func(GLclampf) void
glMultiDrawArraysEXT stdcall func(GLenum, *GLint, *GLsizei, GLsizei) void
glMultiDrawArraysIndirectAMD stdcall func(GLenum, ptr, GLsizei, GLsizei) void
glMultiDrawArraysIndirectBindlessCountNV stdcall func(GLenum, ptr, GLintptr, GLsizei, GLsizei, GLint) void
glMultiDrawArraysIndirectBindlessNV stdcall func(GLenum, ptr, GLsizei, GLsizei, GLint) void
glMultiDrawArraysIndirectCountARB stdcall func(GLenum, ptr, GLintptr, GLsizei, GLsizei) void
glMultiDrawArraysIndirect stdcall func(GLenum, ptr, GLsizei, GLsizei) void
glMultiDrawArrays stdcall func(GLenum, *GLint, *GLsizei, GLsizei) void
glMultiDrawElementArrayAPPLE stdcall func(GLenum, *GLint, *GLsizei, GLsizei) void
glMultiDrawElementsBaseVertex stdcall func(GLenum, *GLsizei, GLenum, *ptr, GLsizei, *GLint) void
glMultiDrawElementsEXT stdcall func(GLenum, *GLsizei, GLenum, *ptr, GLsizei) void
glMultiDrawElementsIndirectAMD stdcall func(GLenum, GLenum, ptr, GLsizei, GLsizei) void
glMultiDrawElementsIndirectBindlessCountNV stdcall func(GLenum, GLenum, ptr, GLintptr, GLsizei, GLsizei, GLint) void
glMultiDrawElementsIndirectBindlessNV stdcall func(GLenum, GLenum, ptr, GLsizei, GLsizei, GLint) void
glMultiDrawElementsIndirectCountARB stdcall func(GLenum, GLenum, ptr, GLintptr, GLsizei, GLsizei) void
glMultiDrawElementsIndirect stdcall func(GLenum, GLenum, ptr, GLsizei, GLsizei) void
glMultiDrawElements stdcall func(GLenum, *GLsizei, GLenum, *ptr, GLsizei) void
glMultiDrawRangeElementArrayAPPLE stdcall func(GLenum, GLuint, GLuint, *GLint, *GLsizei, GLsizei) void
glMultiModeDrawArraysIBM stdcall func(*GLenum, *GLint, *GLsizei, GLsizei, GLint) void
glMultiModeDrawElementsIBM stdcall func(*GLenum, *GLsizei, GLenum, *ptr, GLsizei, GLint) void
glMultiTexBufferEXT stdcall func(GLenum, GLenum, GLenum, GLuint) void
glMultiTexCoord1dARB stdcall func(GLenum, GLdouble) void
glMultiTexCoord1d stdcall func(GLenum, GLdouble) void
glMultiTexCoord1dvARB stdcall func(GLenum, *GLdouble) void
glMultiTexCoord1dv stdcall func(GLenum, *GLdouble) void
glMultiTexCoord1fARB stdcall func(GLenum, GLfloat) void
glMultiTexCoord1f stdcall func(GLenum, GLfloat) void
glMultiTexCoord1fvARB stdcall func(GLenum, *GLfloat) void
glMultiTexCoord1fv stdcall func(GLenum, *GLfloat) void
glMultiTexCoord1hNV stdcall func(GLenum, GLhalf) void
glMultiTexCoord1hvNV stdcall func(GLenum, *GLhalf) void
glMultiTexCoord1iARB stdcall func(GLenum, GLint) void
glMultiTexCoord1i stdcall func(GLenum, GLint) void
glMultiTexCoord1ivARB stdcall func(GLenum, *GLint) void
glMultiTexCoord1iv stdcall func(GLenum, *GLint) void
glMultiTexCoord1sARB stdcall func(GLenum, GLshort) void
glMultiTexCoord1s stdcall func(GLenum, GLshort) void
glMultiTexCoord1svARB stdcall func(GLenum, *GLshort) void
glMultiTexCoord1sv stdcall func(GLenum, *GLshort) void
glMultiTexCoord2dARB stdcall func(GLenum, GLdouble, GLdouble) void
glMultiTexCoord2d stdcall func(GLenum, GLdouble, GLdouble) void
glMultiTexCoord2dvARB stdcall func(GLenum, *GLdouble) void
glMultiTexCoord2dv stdcall func(GLenum, *GLdouble) void
glMultiTexCoord2fARB stdcall func(GLenum, GLfloat, GLfloat) void
glMultiTexCoord2f stdcall func(GLenum, GLfloat, GLfloat) void
glMultiTexCoord2fvARB stdcall func(GLenum, *GLfloat) void
glMultiTexCoord2fv stdcall func(GLenum, *GLfloat) void
glMultiTexCoord2hNV stdcall func(GLenum, GLhalf, GLhalf) void
glMultiTexCoord2hvNV stdcall func(GLenum, *GLhalf) void
glMultiTexCoord2iARB stdcall func(GLenum, GLint, GLint) void
glMultiTexCoord2i stdcall func(GLenum, GLint, GLint) void
glMultiTexCoord2ivARB stdcall func(GLenum, *GLint) void
glMultiTexCoord2iv stdcall func(GLenum, *GLint) void
glMultiTexCoord2sARB stdcall func(GLenum, GLshort, GLshort) void
glMultiTexCoord2s stdcall func(GLenum, GLshort, GLshort) void
glMultiTexCoord2svARB stdcall func(GLenum, *GLshort) void
glMultiTexCoord2sv stdcall func(GLenum, *GLshort) void
glMultiTexCoord3dARB stdcall func(GLenum, GLdouble, GLdouble, GLdouble) void
glMultiTexCoord3d stdcall func(GLenum, GLdouble, GLdouble, GLdouble) void
glMultiTexCoord3dvARB stdcall func(GLenum, *GLdouble) void
glMultiTexCoord3dv stdcall func(GLenum, *GLdouble) void
glMultiTexCoord3fARB stdcall func(GLenum, GLfloat, GLfloat, GLfloat) void
glMultiTexCoord3f stdcall func(GLenum, GLfloat, GLfloat, GLfloat) void
glMultiTexCoord3fvARB stdcall func(GLenum, *GLfloat) void
glMultiTexCoord3fv stdcall func(GLenum, *GLfloat) void
glMultiTexCoord3hNV stdcall func(GLenum, GLhalf, GLhalf, GLhalf) void
glMultiTexCoord3hvNV stdcall func(GLenum, *GLhalf) void
glMultiTexCoord3iARB stdcall func(GLenum, GLint, GLint, GLint) void
glMultiTexCoord3i stdcall func(GLenum, GLint, GLint, GLint) void
glMultiTexCoord3ivARB stdcall func(GLenum, *GLint) void
glMultiTexCoord3iv stdcall func(GLenum, *GLint) void
glMultiTexCoord3sARB stdcall func(GLenum, GLshort, GLshort, GLshort) void
glMultiTexCoord3s stdcall func(GLenum, GLshort, GLshort, GLshort) void
glMultiTexCoord3svARB stdcall func(GLenum, *GLshort) void
glMultiTexCoord3sv stdcall func(GLenum, *GLshort) void
glMultiTexCoord4dARB stdcall func(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) void
glMultiTexCoord4d stdcall func(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) void
glMultiTexCoord4dvARB stdcall func(GLenum, *GLdouble) void
glMultiTexCoord4dv stdcall func(GLenum, *GLdouble) void
glMultiTexCoord4fARB stdcall func(GLenum, GLfloat, GLfloat, GLfloat, GLfloat) void
glMultiTexCoord4f stdcall func(GLenum, GLfloat, GLfloat, GLfloat, GLfloat) void
glMultiTexCoord4fvARB stdcall func(GLenum, *GLfloat) void
glMultiTexCoord4fv stdcall func(GLenum, *GLfloat) void
glMultiTexCoord4hNV stdcall func(GLenum, GLhalf, GLhalf, GLhalf, GLhalf) void
glMultiTexCoord4hvNV stdcall func(GLenum, *GLhalf) void
glMultiTexCoord4iARB stdcall func(GLenum, GLint, GLint, GLint, GLint) void
glMultiTexCoord4i stdcall func(GLenum, GLint, GLint, GLint, GLint) void
glMultiTexCoord4ivARB stdcall func(GLenum, *GLint) void
glMultiTexCoord4iv stdcall func(GLenum, *GLint) void
glMultiTexCoord4sARB stdcall func(GLenum, GLshort, GLshort, GLshort, GLshort) void
glMultiTexCoord4s stdcall func(GLenum, GLshort, GLshort, GLshort, GLshort) void
glMultiTexCoord4svARB stdcall func(GLenum, *GLshort) void
glMultiTexCoord4sv stdcall func(GLenum, *GLshort) void
glMultiTexCoord4x stdcall func(GLenum, GLfixed, GLfixed, GLfixed, GLfixed) void
glMultiTexCoordP1ui stdcall func(GLenum, GLenum, GLuint) void
glMultiTexCoordP1uiv stdcall func(GLenum, GLenum, *GLuint) void
glMultiTexCoordP2ui stdcall func(GLenum, GLenum, GLuint) void
glMultiTexCoordP2uiv stdcall func(GLenum, GLenum, *GLuint) void
glMultiTexCoordP3ui stdcall func(GLenum, GLenum, GLuint) void
glMultiTexCoordP3uiv stdcall func(GLenum, GLenum, *GLuint) void
glMultiTexCoordP4ui stdcall func(GLenum, GLenum, GLuint) void
glMultiTexCoordP4uiv stdcall func(GLenum, GLenum, *GLuint) void
glMultiTexCoordPointerEXT stdcall func(GLenum, GLint, GLenum, GLsizei, ptr) void
glMultiTexEnvfEXT stdcall func(GLenum, GLenum, GLenum, GLfloat) void
glMultiTexEnvfvEXT stdcall func(GLenum, GLenum, GLenum, *GLfloat) void
glMultiTexEnviEXT stdcall func(GLenum, GLenum, GLenum, GLint) void
glMultiTexEnvivEXT stdcall func(GLenum, GLenum, GLenum, *GLint) void
glMultiTexGendEXT stdcall func(GLenum, GLenum, GLenum, GLdouble) void
glMultiTexGendvEXT stdcall func(GLenum, GLenum, GLenum, *GLdouble) void
glMultiTexGenfEXT stdcall func(GLenum, GLenum, GLenum, GLfloat) void
glMultiTexGenfvEXT stdcall func(GLenum, GLenum, GLenum, *GLfloat) void
glMultiTexGeniEXT stdcall func(GLenum, GLenum, GLenum, GLint) void
glMultiTexGenivEXT stdcall func(GLenum, GLenum, GLenum, *GLint) void
glMultiTexImage1DEXT stdcall func(GLenum, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, ptr) void
glMultiTexImage2DEXT stdcall func(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, ptr) void
glMultiTexImage3DEXT stdcall func(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ptr) void
glMultiTexParameterfEXT stdcall func(GLenum, GLenum, GLenum, GLfloat) void
glMultiTexParameterfvEXT stdcall func(GLenum, GLenum, GLenum, *GLfloat) void
glMultiTexParameteriEXT stdcall func(GLenum, GLenum, GLenum, GLint) void
glMultiTexParameterIivEXT stdcall func(GLenum, GLenum, GLenum, *GLint) void
glMultiTexParameterIuivEXT stdcall func(GLenum, GLenum, GLenum, *GLuint) void
glMultiTexParameterivEXT stdcall func(GLenum, GLenum, GLenum, *GLint) void
glMultiTexRenderbufferEXT stdcall func(GLenum, GLenum, GLuint) void
glMultiTexSubImage1DEXT stdcall func(GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ptr) void
glMultiTexSubImage2DEXT stdcall func(GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ptr) void
glMultiTexSubImage3DEXT stdcall func(GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ptr) void
glMultMatrixx stdcall func(*GLfixed) void
glMultTransposeMatrixdARB stdcall func(**GLdouble, stdcall func(*GLfloat) void) void
glMultTransposeMatrixd stdcall func(**GLdouble, stdcall func(*GLfloat) void) void
glNamedBufferDataEXT stdcall func(GLuint, GLsizeiptr, ptr, GLenum) void
glNamedBufferData stdcall func(GLuint, GLsizeiptr, ptr, GLenum) void
glNamedBufferStorageEXT stdcall func(GLuint, GLsizeiptr, ptr, GLbitfield) void
glNamedBufferStorage stdcall func(GLuint, GLsizeiptr, ptr, GLbitfield) void
glNamedBufferSubDataEXT stdcall func(GLuint, GLintptr, GLsizeiptr, ptr) void
glNamedBufferSubData stdcall func(GLuint, GLintptr, GLsizeiptr, ptr) void
glNamedCopyBufferSubDataEXT stdcall func(GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr) void
glNamedFramebufferDrawBuffer stdcall func(GLuint, GLenum) void
glNamedFramebufferDrawBuffers stdcall func(GLuint, GLsizei, *GLenum) void
glNamedFramebufferParameteriEXT stdcall func(GLuint, GLenum, GLint) void
glNamedFramebufferParameteri stdcall func(GLuint, GLenum, GLint) void
glNamedFramebufferReadBuffer stdcall func(GLuint, GLenum) void
glNamedFramebufferRenderbufferEXT stdcall func(GLuint, GLenum, GLenum, GLuint) void
glNamedFramebufferRenderbuffer stdcall func(GLuint, GLenum, GLenum, GLuint) void
glNamedFramebufferSampleLocationsfvARB stdcall func(GLuint, GLuint, GLsizei, *GLfloat) void
glNamedFramebufferSampleLocationsfvNV stdcall func(GLuint, GLuint, GLsizei, *GLfloat) void
glNamedFramebufferTexture1DEXT stdcall func(GLuint, GLenum, GLenum, GLuint, GLint) void
glNamedFramebufferTexture2DEXT stdcall func(GLuint, GLenum, GLenum, GLuint, GLint) void
glNamedFramebufferTexture3DEXT stdcall func(GLuint, GLenum, GLenum, GLuint, GLint, GLint) void
glNamedFramebufferTextureEXT stdcall func(GLuint, GLenum, GLuint, GLint) void
glNamedFramebufferTextureFaceEXT stdcall func(GLuint, GLenum, GLuint, GLint, GLenum) void
glNamedFramebufferTextureLayerEXT stdcall func(GLuint, GLenum, GLuint, GLint, GLint) void
glNamedFramebufferTextureLayer stdcall func(GLuint, GLenum, GLuint, GLint, GLint) void
glNamedFramebufferTexture stdcall func(GLuint, GLenum, GLuint, GLint) void
glNamedProgramLocalParameter4dEXT stdcall func(GLuint, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) void
glNamedProgramLocalParameter4dvEXT stdcall func(GLuint, GLenum, GLuint, *GLdouble) void
glNamedProgramLocalParameter4fEXT stdcall func(GLuint, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) void
glNamedProgramLocalParameter4fvEXT stdcall func(GLuint, GLenum, GLuint, *GLfloat) void
glNamedProgramLocalParameterI4iEXT stdcall func(GLuint, GLenum, GLuint, GLint, GLint, GLint, GLint) void
glNamedProgramLocalParameterI4ivEXT stdcall func(GLuint, GLenum, GLuint, *GLint) void
glNamedProgramLocalParameterI4uiEXT stdcall func(GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) void
glNamedProgramLocalParameterI4uivEXT stdcall func(GLuint, GLenum, GLuint, *GLuint) void
glNamedProgramLocalParameters4fvEXT stdcall func(GLuint, GLenum, GLuint, GLsizei, *GLfloat) void
glNamedProgramLocalParametersI4ivEXT stdcall func(GLuint, GLenum, GLuint, GLsizei, *GLint) void
glNamedProgramLocalParametersI4uivEXT stdcall func(GLuint, GLenum, GLuint, GLsizei, *GLuint) void
glNamedProgramStringEXT stdcall func(GLuint, GLenum, GLenum, GLsizei, ptr) void
glNamedRenderbufferStorageEXT stdcall func(GLuint, GLenum, GLsizei, GLsizei) void
glNamedRenderbufferStorageMultisampleCoverageEXT stdcall func(GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) void
glNamedRenderbufferStorageMultisampleEXT stdcall func(GLuint, GLsizei, GLenum, GLsizei, GLsizei) void
glNamedRenderbufferStorageMultisample stdcall func(GLuint, GLsizei, GLenum, GLsizei, GLsizei) void
glNamedRenderbufferStorage stdcall func(GLuint, GLenum, GLsizei, GLsizei) void
glNamedStringARB stdcall func(GLenum, GLint, *GLchar, GLint, *GLchar) void
glNormal3fVertex3fSUN stdcall func(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glNormal3fVertex3fvSUN stdcall func(*GLfloat, *GLfloat) void
glNormal3hNV stdcall func(GLhalf, GLhalf, GLhalf) void
glNormal3hvNV stdcall func(*GLhalf) void
glNormal3x stdcall func(GLfixed, GLfixed, GLfixed) void
glNormalFormatNV stdcall func(GLenum, GLsizei) void
glNormalP3ui stdcall func(GLenum, GLuint) void
glNormalP3uiv stdcall func(GLenum, *GLuint) void
glNormalPointerEXT stdcall func(GLenum, GLsizei, GLsizei, ptr) void
glNormalPointerListIBM stdcall func(GLenum, GLint, *ptr, GLint) void
glNormalPointervINTEL stdcall func(GLenum, *ptr) void
glNormalStream3bATI stdcall func(GLenum, GLbyte, GLbyte, GLbyte) void
glNormalStream3bvATI stdcall func(GLenum, *GLbyte) void
glNormalStream3dATI stdcall func(GLenum, GLdouble, GLdouble, GLdouble) void
glNormalStream3dvATI stdcall func(GLenum, *GLdouble) void
glNormalStream3fATI stdcall func(GLenum, GLfloat, GLfloat, GLfloat) void
glNormalStream3fvATI stdcall func(GLenum, *GLfloat) void
glNormalStream3iATI stdcall func(GLenum, GLint, GLint, GLint) void
glNormalStream3ivATI stdcall func(GLenum, *GLint) void
glNormalStream3sATI stdcall func(GLenum, GLshort, GLshort, GLshort) void
glNormalStream3svATI stdcall func(GLenum, *GLshort) void
glObjectLabel stdcall func(GLenum, GLuint, GLsizei, *GLchar) void
glObjectPtrLabel stdcall func(ptr, GLsizei, *GLchar) void
glOrthofOES stdcall func(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glOrthof stdcall func(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glOrthox stdcall func(GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) void
glPassTexCoordATI stdcall func(GLuint, GLuint, GLenum) void
glPatchParameterfv stdcall func(GLenum, *GLfloat) void
glPatchParameteri stdcall func(GLenum, GLint) void
glPathColorGenNV stdcall func(GLenum, GLenum, GLenum, *GLfloat) void
glPathCommandsNV stdcall func(GLuint, GLsizei, *GLubyte, GLsizei, GLenum, ptr) void
glPathCoordsNV stdcall func(GLuint, GLsizei, GLenum, ptr) void
glPathCoverDepthFuncNV stdcall func(GLenum) void
glPathDashArrayNV stdcall func(GLuint, GLsizei, *GLfloat) void
glPathFogGenNV stdcall func(GLenum) void
glPathGlyphRangeNV stdcall func(GLuint, GLenum, ptr, GLbitfield, GLuint, GLsizei, GLenum, GLuint, GLfloat) void
glPathGlyphsNV stdcall func(GLuint, GLenum, ptr, GLbitfield, GLsizei, GLenum, ptr, GLenum, GLuint, GLfloat) void
glPathParameterfNV stdcall func(GLuint, GLenum, GLfloat) void
glPathParameterfvNV stdcall func(GLuint, GLenum, *GLfloat) void
glPathParameteriNV stdcall func(GLuint, GLenum, GLint) void
glPathParameterivNV stdcall func(GLuint, GLenum, *GLint) void
glPathStencilDepthOffsetNV stdcall func(GLfloat, GLfloat) void
glPathStencilFuncNV stdcall func(GLenum, GLint, GLuint) void
glPathStringNV stdcall func(GLuint, GLenum, GLsizei, ptr) void
glPathSubCommandsNV stdcall func(GLuint, GLsizei, GLsizei, GLsizei, *GLubyte, GLsizei, GLenum, ptr) void
glPathSubCoordsNV stdcall func(GLuint, GLsizei, GLsizei, GLenum, ptr) void
glPathTexGenNV stdcall func(GLenum, GLenum, GLint, *GLfloat) void
glPauseTransformFeedbackNV stdcall func() void
glPauseTransformFeedback stdcall func() void
glPixelDataRangeNV stdcall func(GLenum, GLsizei, ptr) void
glPixelTexGenSGIX stdcall func(GLenum) void
glPixelTransformParameterfEXT stdcall func(GLenum, GLenum, GLfloat) void
glPixelTransformParameterfvEXT stdcall func(GLenum, GLenum, *GLfloat) void
glPixelTransformParameteriEXT stdcall func(GLenum, GLenum, GLint) void
glPixelTransformParameterivEXT stdcall func(GLenum, GLenum, *GLint) void
glPNTrianglesfATI stdcall func(GLenum, GLfloat) void
glPNTrianglesiATI stdcall func(GLenum, GLint) void
glPointParameterfARB stdcall func(GLenum, GLfloat) void
glPointParameterfEXT stdcall func(GLenum, GLfloat) void
glPointParameterf stdcall func(GLenum, GLfloat) void
glPointParameterfvARB stdcall func(GLenum, *GLfloat) void
glPointParameterfvEXT stdcall func(GLenum, *GLfloat) void
glPointParameterfv stdcall func(GLenum, *GLfloat) void
glPointParameteriNV stdcall func(GLenum, GLint) void
glPointParameteri stdcall func(GLenum, GLint) void
glPointParameterivNV stdcall func(GLenum, *GLint) void
glPointParameteriv stdcall func(GLenum, *GLint) void
glPointParameterx stdcall func(GLenum, GLfixed) void
glPointParameterxv stdcall func(GLenum, *GLfixed) void
glPointSizePointerOES stdcall func(GLenum, GLsizei, ptr) void
glPointSizex stdcall func(GLfixed) void
glPolygonOffsetClampEXT stdcall func(GLfloat, GLfloat, GLfloat) void
glPolygonOffsetEXT stdcall func(GLfloat, GLfloat) void
glPolygonOffsetx stdcall func(GLfixed, GLfixed) void
glPopDebugGroup stdcall func() void
glPopGroupMarkerEXT stdcall func() void
glPresentFrameDualFillNV stdcall func(GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint) void
glPresentFrameKeyedNV stdcall func(GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLuint, GLenum, GLuint, GLuint) void
glPrimitiveBoundingBoxARB stdcall func(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glPrimitiveRestartIndexNV stdcall func(GLuint) void
glPrimitiveRestartIndex stdcall func(GLuint) void
glPrimitiveRestartNV stdcall func() void
glPrioritizeTexturesEXT stdcall func(GLsizei, *GLuint, *GLclampf) void
glProgramBinary stdcall func(GLuint, GLenum, ptr, GLsizei) void
glProgramBufferParametersfvNV stdcall func(GLenum, GLuint, GLuint, GLsizei, *GLfloat) void
glProgramBufferParametersIivNV stdcall func(GLenum, GLuint, GLuint, GLsizei, *GLint) void
glProgramBufferParametersIuivNV stdcall func(GLenum, GLuint, GLuint, GLsizei, *GLuint) void
glProgramEnvParameter4dARB stdcall func(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) void
glProgramEnvParameter4dvARB stdcall func(GLenum, GLuint, *GLdouble) void
glProgramEnvParameter4fARB stdcall func(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) void
glProgramEnvParameter4fvARB stdcall func(GLenum, GLuint, *GLfloat) void
glProgramEnvParameterI4iNV stdcall func(GLenum, GLuint, GLint, GLint, GLint, GLint) void
glProgramEnvParameterI4ivNV stdcall func(GLenum, GLuint, *GLint) void
glProgramEnvParameterI4uiNV stdcall func(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) void
glProgramEnvParameterI4uivNV stdcall func(GLenum, GLuint, *GLuint) void
glProgramEnvParameters4fvEXT stdcall func(GLenum, GLuint, GLsizei, *GLfloat) void
glProgramEnvParametersI4ivNV stdcall func(GLenum, GLuint, GLsizei, *GLint) void
glProgramEnvParametersI4uivNV stdcall func(GLenum, GLuint, GLsizei, *GLuint) void
glProgramLocalParameter4dARB stdcall func(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) void
glProgramLocalParameter4dvARB stdcall func(GLenum, GLuint, *GLdouble) void
glProgramLocalParameter4fARB stdcall func(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) void
glProgramLocalParameter4fvARB stdcall func(GLenum, GLuint, *GLfloat) void
glProgramLocalParameterI4iNV stdcall func(GLenum, GLuint, GLint, GLint, GLint, GLint) void
glProgramLocalParameterI4ivNV stdcall func(GLenum, GLuint, *GLint) void
glProgramLocalParameterI4uiNV stdcall func(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) void
glProgramLocalParameterI4uivNV stdcall func(GLenum, GLuint, *GLuint) void
glProgramLocalParameters4fvEXT stdcall func(GLenum, GLuint, GLsizei, *GLfloat) void
glProgramLocalParametersI4ivNV stdcall func(GLenum, GLuint, GLsizei, *GLint) void
glProgramLocalParametersI4uivNV stdcall func(GLenum, GLuint, GLsizei, *GLuint) void
glProgramNamedParameter4dNV stdcall func(GLuint, GLsizei, *GLubyte, GLdouble, GLdouble, GLdouble, GLdouble) void
glProgramNamedParameter4dvNV stdcall func(GLuint, GLsizei, *GLubyte, **GLdouble, stdcall func(GLuint, GLsizei, *GLubyte, GLfloat, GLfloat, GLfloat, GLfloat) void) void
glProgramNamedParameter4fvNV stdcall func(GLuint, GLsizei, *GLubyte, *GLfloat) void
glProgramParameter4dNV stdcall func(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) void
glProgramParameter4dvNV stdcall func(GLenum, GLuint, *GLdouble) void
glProgramParameter4fNV stdcall func(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) void
glProgramParameter4fvNV stdcall func(GLenum, GLuint, *GLfloat) void
glProgramParameteriARB stdcall func(GLuint, GLenum, GLint) void
glProgramParameteriEXT stdcall func(GLuint, GLenum, GLint) void
glProgramParameteri stdcall func(GLuint, GLenum, GLint) void
glProgramParameters4dvNV stdcall func(GLenum, GLuint, GLsizei, *GLdouble) void
glProgramParameters4fvNV stdcall func(GLenum, GLuint, GLsizei, *GLfloat) void
glProgramPathFragmentInputGenNV stdcall func(GLuint, GLint, GLenum, GLint, *GLfloat) void
glProgramStringARB stdcall func(GLenum, GLenum, GLsizei, ptr) void
glProgramUniform1d stdcall func(GLuint, GLint, GLdouble) void
glProgramUniform1dv stdcall func(GLuint, GLint, GLsizei, *GLdouble) void
glProgramUniform1fEXT stdcall func(GLuint, GLint, GLfloat) void
glProgramUniform1f stdcall func(GLuint, GLint, GLfloat) void
glProgramUniform1fvEXT stdcall func(GLuint, GLint, GLsizei, *GLfloat) void
glProgramUniform1fv stdcall func(GLuint, GLint, GLsizei, *GLfloat) void
glProgramUniform1i64ARB stdcall func(GLuint, GLint, GLint64) void
glProgramUniform1i64NV stdcall func(GLuint, GLint, GLint64EXT) void
glProgramUniform1i64vARB stdcall func(GLuint, GLint, GLsizei, *GLint64) void
glProgramUniform1i64vNV stdcall func(GLuint, GLint, GLsizei, *GLint64EXT) void
glProgramUniform1iEXT stdcall func(GLuint, GLint, GLint) void
glProgramUniform1i stdcall func(GLuint, GLint, GLint) void
glProgramUniform1ivEXT stdcall func(GLuint, GLint, GLsizei, *GLint) void
glProgramUniform1iv stdcall func(GLuint, GLint, GLsizei, *GLint) void
glProgramUniform1ui64ARB stdcall func(GLuint, GLint, GLuint64) void
glProgramUniform1ui64NV stdcall func(GLuint, GLint, GLuint64EXT) void
glProgramUniform1ui64vARB stdcall func(GLuint, GLint, GLsizei, *GLuint64) void
glProgramUniform1ui64vNV stdcall func(GLuint, GLint, GLsizei, *GLuint64EXT) void
glProgramUniform1uiEXT stdcall func(GLuint, GLint, GLuint) void
glProgramUniform1ui stdcall func(GLuint, GLint, GLuint) void
glProgramUniform1uivEXT stdcall func(GLuint, GLint, GLsizei, *GLuint) void
glProgramUniform1uiv stdcall func(GLuint, GLint, GLsizei, *GLuint) void
glProgramUniform2d stdcall func(GLuint, GLint, GLdouble, GLdouble) void
glProgramUniform2dv stdcall func(GLuint, GLint, GLsizei, *GLdouble) void
glProgramUniform2fEXT stdcall func(GLuint, GLint, GLfloat, GLfloat) void
glProgramUniform2f stdcall func(GLuint, GLint, GLfloat, GLfloat) void
glProgramUniform2fvEXT stdcall func(GLuint, GLint, GLsizei, *GLfloat) void
glProgramUniform2fv stdcall func(GLuint, GLint, GLsizei, *GLfloat) void
glProgramUniform2i64ARB stdcall func(GLuint, GLint, GLint64, GLint64) void
glProgramUniform2i64NV stdcall func(GLuint, GLint, GLint64EXT, GLint64EXT) void
glProgramUniform2i64vARB stdcall func(GLuint, GLint, GLsizei, *GLint64) void
glProgramUniform2i64vNV stdcall func(GLuint, GLint, GLsizei, *GLint64EXT) void
glProgramUniform2iEXT stdcall func(GLuint, GLint, GLint, GLint) void
glProgramUniform2i stdcall func(GLuint, GLint, GLint, GLint) void
glProgramUniform2ivEXT stdcall func(GLuint, GLint, GLsizei, *GLint) void
glProgramUniform2iv stdcall func(GLuint, GLint, GLsizei, *GLint) void
glProgramUniform2ui64ARB stdcall func(GLuint, GLint, GLuint64, GLuint64) void
glProgramUniform2ui64NV stdcall func(GLuint, GLint, GLuint64EXT, GLuint64EXT) void
glProgramUniform2ui64vARB stdcall func(GLuint, GLint, GLsizei, *GLuint64) void
glProgramUniform2ui64vNV stdcall func(GLuint, GLint, GLsizei, *GLuint64EXT) void
glProgramUniform2uiEXT stdcall func(GLuint, GLint, GLuint, GLuint) void
glProgramUniform2ui stdcall func(GLuint, GLint, GLuint, GLuint) void
glProgramUniform2uivEXT stdcall func(GLuint, GLint, GLsizei, *GLuint) void
glProgramUniform2uiv stdcall func(GLuint, GLint, GLsizei, *GLuint) void
glProgramUniform3d stdcall func(GLuint, GLint, GLdouble, GLdouble, GLdouble) void
glProgramUniform3dv stdcall func(GLuint, GLint, GLsizei, *GLdouble) void
glProgramUniform3fEXT stdcall func(GLuint, GLint, GLfloat, GLfloat, GLfloat) void
glProgramUniform3f stdcall func(GLuint, GLint, GLfloat, GLfloat, GLfloat) void
glProgramUniform3fvEXT stdcall func(GLuint, GLint, GLsizei, *GLfloat) void
glProgramUniform3fv stdcall func(GLuint, GLint, GLsizei, *GLfloat) void
glProgramUniform3i64ARB stdcall func(GLuint, GLint, GLint64, GLint64, GLint64) void
glProgramUniform3i64NV stdcall func(GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT) void
glProgramUniform3i64vARB stdcall func(GLuint, GLint, GLsizei, *GLint64) void
glProgramUniform3i64vNV stdcall func(GLuint, GLint, GLsizei, *GLint64EXT) void
glProgramUniform3iEXT stdcall func(GLuint, GLint, GLint, GLint, GLint) void
glProgramUniform3i stdcall func(GLuint, GLint, GLint, GLint, GLint) void
glProgramUniform3ivEXT stdcall func(GLuint, GLint, GLsizei, *GLint) void
glProgramUniform3iv stdcall func(GLuint, GLint, GLsizei, *GLint) void
glProgramUniform3ui64ARB stdcall func(GLuint, GLint, GLuint64, GLuint64, GLuint64) void
glProgramUniform3ui64NV stdcall func(GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT) void
glProgramUniform3ui64vARB stdcall func(GLuint, GLint, GLsizei, *GLuint64) void
glProgramUniform3ui64vNV stdcall func(GLuint, GLint, GLsizei, *GLuint64EXT) void
glProgramUniform3uiEXT stdcall func(GLuint, GLint, GLuint, GLuint, GLuint) void
glProgramUniform3ui stdcall func(GLuint, GLint, GLuint, GLuint, GLuint) void
glProgramUniform3uivEXT stdcall func(GLuint, GLint, GLsizei, *GLuint) void
glProgramUniform3uiv stdcall func(GLuint, GLint, GLsizei, *GLuint) void
glProgramUniform4d stdcall func(GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble) void
glProgramUniform4dv stdcall func(GLuint, GLint, GLsizei, *GLdouble) void
glProgramUniform4fEXT stdcall func(GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat) void
glProgramUniform4f stdcall func(GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat) void
glProgramUniform4fvEXT stdcall func(GLuint, GLint, GLsizei, *GLfloat) void
glProgramUniform4fv stdcall func(GLuint, GLint, GLsizei, *GLfloat) void
glProgramUniform4i64ARB stdcall func(GLuint, GLint, GLint64, GLint64, GLint64, GLint64) void
glProgramUniform4i64NV stdcall func(GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) void
glProgramUniform4i64vARB stdcall func(GLuint, GLint, GLsizei, *GLint64) void
glProgramUniform4i64vNV stdcall func(GLuint, GLint, GLsizei, *GLint64EXT) void
glProgramUniform4iEXT stdcall func(GLuint, GLint, GLint, GLint, GLint, GLint) void
glProgramUniform4i stdcall func(GLuint, GLint, GLint, GLint, GLint, GLint) void
glProgramUniform4ivEXT stdcall func(GLuint, GLint, GLsizei, *GLint) void
glProgramUniform4iv stdcall func(GLuint, GLint, GLsizei, *GLint) void
glProgramUniform4ui64ARB stdcall func(GLuint, GLint, GLuint64, GLuint64, GLuint64, GLuint64) void
glProgramUniform4ui64NV stdcall func(GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) void
glProgramUniform4ui64vARB stdcall func(GLuint, GLint, GLsizei, *GLuint64) void
glProgramUniform4ui64vNV stdcall func(GLuint, GLint, GLsizei, *GLuint64EXT) void
glProgramUniform4uiEXT stdcall func(GLuint, GLint, GLuint, GLuint, GLuint, GLuint) void
glProgramUniform4ui stdcall func(GLuint, GLint, GLuint, GLuint, GLuint, GLuint) void
glProgramUniform4uivEXT stdcall func(GLuint, GLint, GLsizei, *GLuint) void
glProgramUniform4uiv stdcall func(GLuint, GLint, GLsizei, *GLuint) void
glProgramUniformHandleui64ARB stdcall func(GLuint, GLint, GLuint64) void
glProgramUniformHandleui64NV stdcall func(GLuint, GLint, GLuint64) void
glProgramUniformHandleui64vARB stdcall func(GLuint, GLint, GLsizei, *GLuint64) void
glProgramUniformHandleui64vNV stdcall func(GLuint, GLint, GLsizei, *GLuint64) void
glProgramUniformMatrix2dv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLdouble) void
glProgramUniformMatrix2fvEXT stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix2fv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix2x3dv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLdouble) void
glProgramUniformMatrix2x3fvEXT stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix2x3fv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix2x4dv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLdouble) void
glProgramUniformMatrix2x4fvEXT stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix2x4fv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix3dv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLdouble) void
glProgramUniformMatrix3fvEXT stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix3fv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix3x2dv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLdouble) void
glProgramUniformMatrix3x2fvEXT stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix3x2fv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix3x4dv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLdouble) void
glProgramUniformMatrix3x4fvEXT stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix3x4fv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix4dv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLdouble) void
glProgramUniformMatrix4fvEXT stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix4fv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix4x2dv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLdouble) void
glProgramUniformMatrix4x2fvEXT stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix4x2fv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix4x3dv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLdouble) void
glProgramUniformMatrix4x3fvEXT stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformMatrix4x3fv stdcall func(GLuint, GLint, GLsizei, GLboolean, *GLfloat) void
glProgramUniformui64NV stdcall func(GLuint, GLint, GLuint64EXT) void
glProgramUniformui64vNV stdcall func(GLuint, GLint, GLsizei, *GLuint64EXT) void
glProgramVertexLimitNV stdcall func(GLenum, GLint) void
glProvokingVertexEXT stdcall func(GLenum) void
glProvokingVertex stdcall func(GLenum) void
glPushClientAttribDefaultEXT stdcall func(GLbitfield) void
glPushDebugGroup stdcall func(GLenum, GLuint, GLsizei, *GLchar) void
glPushGroupMarkerEXT stdcall func(GLsizei, *GLchar) void
glQueryCounterANGLE stdcall func(GLuint, GLenum) void
glQueryCounter stdcall func(GLuint, GLenum) void
glQueryObjectParameteruiAMD stdcall func(GLenum, GLuint, GLenum, GLuint) void
glRasterSamplesEXT stdcall func(GLuint, GLboolean) void
glReadBufferRegion stdcall func(GLuint, GLint, GLint, GLsizei, GLsizei) void
glReadnPixelsARB stdcall func(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ptr) void
glReadnPixels stdcall func(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ptr) void
glReadVideoPixelsSUN stdcall func(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ptr) void
glReferencePlaneSGIX stdcall func(*GLdouble) void
glReleaseShaderCompiler stdcall func() void
glRenderbufferStorageEXT stdcall func(GLenum, GLenum, GLsizei, GLsizei) void
glRenderbufferStorageMultisampleANGLE stdcall func(GLenum, GLsizei, GLenum, GLsizei, GLsizei) void
glRenderbufferStorageMultisampleCoverageNV stdcall func(GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) void
glRenderbufferStorageMultisampleEXT stdcall func(GLenum, GLsizei, GLenum, GLsizei, GLsizei) void
glRenderbufferStorageMultisample stdcall func(GLenum, GLsizei, GLenum, GLsizei, GLsizei) void
glRenderbufferStorage stdcall func(GLenum, GLenum, GLsizei, GLsizei) void
glReplacementCodePointerSUN stdcall func(GLenum, GLsizei, ptr) void
glReplacementCodeubSUN stdcall func(GLubyte) void
glReplacementCodeubvSUN stdcall func(*GLubyte) void
glReplacementCodeuiColor3fVertex3fSUN stdcall func(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glReplacementCodeuiColor3fVertex3fvSUN stdcall func(*GLuint, *GLfloat, *GLfloat) void
glReplacementCodeuiColor4fNormal3fVertex3fSUN stdcall func(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glReplacementCodeuiColor4fNormal3fVertex3fvSUN stdcall func(*GLuint, *GLfloat, *GLfloat, *GLfloat) void
glReplacementCodeuiColor4ubVertex3fSUN stdcall func(GLuint, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) void
glReplacementCodeuiColor4ubVertex3fvSUN stdcall func(*GLuint, *GLubyte, *GLfloat) void
glReplacementCodeuiNormal3fVertex3fSUN stdcall func(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glReplacementCodeuiNormal3fVertex3fvSUN stdcall func(*GLuint, *GLfloat, *GLfloat) void
glReplacementCodeuiSUN stdcall func(GLuint) void
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN stdcall func(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN stdcall func(*GLuint, *GLfloat, *GLfloat, *GLfloat, *GLfloat) void
glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN stdcall func(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN stdcall func(*GLuint, *GLfloat, *GLfloat, *GLfloat) void
glReplacementCodeuiTexCoord2fVertex3fSUN stdcall func(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glReplacementCodeuiTexCoord2fVertex3fvSUN stdcall func(*GLuint, *GLfloat, *GLfloat) void
glReplacementCodeuiVertex3fSUN stdcall func(GLuint, GLfloat, GLfloat, GLfloat) void
glReplacementCodeuiVertex3fvSUN stdcall func(*GLuint, *GLfloat) void
glReplacementCodeuivSUN stdcall func(*GLuint) void
glReplacementCodeusSUN stdcall func(GLushort) void
glReplacementCodeusvSUN stdcall func(*GLushort) void
glRequestResidentProgramsNV stdcall func(GLsizei, *GLuint) void
glResetHistogramEXT stdcall func(GLenum) void
glResetHistogram stdcall func(GLenum) void
glResetMinmaxEXT stdcall func(GLenum) void
glResetMinmax stdcall func(GLenum) void
glResizeBuffersMESA stdcall func() void
glResumeTransformFeedbackNV stdcall func() void
glResumeTransformFeedback stdcall func() void
glRotatex stdcall func(GLfixed, GLfixed, GLfixed, GLfixed) void
glSampleCoverageARB stdcall func(GLclampf, GLboolean) void
glSampleCoverage stdcall func(GLclampf, GLboolean) void
glSampleCoveragex stdcall func(GLclampx, GLboolean) void
glSampleMapATI stdcall func(GLuint, GLuint, GLenum) void
glSampleMaskEXT stdcall func(GLclampf, GLboolean) void
glSampleMaskIndexedNV stdcall func(GLuint, GLbitfield) void
glSampleMaski stdcall func(GLuint, GLbitfield) void
glSampleMaskSGIS stdcall func(GLclampf, GLboolean) void
glSamplePatternEXT stdcall func(GLenum) void
glSamplePatternSGIS stdcall func(GLenum) void
glSamplerParameterf stdcall func(GLuint, GLenum, GLfloat) void
glSamplerParameterfv stdcall func(GLuint, GLenum, *GLfloat) void
glSamplerParameterIiv stdcall func(GLuint, GLenum, *GLint) void
glSamplerParameteri stdcall func(GLuint, GLenum, GLint) void
glSamplerParameterIuiv stdcall func(GLuint, GLenum, *GLuint) void
glSamplerParameteriv stdcall func(GLuint, GLenum, *GLint) void
glScalex stdcall func(GLfixed, GLfixed, GLfixed) void
glScissorArrayv stdcall func(GLuint, GLsizei, *GLint) void
glScissorIndexed stdcall func(GLuint, GLint, GLint, GLsizei, GLsizei) void
glScissorIndexedv stdcall func(GLuint, *GLint) void
glSecondaryColor3bEXT stdcall func(GLbyte, GLbyte, GLbyte) void
glSecondaryColor3b stdcall func(GLbyte, GLbyte, GLbyte) void
glSecondaryColor3bvEXT stdcall func(*GLbyte) void
glSecondaryColor3bv stdcall func(*GLbyte) void
glSecondaryColor3dEXT stdcall func(GLdouble, GLdouble, GLdouble) void
glSecondaryColor3d stdcall func(GLdouble, GLdouble, GLdouble) void
glSecondaryColor3dvEXT stdcall func(*GLdouble) void
glSecondaryColor3dv stdcall func(*GLdouble) void
glSecondaryColor3fEXT stdcall func(GLfloat, GLfloat, GLfloat) void
glSecondaryColor3f stdcall func(GLfloat, GLfloat, GLfloat) void
glSecondaryColor3fvEXT stdcall func(*GLfloat) void
glSecondaryColor3fv stdcall func(*GLfloat) void
glSecondaryColor3hNV stdcall func(GLhalf, GLhalf, GLhalf) void
glSecondaryColor3hvNV stdcall func(*GLhalf) void
glSecondaryColor3iEXT stdcall func(GLint, GLint, GLint) void
glSecondaryColor3i stdcall func(GLint, GLint, GLint) void
glSecondaryColor3ivEXT stdcall func(*GLint) void
glSecondaryColor3iv stdcall func(*GLint) void
glSecondaryColor3sEXT stdcall func(GLshort, GLshort, GLshort) void
glSecondaryColor3s stdcall func(GLshort, GLshort, GLshort) void
glSecondaryColor3svEXT stdcall func(*GLshort) void
glSecondaryColor3sv stdcall func(*GLshort) void
glSecondaryColor3ubEXT stdcall func(GLubyte, GLubyte, GLubyte) void
glSecondaryColor3ub stdcall func(GLubyte, GLubyte, GLubyte) void
glSecondaryColor3ubvEXT stdcall func(*GLubyte) void
glSecondaryColor3ubv stdcall func(*GLubyte) void
glSecondaryColor3uiEXT stdcall func(GLuint, GLuint, GLuint) void
glSecondaryColor3ui stdcall func(GLuint, GLuint, GLuint) void
glSecondaryColor3uivEXT stdcall func(*GLuint) void
glSecondaryColor3uiv stdcall func(*GLuint) void
glSecondaryColor3usEXT stdcall func(GLushort, GLushort, GLushort) void
glSecondaryColor3us stdcall func(GLushort, GLushort, GLushort) void
glSecondaryColor3usvEXT stdcall func(*GLushort) void
glSecondaryColor3usv stdcall func(*GLushort) void
glSecondaryColorFormatNV stdcall func(GLint, GLenum, GLsizei) void
glSecondaryColorP3ui stdcall func(GLenum, GLuint) void
glSecondaryColorP3uiv stdcall func(GLenum, *GLuint) void
glSecondaryColorPointerEXT stdcall func(GLint, GLenum, GLsizei, ptr) void
glSecondaryColorPointerListIBM stdcall func(GLint, GLenum, GLint, *ptr, GLint) void
glSecondaryColorPointer stdcall func(GLint, GLenum, GLsizei, ptr) void
glSelectPerfMonitorCountersAMD stdcall func(GLuint, GLboolean, GLuint, GLint, *GLuint) void
glSeparableFilter2DEXT stdcall func(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ptr, ptr) void
glSeparableFilter2D stdcall func(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ptr, ptr) void
glSetFenceAPPLE stdcall func(GLuint) void
glSetFenceNV stdcall func(GLuint, GLenum) void
glSetFragmentShaderConstantATI stdcall func(GLuint, *GLfloat) void
glSetInvariantEXT stdcall func(GLuint, GLenum, ptr) void
glSetLocalConstantEXT stdcall func(GLuint, GLenum, ptr) void
glSetMultisamplefvAMD stdcall func(GLenum, GLuint, *GLfloat) void
glShaderBinary stdcall func(GLsizei, *GLuint, GLenum, ptr, GLsizei) void
glShaderOp1EXT stdcall func(GLenum, GLuint, GLuint) void
glShaderOp2EXT stdcall func(GLenum, GLuint, GLuint, GLuint) void
glShaderOp3EXT stdcall func(GLenum, GLuint, GLuint, GLuint, GLuint) void
glShaderSourceARB stdcall func(GLhandleARB, GLsizei, **GLcharARB, *GLint) void
glShaderSource stdcall func(GLuint, GLsizei, **GLchar, *GLint) void
glShaderStorageBlockBinding stdcall func(GLuint, GLuint, GLuint) void
glSharpenTexFuncSGIS stdcall func(GLenum, GLsizei, *GLfloat) void
glSpriteParameterfSGIX stdcall func(GLenum, GLfloat) void
glSpriteParameterfvSGIX stdcall func(GLenum, *GLfloat) void
glSpriteParameteriSGIX stdcall func(GLenum, GLint) void
glSpriteParameterivSGIX stdcall func(GLenum, *GLint) void
glStencilFillPathInstancedNV stdcall func(GLsizei, GLenum, ptr, GLuint, GLenum, GLuint, GLenum, *GLfloat) void
glStencilFillPathNV stdcall func(GLuint, GLenum, GLuint) void
glStencilFuncSeparateATI stdcall func(GLenum, GLenum, GLint, GLuint) void
glStencilFuncSeparate stdcall func(GLenum, GLenum, GLint, GLuint) void
glStencilMaskSeparate stdcall func(GLenum, GLuint) void
glStencilOpSeparateATI stdcall func(GLenum, GLenum, GLenum, GLenum) void
glStencilOpSeparate stdcall func(GLenum, GLenum, GLenum, GLenum) void
glStencilOpValueAMD stdcall func(GLenum, GLuint) void
glStencilStrokePathInstancedNV stdcall func(GLsizei, GLenum, ptr, GLuint, GLint, GLuint, GLenum, *GLfloat) void
glStencilStrokePathNV stdcall func(GLuint, GLint, GLuint) void
glStencilThenCoverFillPathInstancedNV stdcall func(GLsizei, GLenum, ptr, GLuint, GLenum, GLuint, GLenum, GLenum, *GLfloat) void
glStencilThenCoverFillPathNV stdcall func(GLuint, GLenum, GLuint, GLenum) void
glStencilThenCoverStrokePathInstancedNV stdcall func(GLsizei, GLenum, ptr, GLuint, GLint, GLuint, GLenum, GLenum, *GLfloat) void
glStencilThenCoverStrokePathNV stdcall func(GLuint, GLint, GLuint, GLenum) void
glStringMarkerGREMEDY stdcall func(GLsizei, ptr) void
glSubpixelPrecisionBiasNV stdcall func(GLuint, GLuint) void
glSwizzleEXT stdcall func(GLuint, GLuint, GLenum, GLenum, GLenum, GLenum) void
glSyncTextureINTEL stdcall func(GLuint) void
glTagSampleBufferSGIX stdcall func() void
glTangentPointerEXT stdcall func(GLenum, GLsizei, ptr) void
glTbufferMask3DFX stdcall func(GLuint) void
glTessellationFactorAMD stdcall func(GLfloat) void
glTessellationModeAMD stdcall func(GLenum) void
glTexBufferARB stdcall func(GLenum, GLenum, GLuint) void
glTexBufferEXT stdcall func(GLenum, GLenum, GLuint) void
glTexBuffer stdcall func(GLenum, GLenum, GLuint) void
glTexBufferRange stdcall func(GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) void
glTexBumpParameterfvATI stdcall func(GLenum, *GLfloat) void
glTexBumpParameterivATI stdcall func(GLenum, *GLint) void
glTexCoord1hNV stdcall func(GLhalf) void
glTexCoord1hvNV stdcall func(*GLhalf) void
glTexCoord2fColor3fVertex3fSUN stdcall func(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glTexCoord2fColor3fVertex3fvSUN stdcall func(*GLfloat, *GLfloat, *GLfloat) void
glTexCoord2fColor4fNormal3fVertex3fSUN stdcall func(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glTexCoord2fColor4fNormal3fVertex3fvSUN stdcall func(*GLfloat, *GLfloat, *GLfloat, *GLfloat) void
glTexCoord2fColor4ubVertex3fSUN stdcall func(GLfloat, GLfloat, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) void
glTexCoord2fColor4ubVertex3fvSUN stdcall func(*GLfloat, *GLubyte, *GLfloat) void
glTexCoord2fNormal3fVertex3fSUN stdcall func(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glTexCoord2fNormal3fVertex3fvSUN stdcall func(*GLfloat, *GLfloat, *GLfloat) void
glTexCoord2fVertex3fSUN stdcall func(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glTexCoord2fVertex3fvSUN stdcall func(*GLfloat, *GLfloat) void
glTexCoord2hNV stdcall func(GLhalf, GLhalf) void
glTexCoord2hvNV stdcall func(*GLhalf) void
glTexCoord3hNV stdcall func(GLhalf, GLhalf, GLhalf) void
glTexCoord3hvNV stdcall func(*GLhalf) void
glTexCoord4fColor4fNormal3fVertex4fSUN stdcall func(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glTexCoord4fColor4fNormal3fVertex4fvSUN stdcall func(*GLfloat, *GLfloat, *GLfloat, *GLfloat) void
glTexCoord4fVertex4fSUN stdcall func(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void
glTexCoord4fVertex4fvSUN stdcall func(*GLfloat, *GLfloat) void
glTexCoord4hNV stdcall func(GLhalf, GLhalf, GLhalf, GLhalf) void
glTexCoord4hvNV stdcall func(*GLhalf) void
glTexCoordFormatNV stdcall func(GLint, GLenum, GLsizei) void
glTexCoordP1ui stdcall func(GLenum, GLuint) void
glTexCoordP1uiv stdcall func(GLenum, *GLuint) void
glTexCoordP2ui stdcall func(GLenum, GLuint) void
glTexCoordP2uiv stdcall func(GLenum, *GLuint) void
glTexCoordP3ui stdcall func(GLenum, GLuint) void
glTexCoordP3uiv stdcall func(GLenum, *GLuint) void
glTexCoordP4ui stdcall func(GLenum, GLuint) void
glTexCoordP4uiv stdcall func(GLenum, *GLuint) void
glTexCoordPointerEXT stdcall func(GLint, GLenum, GLsizei, GLsizei, ptr) void
glTexCoordPointerListIBM stdcall func(GLint, GLenum, GLint, *ptr, GLint) void
glTexCoordPointervINTEL stdcall func(GLint, GLenum, *ptr) void
glTexEnvx stdcall func(GLenum, GLenum, GLfixed) void
glTexEnvxv stdcall func(GLenum, GLenum, *GLfixed) void
glTexFilterFuncSGIS stdcall func(GLenum, GLenum, GLsizei, *GLfloat) void
glTexImage2DMultisampleCoverageNV stdcall func(GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean) void
glTexImage2DMultisample stdcall func(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) void
glTexImage3DEXT stdcall func(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ptr) void
glTexImage3DMultisampleCoverageNV stdcall func(GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) void
glTexImage3DMultisample stdcall func(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) void
glTexImage3D stdcall func(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ptr) void
glTexImage4DSGIS stdcall func(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ptr) void
glTexPageCommitmentARB stdcall func(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean) void
glTexParameterIivEXT stdcall func(GLenum, GLenum, *GLint) void
glTexParameterIiv stdcall func(GLenum, GLenum, *GLint) void
glTexParameterIuivEXT stdcall func(GLenum, GLenum, *GLuint) void
glTexParameterIuiv stdcall func(GLenum, GLenum, *GLuint) void
glTexParameterx stdcall func(GLenum, GLenum, GLfixed) void
glTexParameterxv stdcall func(GLenum, GLenum, *GLfixed) void
glTexRenderbufferNV stdcall func(GLenum, GLuint) void
glTexScissorFuncINTEL stdcall func(GLenum, GLenum, GLenum) void
glTexScissorINTEL stdcall func(GLenum, GLclampf, GLclampf) void
glTexStorage1D stdcall func(GLenum, GLsizei, GLenum, GLsizei) void
glTexStorage2DMultisample stdcall func(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) void
glTexStorage2D stdcall func(GLenum, GLsizei, GLenum, GLsizei, GLsizei) void
glTexStorage3DMultisample stdcall func(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) void
glTexStorage3D stdcall func(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) void
glTexStorageSparseAMD stdcall func(GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield) void
glTexSubImage1DEXT stdcall func(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ptr) void
glTexSubImage2DEXT stdcall func(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ptr) void
glTexSubImage3DEXT stdcall func(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ptr) void
glTexSubImage3D stdcall func(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ptr) void
glTexSubImage4DSGIS stdcall func(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ptr) void
glTextureBarrierNV stdcall func() void
glTextureBarrier stdcall func() void
glTextureBufferEXT stdcall func(GLuint, GLenum, GLenum, GLuint) void
glTextureBuffer stdcall func(GLuint, GLenum, GLuint) void
glTextureBufferRangeEXT stdcall func(GLuint, GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) void
glTextureBufferRange stdcall func(GLuint, GLenum, GLuint, GLintptr, GLsizeiptr) void
glTextureFogSGIX stdcall func(GLenum) void
glTextureImage1DEXT stdcall func(GLuint, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, ptr) void
glTextureImage2DEXT stdcall func(GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, ptr) void
glTextureImage2DMultisampleCoverageNV stdcall func(GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean) void
glTextureImage2DMultisampleNV stdcall func(GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean) void
glTextureImage3DEXT stdcall func(GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ptr) void
glTextureImage3DMultisampleCoverageNV stdcall func(GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) void
glTextureImage3DMultisampleNV stdcall func(GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) void
glTextureLightEXT stdcall func(GLenum) void
glTextureMaterialEXT stdcall func(GLenum, GLenum) void
glTextureNormalEXT stdcall func(GLenum) void
glTexturePageCommitmentEXT stdcall func(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean) void
glTextureParameterfEXT stdcall func(GLuint, GLenum, GLenum, GLfloat) void
glTextureParameterf stdcall func(GLuint, GLenum, GLfloat) void
glTextureParameterfvEXT stdcall func(GLuint, GLenum, GLenum, *GLfloat) void
glTextureParameterfv stdcall func(GLuint, GLenum, *GLfloat) void
glTextureParameteriEXT stdcall func(GLuint, GLenum, GLenum, GLint) void
glTextureParameterIivEXT stdcall func(GLuint, GLenum, GLenum, *GLint) void
glTextureParameterIiv stdcall func(GLuint, GLenum, *GLint) void
glTextureParameteri stdcall func(GLuint, GLenum, GLint) void
glTextureParameterIuivEXT stdcall func(GLuint, GLenum, GLenum, *GLuint) void
glTextureParameterIuiv stdcall func(GLuint, GLenum, *GLuint) void
glTextureParameterivEXT stdcall func(GLuint, GLenum, GLenum, *GLint) void
glTextureParameteriv stdcall func(GLuint, GLenum, *GLint) void
glTextureRangeAPPLE stdcall func(GLenum, GLsizei, ptr) void
glTextureRenderbufferEXT stdcall func(GLuint, GLenum, GLuint) void
glTextureStorage1DEXT stdcall func(GLuint, GLenum, GLsizei, GLenum, GLsizei) void
glTextureStorage1D stdcall func(GLuint, GLsizei, GLenum, GLsizei) void
glTextureStorage2DEXT stdcall func(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei) void
glTextureStorage2DMultisampleEXT stdcall func(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) void
glTextureStorage2DMultisample stdcall func(GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) void
glTextureStorage2D stdcall func(GLuint, GLsizei, GLenum, GLsizei, GLsizei) void
glTextureStorage3DEXT stdcall func(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) void
glTextureStorage3DMultisampleEXT stdcall func(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) void
glTextureStorage3DMultisample stdcall func(GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) void
glTextureStorage3D stdcall func(GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) void
glTextureStorageSparseAMD stdcall func(GLuint, GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield) void
glTextureSubImage1DEXT stdcall func(GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ptr) void
glTextureSubImage1D stdcall func(GLuint, GLint, GLint, GLsizei, GLenum, GLenum, ptr) void
glTextureSubImage2DEXT stdcall func(GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ptr) void
glTextureSubImage2D stdcall func(GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ptr) void
glTextureSubImage3DEXT stdcall func(GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ptr) void
glTextureSubImage3D stdcall func(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ptr) void
glTextureView stdcall func(GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint) void
glTrackMatrixNV stdcall func(GLenum, GLuint, GLenum, GLenum) void
glTransformFeedbackAttribsNV stdcall func(GLuint, *GLint, GLenum) void
glTransformFeedbackBufferBase stdcall func(GLuint, GLuint, GLuint) void
glTransformFeedbackBufferRange stdcall func(GLuint, GLuint, GLuint, GLintptr, GLsizeiptr) void
glTransformFeedbackVaryingsEXT stdcall func(GLuint, GLsizei, **GLchar, **ubyte, GLenum) void
glTransformFeedbackVaryingsNV stdcall func(GLuint, GLsizei, *GLint, GLenum) void
glTransformFeedbackVaryings stdcall func(GLuint, GLsizei, **GLchar, **ubyte, GLenum) void
glTransformPathNV stdcall func(GLuint, GLuint, GLenum, *GLfloat) void
glTranslatex stdcall func(GLfixed, GLfixed, GLfixed) void
glUniform1d stdcall func(GLint, GLdouble) void
glUniform1dv stdcall func(GLint, GLsizei, *GLdouble) void
glUniform1fARB stdcall func(GLint, GLfloat) void
glUniform1f stdcall func(GLint, GLfloat) void
glUniform1fvARB stdcall func(GLint, GLsizei, *GLfloat) void
glUniform1fv stdcall func(GLint, GLsizei, *GLfloat) void
glUniform1i64ARB stdcall func(GLint, GLint64) void
glUniform1i64NV stdcall func(GLint, GLint64EXT) void
glUniform1i64vARB stdcall func(GLint, GLsizei, *GLint64) void
glUniform1i64vNV stdcall func(GLint, GLsizei, *GLint64EXT) void
glUniform1iARB stdcall func(GLint, GLint) void
glUniform1i stdcall func(GLint, GLint) void
glUniform1ivARB stdcall func(GLint, GLsizei, *GLint) void
glUniform1iv stdcall func(GLint, GLsizei, *GLint) void
glUniform1ui64ARB stdcall func(GLint, GLuint64) void
glUniform1ui64NV stdcall func(GLint, GLuint64EXT) void
glUniform1ui64vARB stdcall func(GLint, GLsizei, *GLuint64) void
glUniform1ui64vNV stdcall func(GLint, GLsizei, *GLuint64EXT) void
glUniform1uiEXT stdcall func(GLint, GLuint) void
glUniform1ui stdcall func(GLint, GLuint) void
glUniform1uivEXT stdcall func(GLint, GLsizei, *GLuint) void
glUniform1uiv stdcall func(GLint, GLsizei, *GLuint) void
glUniform2d stdcall func(GLint, GLdouble, GLdouble) void
glUniform2dv stdcall func(GLint, GLsizei, *GLdouble) void
glUniform2fARB stdcall func(GLint, GLfloat, GLfloat) void
glUniform2f stdcall func(GLint, GLfloat, GLfloat) void
glUniform2fvARB stdcall func(GLint, GLsizei, *GLfloat) void
glUniform2fv stdcall func(GLint, GLsizei, *GLfloat) void
glUniform2i64ARB stdcall func(GLint, GLint64, GLint64) void
glUniform2i64NV stdcall func(GLint, GLint64EXT, GLint64EXT) void
glUniform2i64vARB stdcall func(GLint, GLsizei, *GLint64) void
glUniform2i64vNV stdcall func(GLint, GLsizei, *GLint64EXT) void
glUniform2iARB stdcall func(GLint, GLint, GLint) void
glUniform2i stdcall func(GLint, GLint, GLint) void
glUniform2ivARB stdcall func(GLint, GLsizei, *GLint) void
glUniform2iv stdcall func(GLint, GLsizei, *GLint) void
glUniform2ui64ARB stdcall func(GLint, GLuint64, GLuint64) void
glUniform2ui64NV stdcall func(GLint, GLuint64EXT, GLuint64EXT) void
glUniform2ui64vARB stdcall func(GLint, GLsizei, *GLuint64) void
glUniform2ui64vNV stdcall func(GLint, GLsizei, *GLuint64EXT) void
glUniform2uiEXT stdcall func(GLint, GLuint, GLuint) void
glUniform2ui stdcall func(GLint, GLuint, GLuint) void
glUniform2uivEXT stdcall func(GLint, GLsizei, *GLuint) void
glUniform2uiv stdcall func(GLint, GLsizei, *GLuint) void
glUniform3d stdcall func(GLint, GLdouble, GLdouble, GLdouble) void
glUniform3dv stdcall func(GLint, GLsizei, *GLdouble) void
glUniform3fARB stdcall func(GLint, GLfloat, GLfloat, GLfloat) void
glUniform3f stdcall func(GLint, GLfloat, GLfloat, GLfloat) void
glUniform3fvARB stdcall func(GLint, GLsizei, *GLfloat) void
glUniform3fv stdcall func(GLint, GLsizei, *GLfloat) void
glUniform3i64ARB stdcall func(GLint, GLint64, GLint64, GLint64) void
glUniform3i64NV stdcall func(GLint, GLint64EXT, GLint64EXT, GLint64EXT) void
glUniform3i64vARB stdcall func(GLint, GLsizei, *GLint64) void
glUniform3i64vNV stdcall func(GLint, GLsizei, *GLint64EXT) void
glUniform3iARB stdcall func(GLint, GLint, GLint, GLint) void
glUniform3i stdcall func(GLint, GLint, GLint, GLint) void
glUniform3ivARB stdcall func(GLint, GLsizei, *GLint) void
glUniform3iv stdcall func(GLint, GLsizei, *GLint) void
glUniform3ui64ARB stdcall func(GLint, GLuint64, GLuint64, GLuint64) void
glUniform3ui64NV stdcall func(GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT) void
glUniform3ui64vARB stdcall func(GLint, GLsizei, *GLuint64) void
glUniform3ui64vNV stdcall func(GLint, GLsizei, *GLuint64EXT) void
glUniform3uiEXT stdcall func(GLint, GLuint, GLuint, GLuint) void
glUniform3ui stdcall func(GLint, GLuint, GLuint, GLuint) void
glUniform3uivEXT stdcall func(GLint, GLsizei, *GLuint) void
glUniform3uiv stdcall func(GLint, GLsizei, *GLuint) void
glUniform4d stdcall func(GLint, GLdouble, GLdouble, GLdouble, GLdouble) void
glUniform4dv stdcall func(GLint, GLsizei, *GLdouble) void
glUniform4fARB stdcall func(GLint, GLfloat, GLfloat, GLfloat, GLfloat) void
glUniform4f stdcall func(GLint, GLfloat, GLfloat, GLfloat, GLfloat) void
glUniform4fvARB stdcall func(GLint, GLsizei, *GLfloat) void
glUniform4fv stdcall func(GLint, GLsizei, *GLfloat) void
glUniform4i64ARB stdcall func(GLint, GLint64, GLint64, GLint64, GLint64) void
glUniform4i64NV stdcall func(GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) void
glUniform4i64vARB stdcall func(GLint, GLsizei, *GLint64) void
glUniform4i64vNV stdcall func(GLint, GLsizei, *GLint64EXT) void
glUniform4iARB stdcall func(GLint, GLint, GLint, GLint, GLint) void
glUniform4i stdcall func(GLint, GLint, GLint, GLint, GLint) void
glUniform4ivARB stdcall func(GLint, GLsizei, *GLint) void
glUniform4iv stdcall func(GLint, GLsizei, *GLint) void
glUniform4ui64ARB stdcall func(GLint, GLuint64, GLuint64, GLuint64, GLuint64) void
glUniform4ui64NV stdcall func(GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) void
glUniform4ui64vARB stdcall func(GLint, GLsizei, *GLuint64) void
glUniform4ui64vNV stdcall func(GLint, GLsizei, *GLuint64EXT) void
glUniform4uiEXT stdcall func(GLint, GLuint, GLuint, GLuint, GLuint) void
glUniform4ui stdcall func(GLint, GLuint, GLuint, GLuint, GLuint) void
glUniform4uivEXT stdcall func(GLint, GLsizei, *GLuint) void
glUniform4uiv stdcall func(GLint, GLsizei, *GLuint) void
glUniformBlockBinding stdcall func(GLuint, GLuint, GLuint) void
glUniformBufferEXT stdcall func(GLuint, GLint, GLuint) void
glUniformHandleui64ARB stdcall func(GLint, GLuint64) void
glUniformHandleui64NV stdcall func(GLint, GLuint64) void
glUniformHandleui64vARB stdcall func(GLint, GLsizei, *GLuint64) void
glUniformHandleui64vNV stdcall func(GLint, GLsizei, *GLuint64) void
glUniformMatrix2dv stdcall func(GLint, GLsizei, GLboolean, *GLdouble) void
glUniformMatrix2fvARB stdcall func(GLint, GLsizei, GLboolean, *GLfloat) void
glUniformMatrix2fv stdcall func(GLint, GLsizei, GLboolean, *GLfloat) void
glUniformMatrix2x3dv stdcall func(GLint, GLsizei, GLboolean, *GLdouble) void
glUniformMatrix2x3fv stdcall func(GLint, GLsizei, GLboolean, *GLfloat) void
glUniformMatrix2x4dv stdcall func(GLint, GLsizei, GLboolean, *GLdouble) void
glUniformMatrix2x4fv stdcall func(GLint, GLsizei, GLboolean, *GLfloat) void
glUniformMatrix3dv stdcall func(GLint, GLsizei, GLboolean, *GLdouble) void
glUniformMatrix3fvARB stdcall func(GLint, GLsizei, GLboolean, *GLfloat) void
glUniformMatrix3fv stdcall func(GLint, GLsizei, GLboolean, *GLfloat) void
glUniformMatrix3x2dv stdcall func(GLint, GLsizei, GLboolean, *GLdouble) void
glUniformMatrix3x2fv stdcall func(GLint, GLsizei, GLboolean, *GLfloat) void
glUniformMatrix3x4dv stdcall func(GLint, GLsizei, GLboolean, *GLdouble) void
glUniformMatrix3x4fv stdcall func(GLint, GLsizei, GLboolean, *GLfloat) void
glUniformMatrix4dv stdcall func(GLint, GLsizei, GLboolean, *GLdouble) void
glUniformMatrix4fvARB stdcall func(GLint, GLsizei, GLboolean, *GLfloat) void
glUniformMatrix4fv stdcall func(GLint, GLsizei, GLboolean, *GLfloat) void
glUniformMatrix4x2dv stdcall func(GLint, GLsizei, GLboolean, *GLdouble) void
glUniformMatrix4x2fv stdcall func(GLint, GLsizei, GLboolean, *GLfloat) void
glUniformMatrix4x3dv stdcall func(GLint, GLsizei, GLboolean, *GLdouble) void
glUniformMatrix4x3fv stdcall func(GLint, GLsizei, GLboolean, *GLfloat) void
glUniformSubroutinesuiv stdcall func(GLenum, GLsizei, *GLuint) void
glUniformui64NV stdcall func(GLint, GLuint64EXT) void
glUniformui64vNV stdcall func(GLint, GLsizei, *GLuint64EXT) void
glUnlockArraysEXT stdcall func() void
glUnmapObjectBufferATI stdcall func(GLuint) void
glUnmapTexture2DINTEL stdcall func(GLuint, GLint) void
glUpdateObjectBufferATI stdcall func(GLuint, GLuint, GLsizei, ptr, GLenum) void
glUseProgramObjectARB stdcall func(GLhandleARB) void
glUseProgram stdcall func(GLuint) void
glUseProgramStages stdcall func(GLuint, GLbitfield, GLuint) void
glUseShaderProgramEXT stdcall func(GLenum, GLuint) void
glValidateProgramARB stdcall func(GLhandleARB) void
glValidateProgramPipeline stdcall func(GLuint) void
glValidateProgram stdcall func(GLuint) void
glVariantArrayObjectATI stdcall func(GLuint, GLenum, GLsizei, GLuint, GLuint) void
glVariantbvEXT stdcall func(GLuint, *GLbyte) void
glVariantdvEXT stdcall func(GLuint, *GLdouble) void
glVariantfvEXT stdcall func(GLuint, *GLfloat) void
glVariantivEXT stdcall func(GLuint, *GLint) void
glVariantPointerEXT stdcall func(GLuint, GLenum, GLuint, ptr) void
glVariantsvEXT stdcall func(GLuint, *GLshort) void
glVariantubvEXT stdcall func(GLuint, *GLubyte) void
glVariantuivEXT stdcall func(GLuint, *GLuint) void
glVariantusvEXT stdcall func(GLuint, *GLushort) void
glVDPAUFiniNV stdcall func() void
glVDPAUGetSurfaceivNV stdcall func(GLvdpauSurfaceNV, GLenum, GLsizei, *GLsizei, *GLint) void
glVDPAUInitNV stdcall func(ptr, ptr) void
glVDPAUIsSurfaceNV stdcall func(GLvdpauSurfaceNV) void
glVDPAUMapSurfacesNV stdcall func(GLsizei, *GLvdpauSurfaceNV) void
glVDPAUSurfaceAccessNV stdcall func(GLvdpauSurfaceNV, GLenum) void
glVDPAUUnmapSurfacesNV stdcall func(GLsizei, *GLvdpauSurfaceNV) void
glVDPAUUnregisterSurfaceNV stdcall func(GLvdpauSurfaceNV) void
glVertex2hNV stdcall func(GLhalf, GLhalf) void
glVertex2hvNV stdcall func(*GLhalf) void
glVertex3hNV stdcall func(GLhalf, GLhalf, GLhalf) void
glVertex3hvNV stdcall func(*GLhalf) void
glVertex4hNV stdcall func(GLhalf, GLhalf, GLhalf, GLhalf) void
glVertex4hvNV stdcall func(*GLhalf) void
glVertexArrayAttribBinding stdcall func(GLuint, GLuint, GLuint) void
glVertexArrayAttribFormat stdcall func(GLuint, GLuint, GLint, GLenum, GLboolean, GLuint) void
glVertexArrayAttribIFormat stdcall func(GLuint, GLuint, GLint, GLenum, GLuint) void
glVertexArrayAttribLFormat stdcall func(GLuint, GLuint, GLint, GLenum, GLuint) void
glVertexArrayBindingDivisor stdcall func(GLuint, GLuint, GLuint) void
glVertexArrayBindVertexBufferEXT stdcall func(GLuint, GLuint, GLuint, GLintptr, GLsizei) void
glVertexArrayColorOffsetEXT stdcall func(GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) void
glVertexArrayEdgeFlagOffsetEXT stdcall func(GLuint, GLuint, GLsizei, GLintptr) void
glVertexArrayElementBuffer stdcall func(GLuint, GLuint) void
glVertexArrayFogCoordOffsetEXT stdcall func(GLuint, GLuint, GLenum, GLsizei, GLintptr) void
glVertexArrayIndexOffsetEXT stdcall func(GLuint, GLuint, GLenum, GLsizei, GLintptr) void
glVertexArrayMultiTexCoordOffsetEXT stdcall func(GLuint, GLuint, GLenum, GLint, GLenum, GLsizei, GLintptr) void
glVertexArrayNormalOffsetEXT stdcall func(GLuint, GLuint, GLenum, GLsizei, GLintptr) void
glVertexArrayParameteriAPPLE stdcall func(GLenum, GLint) void
glVertexArrayRangeAPPLE stdcall func(GLsizei, ptr) void
glVertexArrayRangeNV stdcall func(GLsizei, ptr) void
glVertexArraySecondaryColorOffsetEXT stdcall func(GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) void
glVertexArrayTexCoordOffsetEXT stdcall func(GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) void
glVertexArrayVertexAttribBindingEXT stdcall func(GLuint, GLuint, GLuint) void
glVertexArrayVertexAttribDivisorEXT stdcall func(GLuint, GLuint, GLuint) void
glVertexArrayVertexAttribFormatEXT stdcall func(GLuint, GLuint, GLint, GLenum, GLboolean, GLuint) void
glVertexArrayVertexAttribIFormatEXT stdcall func(GLuint, GLuint, GLint, GLenum, GLuint) void
glVertexArrayVertexAttribIOffsetEXT stdcall func(GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) void
glVertexArrayVertexAttribLFormatEXT stdcall func(GLuint, GLuint, GLint, GLenum, GLuint) void
glVertexArrayVertexAttribLOffsetEXT stdcall func(GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) void
glVertexArrayVertexAttribOffsetEXT stdcall func(GLuint, GLuint, GLuint, GLint, GLenum, GLboolean, GLsizei, GLintptr) void
glVertexArrayVertexBindingDivisorEXT stdcall func(GLuint, GLuint, GLuint) void
glVertexArrayVertexBuffer stdcall func(GLuint, GLuint, GLuint, GLintptr, GLsizei) void
glVertexArrayVertexBuffers stdcall func(GLuint, GLuint, GLsizei, *GLuint, *GLintptr, *GLsizei) void
glVertexArrayVertexOffsetEXT stdcall func(GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) void
glVertexAttrib1dARB stdcall func(GLuint, GLdouble) void
glVertexAttrib1dNV stdcall func(GLuint, GLdouble) void
glVertexAttrib1d stdcall func(GLuint, GLdouble) void
glVertexAttrib1dvARB stdcall func(GLuint, *GLdouble) void
glVertexAttrib1dvNV stdcall func(GLuint, *GLdouble) void
glVertexAttrib1dv stdcall func(GLuint, *GLdouble) void
glVertexAttrib1fARB stdcall func(GLuint, GLfloat) void
glVertexAttrib1fNV stdcall func(GLuint, GLfloat) void
glVertexAttrib1f stdcall func(GLuint, GLfloat) void
glVertexAttrib1fvARB stdcall func(GLuint, *GLfloat) void
glVertexAttrib1fvNV stdcall func(GLuint, *GLfloat) void
glVertexAttrib1fv stdcall func(GLuint, *GLfloat) void
glVertexAttrib1hNV stdcall func(GLuint, GLhalf) void
glVertexAttrib1hvNV stdcall func(GLuint, *GLhalf) void
glVertexAttrib1sARB stdcall func(GLuint, GLshort) void
glVertexAttrib1sNV stdcall func(GLuint, GLshort) void
glVertexAttrib1s stdcall func(GLuint, GLshort) void
glVertexAttrib1svARB stdcall func(GLuint, *GLshort) void
glVertexAttrib1svNV stdcall func(GLuint, *GLshort) void
glVertexAttrib1sv stdcall func(GLuint, *GLshort) void
glVertexAttrib2dARB stdcall func(GLuint, GLdouble, GLdouble) void
glVertexAttrib2dNV stdcall func(GLuint, GLdouble, GLdouble) void
glVertexAttrib2d stdcall func(GLuint, GLdouble, GLdouble) void
glVertexAttrib2dvARB stdcall func(GLuint, *GLdouble) void
glVertexAttrib2dvNV stdcall func(GLuint, *GLdouble) void
glVertexAttrib2dv stdcall func(GLuint, *GLdouble) void
glVertexAttrib2fARB stdcall func(GLuint, GLfloat, GLfloat) void
glVertexAttrib2fNV stdcall func(GLuint, GLfloat, GLfloat) void
glVertexAttrib2f stdcall func(GLuint, GLfloat, GLfloat) void
glVertexAttrib2fvARB stdcall func(GLuint, *GLfloat) void
glVertexAttrib2fvNV stdcall func(GLuint, *GLfloat) void
glVertexAttrib2fv stdcall func(GLuint, *GLfloat) void
glVertexAttrib2hNV stdcall func(GLuint, GLhalf, GLhalf) void
glVertexAttrib2hvNV stdcall func(GLuint, *GLhalf) void
glVertexAttrib2sARB stdcall func(GLuint, GLshort, GLshort) void
glVertexAttrib2sNV stdcall func(GLuint, GLshort, GLshort) void
glVertexAttrib2s stdcall func(GLuint, GLshort, GLshort) void
glVertexAttrib2svARB stdcall func(GLuint, *GLshort) void
glVertexAttrib2svNV stdcall func(GLuint, *GLshort) void
glVertexAttrib2sv stdcall func(GLuint, *GLshort) void
glVertexAttrib3dARB stdcall func(GLuint, GLdouble, GLdouble, GLdouble) void
glVertexAttrib3dNV stdcall func(GLuint, GLdouble, GLdouble, GLdouble) void
glVertexAttrib3d stdcall func(GLuint, GLdouble, GLdouble, GLdouble) void
glVertexAttrib3dvARB stdcall func(GLuint, *GLdouble) void
glVertexAttrib3dvNV stdcall func(GLuint, *GLdouble) void
glVertexAttrib3dv stdcall func(GLuint, *GLdouble) void
glVertexAttrib3fARB stdcall func(GLuint, GLfloat, GLfloat, GLfloat) void
glVertexAttrib3fNV stdcall func(GLuint, GLfloat, GLfloat, GLfloat) void
glVertexAttrib3f stdcall func(GLuint, GLfloat, GLfloat, GLfloat) void
glVertexAttrib3fvARB stdcall func(GLuint, *GLfloat) void
glVertexAttrib3fvNV stdcall func(GLuint, *GLfloat) void
glVertexAttrib3fv stdcall func(GLuint, *GLfloat) void
glVertexAttrib3hNV stdcall func(GLuint, GLhalf, GLhalf, GLhalf) void
glVertexAttrib3hvNV stdcall func(GLuint, *GLhalf) void
glVertexAttrib3sARB stdcall func(GLuint, GLshort, GLshort, GLshort) void
glVertexAttrib3sNV stdcall func(GLuint, GLshort, GLshort, GLshort) void
glVertexAttrib3s stdcall func(GLuint, GLshort, GLshort, GLshort) void
glVertexAttrib3svARB stdcall func(GLuint, *GLshort) void
glVertexAttrib3svNV stdcall func(GLuint, *GLshort) void
glVertexAttrib3sv stdcall func(GLuint, *GLshort) void
glVertexAttrib4bvARB stdcall func(GLuint, *GLbyte) void
glVertexAttrib4bv stdcall func(GLuint, *GLbyte) void
glVertexAttrib4dARB stdcall func(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) void
glVertexAttrib4dNV stdcall func(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) void
glVertexAttrib4d stdcall func(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) void
glVertexAttrib4dvARB stdcall func(GLuint, *GLdouble) void
glVertexAttrib4dvNV stdcall func(GLuint, *GLdouble) void
glVertexAttrib4dv stdcall func(GLuint, *GLdouble) void
glVertexAttrib4fARB stdcall func(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) void
glVertexAttrib4fNV stdcall func(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) void
glVertexAttrib4f stdcall func(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) void
glVertexAttrib4fvARB stdcall func(GLuint, *GLfloat) void
glVertexAttrib4fvNV stdcall func(GLuint, *GLfloat) void
glVertexAttrib4fv stdcall func(GLuint, *GLfloat) void
glVertexAttrib4hNV stdcall func(GLuint, GLhalf, GLhalf, GLhalf, GLhalf) void
glVertexAttrib4hvNV stdcall func(GLuint, *GLhalf) void
glVertexAttrib4ivARB stdcall func(GLuint, *GLint) void
glVertexAttrib4iv stdcall func(GLuint, *GLint) void
glVertexAttrib4NbvARB stdcall func(GLuint, *GLbyte) void
glVertexAttrib4Nbv stdcall func(GLuint, *GLbyte) void
glVertexAttrib4NivARB stdcall func(GLuint, *GLint) void
glVertexAttrib4Niv stdcall func(GLuint, *GLint) void
glVertexAttrib4NsvARB stdcall func(GLuint, *GLshort) void
glVertexAttrib4Nsv stdcall func(GLuint, *GLshort) void
glVertexAttrib4NubARB stdcall func(GLuint, GLubyte, GLubyte, GLubyte, GLubyte) void
glVertexAttrib4Nub stdcall func(GLuint, GLubyte, GLubyte, GLubyte, GLubyte) void
glVertexAttrib4NubvARB stdcall func(GLuint, *GLubyte) void
glVertexAttrib4Nubv stdcall func(GLuint, *GLubyte) void
glVertexAttrib4NuivARB stdcall func(GLuint, *GLuint) void
glVertexAttrib4Nuiv stdcall func(GLuint, *GLuint) void
glVertexAttrib4NusvARB stdcall func(GLuint, *GLushort) void
glVertexAttrib4Nusv stdcall func(GLuint, *GLushort) void
glVertexAttrib4sARB stdcall func(GLuint, GLshort, GLshort, GLshort, GLshort) void
glVertexAttrib4sNV stdcall func(GLuint, GLshort, GLshort, GLshort, GLshort) void
glVertexAttrib4s stdcall func(GLuint, GLshort, GLshort, GLshort, GLshort) void
glVertexAttrib4svARB stdcall func(GLuint, *GLshort) void
glVertexAttrib4svNV stdcall func(GLuint, *GLshort) void
glVertexAttrib4sv stdcall func(GLuint, *GLshort) void
glVertexAttrib4ubNV stdcall func(GLuint, GLubyte, GLubyte, GLubyte, GLubyte) void
glVertexAttrib4ubvARB stdcall func(GLuint, *GLubyte) void
glVertexAttrib4ubvNV stdcall func(GLuint, *GLubyte) void
glVertexAttrib4ubv stdcall func(GLuint, *GLubyte) void
glVertexAttrib4uivARB stdcall func(GLuint, *GLuint) void
glVertexAttrib4uiv stdcall func(GLuint, *GLuint) void
glVertexAttrib4usvARB stdcall func(GLuint, *GLushort) void
glVertexAttrib4usv stdcall func(GLuint, *GLushort) void
glVertexAttribArrayObjectATI stdcall func(GLuint, GLint, GLenum, GLboolean, GLsizei, GLuint, GLuint) void
glVertexAttribBinding stdcall func(GLuint, GLuint) void
glVertexAttribDivisorANGLE stdcall func(GLuint, GLuint) void
glVertexAttribDivisorARB stdcall func(GLuint, GLuint) void
glVertexAttribDivisor stdcall func(GLuint, GLuint) void
glVertexAttribFormatNV stdcall func(GLuint, GLint, GLenum, GLboolean, GLsizei) void
glVertexAttribFormat stdcall func(GLuint, GLint, GLenum, GLboolean, GLuint) void
glVertexAttribI1iEXT stdcall func(GLuint, GLint) void
glVertexAttribI1i stdcall func(GLuint, GLint) void
glVertexAttribI1ivEXT stdcall func(GLuint, *GLint) void
glVertexAttribI1iv stdcall func(GLuint, *GLint) void
glVertexAttribI1uiEXT stdcall func(GLuint, GLuint) void
glVertexAttribI1ui stdcall func(GLuint, GLuint) void
glVertexAttribI1uivEXT stdcall func(GLuint, *GLuint) void
glVertexAttribI1uiv stdcall func(GLuint, *GLuint) void
glVertexAttribI2iEXT stdcall func(GLuint, GLint, GLint) void
glVertexAttribI2i stdcall func(GLuint, GLint, GLint) void
glVertexAttribI2ivEXT stdcall func(GLuint, *GLint) void
glVertexAttribI2iv stdcall func(GLuint, *GLint) void
glVertexAttribI2uiEXT stdcall func(GLuint, GLuint, GLuint) void
glVertexAttribI2ui stdcall func(GLuint, GLuint, GLuint) void
glVertexAttribI2uivEXT stdcall func(GLuint, *GLuint) void
glVertexAttribI2uiv stdcall func(GLuint, *GLuint) void
glVertexAttribI3iEXT stdcall func(GLuint, GLint, GLint, GLint) void
glVertexAttribI3i stdcall func(GLuint, GLint, GLint, GLint) void
glVertexAttribI3ivEXT stdcall func(GLuint, *GLint) void
glVertexAttribI3iv stdcall func(GLuint, *GLint) void
glVertexAttribI3uiEXT stdcall func(GLuint, GLuint, GLuint, GLuint) void
glVertexAttribI3ui stdcall func(GLuint, GLuint, GLuint, GLuint) void
glVertexAttribI3uivEXT stdcall func(GLuint, *GLuint) void
glVertexAttribI3uiv stdcall func(GLuint, *GLuint) void
glVertexAttribI4bvEXT stdcall func(GLuint, *GLbyte) void
glVertexAttribI4bv stdcall func(GLuint, *GLbyte) void
glVertexAttribI4iEXT stdcall func(GLuint, GLint, GLint, GLint, GLint) void
glVertexAttribI4i stdcall func(GLuint, GLint, GLint, GLint, GLint) void
glVertexAttribI4ivEXT stdcall func(GLuint, *GLint) void
glVertexAttribI4iv stdcall func(GLuint, *GLint) void
glVertexAttribI4svEXT stdcall func(GLuint, *GLshort) void
glVertexAttribI4sv stdcall func(GLuint, *GLshort) void
glVertexAttribI4ubvEXT stdcall func(GLuint, *GLubyte) void
glVertexAttribI4ubv stdcall func(GLuint, *GLubyte) void
glVertexAttribI4uiEXT stdcall func(GLuint, GLuint, GLuint, GLuint, GLuint) void
glVertexAttribI4ui stdcall func(GLuint, GLuint, GLuint, GLuint, GLuint) void
glVertexAttribI4uivEXT stdcall func(GLuint, *GLuint) void
glVertexAttribI4uiv stdcall func(GLuint, *GLuint) void
glVertexAttribI4usvEXT stdcall func(GLuint, *GLushort) void
glVertexAttribI4usv stdcall func(GLuint, *GLushort) void
glVertexAttribIFormatNV stdcall func(GLuint, GLint, GLenum, GLsizei) void
glVertexAttribIFormat stdcall func(GLuint, GLint, GLenum, GLuint) void
glVertexAttribIPointerEXT stdcall func(GLuint, GLint, GLenum, GLsizei, ptr) void
glVertexAttribIPointer stdcall func(GLuint, GLint, GLenum, GLsizei, ptr) void
glVertexAttribL1dEXT stdcall func(GLuint, GLdouble) void
glVertexAttribL1d stdcall func(GLuint, GLdouble) void
glVertexAttribL1dvEXT stdcall func(GLuint, *GLdouble) void
glVertexAttribL1dv stdcall func(GLuint, *GLdouble) void
glVertexAttribL1i64NV stdcall func(GLuint, GLint64EXT) void
glVertexAttribL1i64vNV stdcall func(GLuint, *GLint64EXT) void
glVertexAttribL1ui64ARB stdcall func(GLuint, GLuint64EXT) void
glVertexAttribL1ui64NV stdcall func(GLuint, GLuint64EXT) void
glVertexAttribL1ui64vARB stdcall func(GLuint, *GLuint64EXT) void
glVertexAttribL1ui64vNV stdcall func(GLuint, *GLuint64EXT) void
glVertexAttribL2dEXT stdcall func(GLuint, GLdouble, GLdouble) void
glVertexAttribL2d stdcall func(GLuint, GLdouble, GLdouble) void
glVertexAttribL2dvEXT stdcall func(GLuint, *GLdouble) void
glVertexAttribL2dv stdcall func(GLuint, *GLdouble) void
glVertexAttribL2i64NV stdcall func(GLuint, GLint64EXT, GLint64EXT) void
glVertexAttribL2i64vNV stdcall func(GLuint, *GLint64EXT) void
glVertexAttribL2ui64NV stdcall func(GLuint, GLuint64EXT, GLuint64EXT) void
glVertexAttribL2ui64vNV stdcall func(GLuint, *GLuint64EXT) void
glVertexAttribL3dEXT stdcall func(GLuint, GLdouble, GLdouble, GLdouble) void
glVertexAttribL3d stdcall func(GLuint, GLdouble, GLdouble, GLdouble) void
glVertexAttribL3dvEXT stdcall func(GLuint, *GLdouble) void
glVertexAttribL3dv stdcall func(GLuint, *GLdouble) void
glVertexAttribL3i64NV stdcall func(GLuint, GLint64EXT, GLint64EXT, GLint64EXT) void
glVertexAttribL3i64vNV stdcall func(GLuint, *GLint64EXT) void
glVertexAttribL3ui64NV stdcall func(GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT) void
glVertexAttribL3ui64vNV stdcall func(GLuint, *GLuint64EXT) void
glVertexAttribL4dEXT stdcall func(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) void
glVertexAttribL4d stdcall func(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) void
glVertexAttribL4dvEXT stdcall func(GLuint, *GLdouble) void
glVertexAttribL4dv stdcall func(GLuint, *GLdouble) void
glVertexAttribL4i64NV stdcall func(GLuint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) void
glVertexAttribL4i64vNV stdcall func(GLuint, *GLint64EXT) void
glVertexAttribL4ui64NV stdcall func(GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) void
glVertexAttribL4ui64vNV stdcall func(GLuint, *GLuint64EXT) void
glVertexAttribLFormatNV stdcall func(GLuint, GLint, GLenum, GLsizei) void
glVertexAttribLFormat stdcall func(GLuint, GLint, GLenum, GLuint) void
glVertexAttribLPointerEXT stdcall func(GLuint, GLint, GLenum, GLsizei, ptr) void
glVertexAttribLPointer stdcall func(GLuint, GLint, GLenum, GLsizei, ptr) void
glVertexAttribP1ui stdcall func(GLuint, GLenum, GLboolean, GLuint) void
glVertexAttribP1uiv stdcall func(GLuint, GLenum, GLboolean, *GLuint) void
glVertexAttribP2ui stdcall func(GLuint, GLenum, GLboolean, GLuint) void
glVertexAttribP2uiv stdcall func(GLuint, GLenum, GLboolean, *GLuint) void
glVertexAttribP3ui stdcall func(GLuint, GLenum, GLboolean, GLuint) void
glVertexAttribP3uiv stdcall func(GLuint, GLenum, GLboolean, *GLuint) void
glVertexAttribP4ui stdcall func(GLuint, GLenum, GLboolean, GLuint) void
glVertexAttribP4uiv stdcall func(GLuint, GLenum, GLboolean, *GLuint) void
glVertexAttribParameteriAMD stdcall func(GLuint, GLenum, GLint) void
glVertexAttribPointerARB stdcall func(GLuint, GLint, GLenum, GLboolean, GLsizei, ptr) void
glVertexAttribPointerNV stdcall func(GLuint, GLint, GLenum, GLsizei, ptr) void
glVertexAttribPointer stdcall func(GLuint, GLint, GLenum, GLboolean, GLsizei, ptr) void
glVertexAttribs1dvNV stdcall func(GLuint, GLsizei, *GLdouble) void
glVertexAttribs1fvNV stdcall func(GLuint, GLsizei, *GLfloat) void
glVertexAttribs1hvNV stdcall func(GLuint, GLsizei, *GLhalf) void
glVertexAttribs1svNV stdcall func(GLuint, GLsizei, *GLshort) void
glVertexAttribs2dvNV stdcall func(GLuint, GLsizei, *GLdouble) void
glVertexAttribs2fvNV stdcall func(GLuint, GLsizei, *GLfloat) void
glVertexAttribs2hvNV stdcall func(GLuint, GLsizei, *GLhalf) void
glVertexAttribs2svNV stdcall func(GLuint, GLsizei, *GLshort) void
glVertexAttribs3dvNV stdcall func(GLuint, GLsizei, *GLdouble) void
glVertexAttribs3fvNV stdcall func(GLuint, GLsizei, *GLfloat) void
glVertexAttribs3hvNV stdcall func(GLuint, GLsizei, *GLhalf) void
glVertexAttribs3svNV stdcall func(GLuint, GLsizei, *GLshort) void
glVertexAttribs4dvNV stdcall func(GLuint, GLsizei, *GLdouble) void
glVertexAttribs4fvNV stdcall func(GLuint, GLsizei, *GLfloat) void
glVertexAttribs4hvNV stdcall func(GLuint, GLsizei, *GLhalf) void
glVertexAttribs4svNV stdcall func(GLuint, GLsizei, *GLshort) void
glVertexAttribs4ubvNV stdcall func(GLuint, GLsizei, *GLubyte) void
glVertexBindingDivisor stdcall func(GLuint, GLuint) void
glVertexBlendARB stdcall func(GLint) void
glVertexBlendEnvfATI stdcall func(GLenum, GLfloat) void
glVertexBlendEnviATI stdcall func(GLenum, GLint) void
glVertexFormatNV stdcall func(GLint, GLenum, GLsizei) void
glVertexP2ui stdcall func(GLenum, GLuint) void
glVertexP2uiv stdcall func(GLenum, *GLuint) void
glVertexP3ui stdcall func(GLenum, GLuint) void
glVertexP3uiv stdcall func(GLenum, *GLuint) void
glVertexP4ui stdcall func(GLenum, GLuint) void
glVertexP4uiv stdcall func(GLenum, *GLuint) void
glVertexPointerEXT stdcall func(GLint, GLenum, GLsizei, GLsizei, ptr) void
glVertexPointerListIBM stdcall func(GLint, GLenum, GLint, *ptr, GLint) void
glVertexPointervINTEL stdcall func(GLint, GLenum, *ptr) void
glVertexStream1dATI stdcall func(GLenum, GLdouble) void
glVertexStream1dvATI stdcall func(GLenum, *GLdouble) void
glVertexStream1fATI stdcall func(GLenum, GLfloat) void
glVertexStream1fvATI stdcall func(GLenum, *GLfloat) void
glVertexStream1iATI stdcall func(GLenum, GLint) void
glVertexStream1ivATI stdcall func(GLenum, *GLint) void
glVertexStream1sATI stdcall func(GLenum, GLshort) void
glVertexStream1svATI stdcall func(GLenum, *GLshort) void
glVertexStream2dATI stdcall func(GLenum, GLdouble, GLdouble) void
glVertexStream2dvATI stdcall func(GLenum, *GLdouble) void
glVertexStream2fATI stdcall func(GLenum, GLfloat, GLfloat) void
glVertexStream2fvATI stdcall func(GLenum, *GLfloat) void
glVertexStream2iATI stdcall func(GLenum, GLint, GLint) void
glVertexStream2ivATI stdcall func(GLenum, *GLint) void
glVertexStream2sATI stdcall func(GLenum, GLshort, GLshort) void
glVertexStream2svATI stdcall func(GLenum, *GLshort) void
glVertexStream3dATI stdcall func(GLenum, GLdouble, GLdouble, GLdouble) void
glVertexStream3dvATI stdcall func(GLenum, *GLdouble) void
glVertexStream3fATI stdcall func(GLenum, GLfloat, GLfloat, GLfloat) void
glVertexStream3fvATI stdcall func(GLenum, *GLfloat) void
glVertexStream3iATI stdcall func(GLenum, GLint, GLint, GLint) void
glVertexStream3ivATI stdcall func(GLenum, *GLint) void
glVertexStream3sATI stdcall func(GLenum, GLshort, GLshort, GLshort) void
glVertexStream3svATI stdcall func(GLenum, *GLshort) void
glVertexStream4dATI stdcall func(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) void
glVertexStream4dvATI stdcall func(GLenum, *GLdouble) void
glVertexStream4fATI stdcall func(GLenum, GLfloat, GLfloat, GLfloat, GLfloat) void
glVertexStream4fvATI stdcall func(GLenum, *GLfloat) void
glVertexStream4iATI stdcall func(GLenum, GLint, GLint, GLint, GLint) void
glVertexStream4ivATI stdcall func(GLenum, *GLint) void
glVertexStream4sATI stdcall func(GLenum, GLshort, GLshort, GLshort, GLshort) void
glVertexStream4svATI stdcall func(GLenum, *GLshort) void
glVertexWeightfEXT stdcall func(GLfloat) void
glVertexWeightfvEXT stdcall func(*GLfloat) void
glVertexWeighthNV stdcall func(GLhalf) void
glVertexWeighthvNV stdcall func(*GLhalf) void
glVertexWeightPointerEXT stdcall func(GLint, GLenum, GLsizei, ptr) void
glVideoCaptureStreamParameterdvNV stdcall func(GLuint, GLuint, GLenum, *GLdouble) void
glVideoCaptureStreamParameterfvNV stdcall func(GLuint, GLuint, GLenum, *GLfloat) void
glVideoCaptureStreamParameterivNV stdcall func(GLuint, GLuint, GLenum, *GLint) void
glViewportArrayv stdcall func(GLuint, GLsizei, *GLfloat) void
glViewportIndexedf stdcall func(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) void
glViewportIndexedfv stdcall func(GLuint, *GLfloat) void
glWaitSync stdcall func(GLsync, GLbitfield, GLuint64) void
glWeightbvARB stdcall func(GLint, *GLbyte) void
glWeightdvARB stdcall func(GLint, *GLdouble) void
glWeightfvARB stdcall func(GLint, *GLfloat) void
glWeightivARB stdcall func(GLint, *GLint) void
glWeightPathsNV stdcall func(GLuint, GLsizei, **GLuint) void
glWeightPointerARB stdcall func(GLint, GLenum, GLsizei, ptr) void
glWeightsvARB stdcall func(GLint, *GLshort) void
glWeightubvARB stdcall func(GLint, *GLubyte) void
glWeightuivARB stdcall func(GLint, *GLuint) void
glWeightusvARB stdcall func(GLint, *GLushort) void
glWindowPos2dARB stdcall func(GLdouble, GLdouble) void
glWindowPos2dMESA stdcall func(GLdouble, GLdouble) void
glWindowPos2d stdcall func(GLdouble, GLdouble) void
glWindowPos2dvARB stdcall func(*GLdouble) void
glWindowPos2dvMESA stdcall func(*GLdouble) void
glWindowPos2dv stdcall func(*GLdouble) void
glWindowPos2fARB stdcall func(GLfloat, GLfloat) void
glWindowPos2fMESA stdcall func(GLfloat, GLfloat) void
glWindowPos2f stdcall func(GLfloat, GLfloat) void
glWindowPos2fvARB stdcall func(*GLfloat) void
glWindowPos2fvMESA stdcall func(*GLfloat) void
glWindowPos2fv stdcall func(*GLfloat) void
glWindowPos2iARB stdcall func(GLint, GLint) void
glWindowPos2iMESA stdcall func(GLint, GLint) void
glWindowPos2i stdcall func(GLint, GLint) void
glWindowPos2ivARB stdcall func(*GLint) void
glWindowPos2ivMESA stdcall func(*GLint) void
glWindowPos2iv stdcall func(*GLint) void
glWindowPos2sARB stdcall func(GLshort, GLshort) void
glWindowPos2sMESA stdcall func(GLshort, GLshort) void
glWindowPos2s stdcall func(GLshort, GLshort) void
glWindowPos2svARB stdcall func(*GLshort) void
glWindowPos2svMESA stdcall func(*GLshort) void
glWindowPos2sv stdcall func(*GLshort) void
glWindowPos3dARB stdcall func(GLdouble, GLdouble, GLdouble) void
glWindowPos3dMESA stdcall func(GLdouble, GLdouble, GLdouble) void
glWindowPos3d stdcall func(GLdouble, GLdouble, GLdouble) void
glWindowPos3dvARB stdcall func(*GLdouble) void
glWindowPos3dvMESA stdcall func(*GLdouble) void
glWindowPos3dv stdcall func(*GLdouble) void
glWindowPos3fARB stdcall func(GLfloat, GLfloat, GLfloat) void
glWindowPos3fMESA stdcall func(GLfloat, GLfloat, GLfloat) void
glWindowPos3f stdcall func(GLfloat, GLfloat, GLfloat) void
glWindowPos3fvARB stdcall func(*GLfloat) void
glWindowPos3fvMESA stdcall func(*GLfloat) void
glWindowPos3fv stdcall func(*GLfloat) void
glWindowPos3iARB stdcall func(GLint, GLint, GLint) void
glWindowPos3iMESA stdcall func(GLint, GLint, GLint) void
glWindowPos3i stdcall func(GLint, GLint, GLint) void
glWindowPos3ivARB stdcall func(*GLint) void
glWindowPos3ivMESA stdcall func(*GLint) void
glWindowPos3iv stdcall func(*GLint) void
glWindowPos3sARB stdcall func(GLshort, GLshort, GLshort) void
glWindowPos3sMESA stdcall func(GLshort, GLshort, GLshort) void
glWindowPos3s stdcall func(GLshort, GLshort, GLshort) void
glWindowPos3svARB stdcall func(*GLshort) void
glWindowPos3svMESA stdcall func(*GLshort) void
glWindowPos3sv stdcall func(*GLshort) void
glWindowPos4dMESA stdcall func(GLdouble, GLdouble, GLdouble, GLdouble) void
glWindowPos4dvMESA stdcall func(*GLdouble) void
glWindowPos4fMESA stdcall func(GLfloat, GLfloat, GLfloat, GLfloat) void
glWindowPos4fvMESA stdcall func(*GLfloat) void
glWindowPos4iMESA stdcall func(GLint, GLint, GLint, GLint) void
glWindowPos4ivMESA stdcall func(*GLint) void
glWindowPos4sMESA stdcall func(GLshort, GLshort, GLshort, GLshort) void
glWindowPos4svMESA stdcall func(*GLshort) void
glWriteMaskEXT stdcall func(GLuint, GLuint, GLenum, GLenum, GLenum, GLenum) void
_opengl_shared_object ptr = null
__stdinp *FILE
__stdoutp *FILE
__stderrp *FILE
_captain_window *GLFWwindow
_captain_setup func() void
_captain_exit func() void
_captain_draw func() void
_captain_step func() void
_captain_step_fps uint
_captain_click func(float, float, int) void
_captain_click_use_view_mouse bool
_captain_release func(float, float, int) void
_captain_release_use_view_mouse bool
_captain_key func(int, int, int, int) void
_captain_shader CaptShader
_captain_display_ratio float
_captain_view_width float
_captain_view_height float
_captain_custom_view bool
_captain_resizable bool
_captain_typicals *float
_captain_typicals_length usize
_captain_typicals_capacity usize
_captain_models *CaptFrameModel
_captain_models_length usize
_captain_models_capacity usize
_captain_shader_transformation_location GLint
_captain_sprite_models *CaptModel
_captain_sprite_models_length usize
_captain_sprite_models_capacity usize
_captain_hide_mouse_on_creation bool
sky CaptTexture
platform_north CaptTexture
platform_north_east CaptTexture
platform_north_west CaptTexture
platform_south CaptTexture
platform_south_east CaptTexture
platform_south_west CaptTexture
platform_east CaptTexture
platform_west CaptTexture
platform_center CaptTexture
water CaptTexture
bushl CaptTexture
bushr CaptTexture
sky_th2 CaptTexture
platform_north_th2 CaptTexture
platform_north_east_th2 CaptTexture
platform_north_west_th2 CaptTexture
platform_south_th2 CaptTexture
platform_south_east_th2 CaptTexture
platform_south_west_th2 CaptTexture
platform_east_th2 CaptTexture
platform_west_th2 CaptTexture
platform_center_th2 CaptTexture
water_th2 CaptTexture
bushl_th2 CaptTexture
bushr_th2 CaptTexture
idle CaptTexture
death CaptTexture
gun_idle CaptTexture
gun_death CaptTexture
cannoneer_idle CaptTexture
cannoneer_death CaptTexture
bridge0 CaptTexture
bridge1 CaptTexture
parachute CaptTexture
cannoneer_parachute CaptTexture
flower_a CaptTexture
flower_b CaptTexture
rock_a CaptTexture
rock_b CaptTexture
mushroom_a CaptTexture
mushroom_b CaptTexture
stump CaptTexture
grass_a CaptTexture
grass_b CaptTexture
grass_c CaptTexture
fence_a CaptTexture
fence_b CaptTexture
slot CaptTexture
star CaptTexture
wing CaptTexture
gun CaptTexture
bullet CaptTexture
cannon_power CaptTexture
cannon_idle CaptTexture
ball CaptTexture
win CaptTexture
how_to_play CaptTexture
testinv CaptTexture
invselected CaptTexture
number0 CaptTexture
number1 CaptTexture
number2 CaptTexture
number3 CaptTexture
number4 CaptTexture
number5 CaptTexture
number6 CaptTexture
number7 CaptTexture
number8 CaptTexture
number9 CaptTexture
string CaptTexture
slime CaptTexture
wood CaptTexture
feather CaptTexture
metal CaptTexture
crystal CaptTexture
crafting_mode CaptTexture
inventory_mode CaptTexture
wave GameAnimation
wave_th2 GameAnimation
walk GameAnimation
swim GameAnimation
gun_walk GameAnimation
gun_swim GameAnimation
cannoneer_walk GameAnimation
cannoneer_swim GameAnimation
spider_animation GameAnimation
beetle_animation GameAnimation
slime_animation GameAnimation
swordfish_animation GameAnimation
inwards_portal GameAnimation
outwards_portal GameAnimation
disabled_portal GameAnimation
smoke GameAnimation
flame GameAnimation
enabler GameAnimation
coin GameAnimation
controls ControlScheme
wasd ControlScheme
arrows ControlScheme
player Player
shadow Player
default_shadow Player
camera_x float
camera_y float
sky_shift float
when_paused double
accumulated_pause_time double
teleporting bool
teleport_opacity float
is_paused bool
is_dead bool
respawn_timer int
death_x float
death_y float
death_vx float
death_vy float
death_image GameImageEx
scene int
scene_width float
platforms <Platform> List
lakes <Lake> List
bridges <Bridge> List
spiders <Spider> List
swordfishes <Swordfish> List
item_spawns <ItemSpawn> List
entrance <Portal> Optional
exit <Portal> Optional
exit_disabled bool
portal_enabler <PortalEnabler> Optional
item Item
item_screen_x float
item_screen_y float
particles <Particle> List
bullets <Bullet> List
cannon <Cannon> Optional
cannon_ball <CannonBall> Optional
inventory_open bool
inventory_bg_shade float
inventory_selection_x int
inventory_selection_y int
inventory 18 Item
resources 6 int
numbers 10 CaptTexture
collected_resources <CollectedResource> List
crafting bool
craftable 18 Item
craftable_prices 18 Price
theme *Theme
theme1 Theme
theme2 Theme
func intersecting(this *AABB, other AABB) bool {
    return ((((this.x < (other.x + other.w)) && ((this.x + this.w) > other.x)) && (this.y < (other.y + other.h))) && ((this.y + this.h) > other.y))
}
func AABB(x int, y int, w int, h int) AABB {
    <unknown statement>
    aabb.x = x
    aabb.y = y
    aabb.w = w
    aabb.h = h
    return aabb
}
func getAABB(this *Bullet) AABB {
    return AABB(this.x, this.y, 8gi, 8gi)
}
func bullet(x int, y int, vx int) Bullet {
    <unknown statement>
    bullet.x = x
    bullet.y = y
    bullet.vx = vx
    return bullet
}
func getAABB(this *Cannon) AABB {
    return AABB((this.x + 32gi), this.y, (152gi - 64gi), 72gi)
}
func getAABB(this *Cannon, adj_x int, adj_y int) AABB {
    return AABB(((this.x + adj_x) + 32gi), (this.y + adj_y), (152gi - 64gi), 72gi)
}
func cannon(x int, y int, direction int) Cannon {
    <unknown statement>
    cannon.x = x
    cannon.y = y
    cannon.vy = 0gi
    cannon.direction = direction
    return cannon
}
func getAABB(this *CannonBall) AABB {
    return AABB(this.x, this.y, 32gi, 32gi)
}
func cannonBall(x int, y int, vx int) CannonBall {
    <unknown statement>
    ball.x = x
    ball.y = y
    ball.vx = vx
    return ball
}
func controlScheme(up int, down int, left int, right int, a int, b int, pause int, alt_up int) ControlScheme {
    <unknown statement>
    scheme.up = up
    scheme.down = down
    scheme.left = left
    scheme.right = right
    scheme.a = a
    scheme.b = b
    scheme.pause = pause
    scheme.alt_up = alt_up
    return scheme
}
func __equals__(a ControlScheme, b ControlScheme) bool {
    if (a.up != b.up) {
        return false
    }
    if (a.down != b.down) {
        return false
    }
    if (a.left != b.left) {
        return false
    }
    if (a.right != b.right) {
        return false
    }
    if (a.a != b.a) {
        return false
    }
    if (a.b != b.b) {
        return false
    }
    if (a.pause != b.pause) {
        return false
    }
    if (a.alt_up != b.alt_up) {
        return false
    }
    return true
}
foreign dladdr(ptr, *Dl_info) int
foreign dlclose(ptr) int
foreign dlerror() *ubyte
foreign dlopen(*ubyte, int) ptr
foreign dlsym(ptr, *ubyte) ptr
foreign glAccum(GLenum, GLfloat) void
foreign glAlphaFunc(GLenum, GLclampf) void
foreign glAreTexturesResident(GLsizei, *GLuint, *GLboolean) GLboolean
foreign glArrayElement(GLint) void
foreign glBegin(GLenum) void
foreign glBindTexture(GLenum, GLuint) void
foreign glBitmap(GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, *GLubyte) void
foreign glBlendFunc(GLenum, GLenum) void
foreign glCallList(GLuint) void
foreign glCallLists(GLsizei, GLenum, ptr) void
foreign glClear(GLbitfield) void
foreign glClearAccum(GLfloat, GLfloat, GLfloat, GLfloat) void
foreign glClearColor(GLclampf, GLclampf, GLclampf, GLclampf) void
foreign glClearDepth(GLclampd) void
foreign glClearIndex(GLfloat) void
foreign glClearStencil(GLint) void
foreign glClipPlane(GLenum, *GLdouble) void
foreign glColor3b(GLbyte, GLbyte, GLbyte) void
foreign glColor3bv(*GLbyte) void
foreign glColor3d(GLdouble, GLdouble, GLdouble) void
foreign glColor3dv(*GLdouble) void
foreign glColor3f(GLfloat, GLfloat, GLfloat) void
foreign glColor3fv(*GLfloat) void
foreign glColor3i(GLint, GLint, GLint) void
foreign glColor3iv(*GLint) void
foreign glColor3s(GLshort, GLshort, GLshort) void
foreign glColor3sv(*GLshort) void
foreign glColor3ub(GLubyte, GLubyte, GLubyte) void
foreign glColor3ubv(*GLubyte) void
foreign glColor3ui(GLuint, GLuint, GLuint) void
foreign glColor3uiv(*GLuint) void
foreign glColor3us(GLushort, GLushort, GLushort) void
foreign glColor3usv(*GLushort) void
foreign glColor4b(GLbyte, GLbyte, GLbyte, GLbyte) void
foreign glColor4bv(*GLbyte) void
foreign glColor4d(GLdouble, GLdouble, GLdouble, GLdouble) void
foreign glColor4dv(*GLdouble) void
foreign glColor4f(GLfloat, GLfloat, GLfloat, GLfloat) void
foreign glColor4fv(*GLfloat) void
foreign glColor4i(GLint, GLint, GLint, GLint) void
foreign glColor4iv(*GLint) void
foreign glColor4s(GLshort, GLshort, GLshort, GLshort) void
foreign glColor4sv(*GLshort) void
foreign glColor4ub(GLubyte, GLubyte, GLubyte, GLubyte) void
foreign glColor4ubv(*GLubyte) void
foreign glColor4ui(GLuint, GLuint, GLuint, GLuint) void
foreign glColor4uiv(*GLuint) void
foreign glColor4us(GLushort, GLushort, GLushort, GLushort) void
foreign glColor4usv(*GLushort) void
foreign glColorMask(GLboolean, GLboolean, GLboolean, GLboolean) void
foreign glColorMaterial(GLenum, GLenum) void
foreign glColorPointer(GLint, GLenum, GLsizei, ptr) void
foreign glCopyPixels(GLint, GLint, GLsizei, GLsizei, GLenum) void
foreign glCopyTexImage1D(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) void
foreign glCopyTexImage2D(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) void
foreign glCopyTexSubImage1D(GLenum, GLint, GLint, GLint, GLint, GLsizei) void
foreign glCopyTexSubImage2D(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) void
foreign glCullFace(GLenum) void
foreign glDeleteLists(GLuint, GLsizei) void
foreign glDeleteTextures(GLsizei, *GLuint) void
foreign glDepthFunc(GLenum) void
foreign glDepthMask(GLboolean) void
foreign glDepthRange(GLclampd, GLclampd) void
foreign glDisable(GLenum) void
foreign glDisableClientState(GLenum) void
foreign glDrawArrays(GLenum, GLint, GLsizei) void
foreign glDrawBuffer(GLenum) void
foreign glDrawElements(GLenum, GLsizei, GLenum, ptr) void
foreign glDrawPixels(GLsizei, GLsizei, GLenum, GLenum, ptr) void
foreign glEdgeFlag(GLboolean) void
foreign glEdgeFlagPointer(GLsizei, ptr) void
foreign glEdgeFlagv(*GLboolean) void
foreign glEnable(GLenum) void
foreign glEnableClientState(GLenum) void
foreign glEnd() void
foreign glEndList() void
foreign glEvalCoord1d(GLdouble) void
foreign glEvalCoord1dv(*GLdouble) void
foreign glEvalCoord1f(GLfloat) void
foreign glEvalCoord1fv(*GLfloat) void
foreign glEvalCoord2d(GLdouble, GLdouble) void
foreign glEvalCoord2dv(*GLdouble) void
foreign glEvalCoord2f(GLfloat, GLfloat) void
foreign glEvalCoord2fv(*GLfloat) void
foreign glEvalMesh1(GLenum, GLint, GLint) void
foreign glEvalMesh2(GLenum, GLint, GLint, GLint, GLint) void
foreign glEvalPoint1(GLint) void
foreign glEvalPoint2(GLint, GLint) void
foreign glFeedbackBuffer(GLsizei, GLenum, *GLfloat) void
foreign glFinish() void
foreign glFlush() void
foreign glFogf(GLenum, GLfloat) void
foreign glFogfv(GLenum, *GLfloat) void
foreign glFogi(GLenum, GLint) void
foreign glFogiv(GLenum, *GLint) void
foreign glFrontFace(GLenum) void
foreign glFrustum(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) void
foreign glGenLists(GLsizei) GLuint
foreign glGenTextures(GLsizei, *GLuint) void
foreign glGetBooleanv(GLenum, *GLboolean) void
foreign glGetClipPlane(GLenum, *GLdouble) void
foreign glGetDoublev(GLenum, *GLdouble) void
foreign glGetError() GLenum
foreign glGetFloatv(GLenum, *GLfloat) void
foreign glGetIntegerv(GLenum, *GLint) void
foreign glGetLightfv(GLenum, GLenum, *GLfloat) void
foreign glGetLightiv(GLenum, GLenum, *GLint) void
foreign glGetMapdv(GLenum, GLenum, *GLdouble) void
foreign glGetMapfv(GLenum, GLenum, *GLfloat) void
foreign glGetMapiv(GLenum, GLenum, *GLint) void
foreign glGetMaterialfv(GLenum, GLenum, *GLfloat) void
foreign glGetMaterialiv(GLenum, GLenum, *GLint) void
foreign glGetPixelMapfv(GLenum, *GLfloat) void
foreign glGetPixelMapuiv(GLenum, *GLuint) void
foreign glGetPixelMapusv(GLenum, *GLushort) void
foreign glGetPointerv(GLenum, *ptr) void
foreign glGetPolygonStipple(*GLubyte) void
foreign glGetString(GLenum) *GLubyte
foreign glGetTexEnvfv(GLenum, GLenum, *GLfloat) void
foreign glGetTexEnviv(GLenum, GLenum, *GLint) void
foreign glGetTexGendv(GLenum, GLenum, *GLdouble) void
foreign glGetTexGenfv(GLenum, GLenum, *GLfloat) void
foreign glGetTexGeniv(GLenum, GLenum, *GLint) void
foreign glGetTexImage(GLenum, GLint, GLenum, GLenum, ptr) void
foreign glGetTexLevelParameterfv(GLenum, GLint, GLenum, *GLfloat) void
foreign glGetTexLevelParameteriv(GLenum, GLint, GLenum, *GLint) void
foreign glGetTexParameterfv(GLenum, GLenum, *GLfloat) void
foreign glGetTexParameteriv(GLenum, GLenum, *GLint) void
foreign glHint(GLenum, GLenum) void
foreign glIndexMask(GLuint) void
foreign glIndexPointer(GLenum, GLsizei, ptr) void
foreign glIndexd(GLdouble) void
foreign glIndexdv(*GLdouble) void
foreign glIndexf(GLfloat) void
foreign glIndexfv(*GLfloat) void
foreign glIndexi(GLint) void
foreign glIndexiv(*GLint) void
foreign glIndexs(GLshort) void
foreign glIndexsv(*GLshort) void
foreign glIndexub(GLubyte) void
foreign glIndexubv(*GLubyte) void
foreign glInitNames() void
foreign glInterleavedArrays(GLenum, GLsizei, ptr) void
foreign glIsEnabled(GLenum) GLboolean
foreign glIsList(GLuint) GLboolean
foreign glIsTexture(GLuint) GLboolean
foreign glLightModelf(GLenum, GLfloat) void
foreign glLightModelfv(GLenum, *GLfloat) void
foreign glLightModeli(GLenum, GLint) void
foreign glLightModeliv(GLenum, *GLint) void
foreign glLightf(GLenum, GLenum, GLfloat) void
foreign glLightfv(GLenum, GLenum, *GLfloat) void
foreign glLighti(GLenum, GLenum, GLint) void
foreign glLightiv(GLenum, GLenum, *GLint) void
foreign glLineStipple(GLint, GLushort) void
foreign glLineWidth(GLfloat) void
foreign glListBase(GLuint) void
foreign glLoadIdentity() void
foreign glLoadMatrixd(*GLdouble) void
foreign glLoadMatrixf(*GLfloat) void
foreign glLoadName(GLuint) void
foreign glLogicOp(GLenum) void
foreign glMap1d(GLenum, GLdouble, GLdouble, GLint, GLint, *GLdouble) void
foreign glMap1f(GLenum, GLfloat, GLfloat, GLint, GLint, *GLfloat) void
foreign glMap2d(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, *GLdouble) void
foreign glMap2f(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, *GLfloat) void
foreign glMapGrid1d(GLint, GLdouble, GLdouble) void
foreign glMapGrid1f(GLint, GLfloat, GLfloat) void
foreign glMapGrid2d(GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble) void
foreign glMapGrid2f(GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat) void
foreign glMaterialf(GLenum, GLenum, GLfloat) void
foreign glMaterialfv(GLenum, GLenum, *GLfloat) void
foreign glMateriali(GLenum, GLenum, GLint) void
foreign glMaterialiv(GLenum, GLenum, *GLint) void
foreign glMatrixMode(GLenum) void
foreign glMultMatrixd(*GLdouble) void
foreign glMultMatrixf(*GLfloat) void
foreign glNewList(GLuint, GLenum) void
foreign glNormal3b(GLbyte, GLbyte, GLbyte) void
foreign glNormal3bv(*GLbyte) void
foreign glNormal3d(GLdouble, GLdouble, GLdouble) void
foreign glNormal3dv(*GLdouble) void
foreign glNormal3f(GLfloat, GLfloat, GLfloat) void
foreign glNormal3fv(*GLfloat) void
foreign glNormal3i(GLint, GLint, GLint) void
foreign glNormal3iv(*GLint) void
foreign glNormal3s(GLshort, GLshort, GLshort) void
foreign glNormal3sv(*GLshort) void
foreign glNormalPointer(GLenum, GLsizei, ptr) void
foreign glOrtho(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) void
foreign glPassThrough(GLfloat) void
foreign glPixelMapfv(GLenum, GLsizei, *GLfloat) void
foreign glPixelMapuiv(GLenum, GLsizei, *GLuint) void
foreign glPixelMapusv(GLenum, GLsizei, *GLushort) void
foreign glPixelStoref(GLenum, GLfloat) void
foreign glPixelStorei(GLenum, GLint) void
foreign glPixelTransferf(GLenum, GLfloat) void
foreign glPixelTransferi(GLenum, GLint) void
foreign glPixelZoom(GLfloat, GLfloat) void
foreign glPointSize(GLfloat) void
foreign glPolygonMode(GLenum, GLenum) void
foreign glPolygonOffset(GLfloat, GLfloat) void
foreign glPolygonStipple(*GLubyte) void
foreign glPopAttrib() void
foreign glPopClientAttrib() void
foreign glPopMatrix() void
foreign glPopName() void
foreign glPrioritizeTextures(GLsizei, *GLuint, *GLclampf) void
foreign glPushAttrib(GLbitfield) void
foreign glPushClientAttrib(GLbitfield) void
foreign glPushMatrix() void
foreign glPushName(GLuint) void
foreign glRasterPos2d(GLdouble, GLdouble) void
foreign glRasterPos2dv(*GLdouble) void
foreign glRasterPos2f(GLfloat, GLfloat) void
foreign glRasterPos2fv(*GLfloat) void
foreign glRasterPos2i(GLint, GLint) void
foreign glRasterPos2iv(*GLint) void
foreign glRasterPos2s(GLshort, GLshort) void
foreign glRasterPos2sv(*GLshort) void
foreign glRasterPos3d(GLdouble, GLdouble, GLdouble) void
foreign glRasterPos3dv(*GLdouble) void
foreign glRasterPos3f(GLfloat, GLfloat, GLfloat) void
foreign glRasterPos3fv(*GLfloat) void
foreign glRasterPos3i(GLint, GLint, GLint) void
foreign glRasterPos3iv(*GLint) void
foreign glRasterPos3s(GLshort, GLshort, GLshort) void
foreign glRasterPos3sv(*GLshort) void
foreign glRasterPos4d(GLdouble, GLdouble, GLdouble, GLdouble) void
foreign glRasterPos4dv(*GLdouble) void
foreign glRasterPos4f(GLfloat, GLfloat, GLfloat, GLfloat) void
foreign glRasterPos4fv(*GLfloat) void
foreign glRasterPos4i(GLint, GLint, GLint, GLint) void
foreign glRasterPos4iv(*GLint) void
foreign glRasterPos4s(GLshort, GLshort, GLshort, GLshort) void
foreign glRasterPos4sv(*GLshort) void
foreign glReadBuffer(GLenum) void
foreign glReadPixels(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ptr) void
foreign glRectd(GLdouble, GLdouble, GLdouble, GLdouble) void
foreign glRectdv(*GLdouble, *GLdouble) void
foreign glRectf(GLfloat, GLfloat, GLfloat, GLfloat) void
foreign glRectfv(*GLfloat, *GLfloat) void
foreign glRecti(GLint, GLint, GLint, GLint) void
foreign glRectiv(*GLint, *GLint) void
foreign glRects(GLshort, GLshort, GLshort, GLshort) void
foreign glRectsv(*GLshort, *GLshort) void
foreign glRenderMode(GLenum) GLint
foreign glRotated(GLdouble, GLdouble, GLdouble, GLdouble) void
foreign glRotatef(GLfloat, GLfloat, GLfloat, GLfloat) void
foreign glScaled(GLdouble, GLdouble, GLdouble) void
foreign glScalef(GLfloat, GLfloat, GLfloat) void
foreign glScissor(GLint, GLint, GLsizei, GLsizei) void
foreign glSelectBuffer(GLsizei, *GLuint) void
foreign glShadeModel(GLenum) void
foreign glStencilFunc(GLenum, GLint, GLuint) void
foreign glStencilMask(GLuint) void
foreign glStencilOp(GLenum, GLenum, GLenum) void
foreign glTexCoord1d(GLdouble) void
foreign glTexCoord1dv(*GLdouble) void
foreign glTexCoord1f(GLfloat) void
foreign glTexCoord1fv(*GLfloat) void
foreign glTexCoord1i(GLint) void
foreign glTexCoord1iv(*GLint) void
foreign glTexCoord1s(GLshort) void
foreign glTexCoord1sv(*GLshort) void
foreign glTexCoord2d(GLdouble, GLdouble) void
foreign glTexCoord2dv(*GLdouble) void
foreign glTexCoord2f(GLfloat, GLfloat) void
foreign glTexCoord2fv(*GLfloat) void
foreign glTexCoord2i(GLint, GLint) void
foreign glTexCoord2iv(*GLint) void
foreign glTexCoord2s(GLshort, GLshort) void
foreign glTexCoord2sv(*GLshort) void
foreign glTexCoord3d(GLdouble, GLdouble, GLdouble) void
foreign glTexCoord3dv(*GLdouble) void
foreign glTexCoord3f(GLfloat, GLfloat, GLfloat) void
foreign glTexCoord3fv(*GLfloat) void
foreign glTexCoord3i(GLint, GLint, GLint) void
foreign glTexCoord3iv(*GLint) void
foreign glTexCoord3s(GLshort, GLshort, GLshort) void
foreign glTexCoord3sv(*GLshort) void
foreign glTexCoord4d(GLdouble, GLdouble, GLdouble, GLdouble) void
foreign glTexCoord4dv(*GLdouble) void
foreign glTexCoord4f(GLfloat, GLfloat, GLfloat, GLfloat) void
foreign glTexCoord4fv(*GLfloat) void
foreign glTexCoord4i(GLint, GLint, GLint, GLint) void
foreign glTexCoord4iv(*GLint) void
foreign glTexCoord4s(GLshort, GLshort, GLshort, GLshort) void
foreign glTexCoord4sv(*GLshort) void
foreign glTexCoordPointer(GLint, GLenum, GLsizei, ptr) void
foreign glTexEnvf(GLenum, GLenum, GLfloat) void
foreign glTexEnvfv(GLenum, GLenum, *GLfloat) void
foreign glTexEnvi(GLenum, GLenum, GLint) void
foreign glTexEnviv(GLenum, GLenum, *GLint) void
foreign glTexGend(GLenum, GLenum, GLdouble) void
foreign glTexGendv(GLenum, GLenum, *GLdouble) void
foreign glTexGenf(GLenum, GLenum, GLfloat) void
foreign glTexGenfv(GLenum, GLenum, *GLfloat) void
foreign glTexGeni(GLenum, GLenum, GLint) void
foreign glTexGeniv(GLenum, GLenum, *GLint) void
foreign glTexImage1D(GLenum, GLint, GLuint, GLsizei, GLint, GLenum, GLenum, ptr) void
foreign glTexImage2D(GLenum, GLint, GLuint, GLsizei, GLsizei, GLint, GLenum, GLenum, ptr) void
foreign glTexParameterf(GLenum, GLenum, GLfloat) void
foreign glTexParameterfv(GLenum, GLenum, *GLfloat) void
foreign glTexParameteri(GLenum, GLenum, GLenum) void
foreign glTexParameteriv(GLenum, GLenum, *GLenum) void
foreign glTexSubImage1D(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ptr) void
foreign glTexSubImage2D(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ptr) void
foreign glTranslated(GLdouble, GLdouble, GLdouble) void
foreign glTranslatef(GLfloat, GLfloat, GLfloat) void
foreign glVertex2d(GLdouble, GLdouble) void
foreign glVertex2dv(*GLdouble) void
foreign glVertex2f(GLfloat, GLfloat) void
foreign glVertex2fv(*GLfloat) void
foreign glVertex2i(GLint, GLint) void
foreign glVertex2iv(*GLint) void
foreign glVertex2s(GLshort, GLshort) void
foreign glVertex2sv(*GLshort) void
foreign glVertex3d(GLdouble, GLdouble, GLdouble) void
foreign glVertex3dv(*GLdouble) void
foreign glVertex3f(GLfloat, GLfloat, GLfloat) void
foreign glVertex3fv(*GLfloat) void
foreign glVertex3i(GLint, GLint, GLint) void
foreign glVertex3iv(*GLint) void
foreign glVertex3s(GLshort, GLshort, GLshort) void
foreign glVertex3sv(*GLshort) void
foreign glVertex4d(GLdouble, GLdouble, GLdouble, GLdouble) void
foreign glVertex4dv(*GLdouble) void
foreign glVertex4f(GLfloat, GLfloat, GLfloat, GLfloat) void
foreign glVertex4fv(*GLfloat) void
foreign glVertex4i(GLint, GLint, GLint, GLint) void
foreign glVertex4iv(*GLint) void
foreign glVertex4s(GLshort, GLshort, GLshort, GLshort) void
foreign glVertex4sv(*GLshort) void
foreign glVertexPointer(GLint, GLenum, GLsizei, ptr) void
foreign glViewport(GLint, GLint, GLsizei, GLsizei) void
func openglGetProcAddress(name *ubyte) ptr {
    return dlsym(_opengl_shared_object, name)
}
func openglInit() void {
    _opengl_shared_object = dlopen('/System/Library/Frameworks/OpenGL.framework/Versions/Current/OpenGL', RTLD_LAZY)
    unless _opengl_shared_object {
        return 
    }
    glActiveProgramEXT = openglGetProcAddress('glActiveProgramEXT')
    glActiveShaderProgram = openglGetProcAddress('glActiveShaderProgram')
    glActiveStencilFaceEXT = openglGetProcAddress('glActiveStencilFaceEXT')
    glActiveTextureARB = openglGetProcAddress('glActiveTextureARB')
    glActiveTexture = openglGetProcAddress('glActiveTexture')
    glActiveVaryingNV = openglGetProcAddress('glActiveVaryingNV')
    glAddSwapHintRectWIN = openglGetProcAddress('glAddSwapHintRectWIN')
    glAlphaFragmentOp1ATI = openglGetProcAddress('glAlphaFragmentOp1ATI')
    glAlphaFragmentOp2ATI = openglGetProcAddress('glAlphaFragmentOp2ATI')
    glAlphaFragmentOp3ATI = openglGetProcAddress('glAlphaFragmentOp3ATI')
    glAlphaFuncx = openglGetProcAddress('glAlphaFuncx')
    glApplyTextureEXT = openglGetProcAddress('glApplyTextureEXT')
    glArrayElementEXT = openglGetProcAddress('glArrayElementEXT')
    glArrayObjectATI = openglGetProcAddress('glArrayObjectATI')
    glAsyncMarkerSGIX = openglGetProcAddress('glAsyncMarkerSGIX')
    glAttachObjectARB = openglGetProcAddress('glAttachObjectARB')
    glAttachShader = openglGetProcAddress('glAttachShader')
    glBeginConditionalRenderNV = openglGetProcAddress('glBeginConditionalRenderNV')
    glBeginConditionalRenderNVX = openglGetProcAddress('glBeginConditionalRenderNVX')
    glBeginConditionalRender = openglGetProcAddress('glBeginConditionalRender')
    glBeginFragmentShaderATI = openglGetProcAddress('glBeginFragmentShaderATI')
    glBeginOcclusionQueryNV = openglGetProcAddress('glBeginOcclusionQueryNV')
    glBeginPerfMonitorAMD = openglGetProcAddress('glBeginPerfMonitorAMD')
    glBeginPerfQueryINTEL = openglGetProcAddress('glBeginPerfQueryINTEL')
    glBeginQueryANGLE = openglGetProcAddress('glBeginQueryANGLE')
    glBeginQueryARB = openglGetProcAddress('glBeginQueryARB')
    glBeginQueryIndexed = openglGetProcAddress('glBeginQueryIndexed')
    glBeginQuery = openglGetProcAddress('glBeginQuery')
    glBeginSceneEXT = openglGetProcAddress('glBeginSceneEXT')
    glBeginTransformFeedbackEXT = openglGetProcAddress('glBeginTransformFeedbackEXT')
    glBeginTransformFeedbackNV = openglGetProcAddress('glBeginTransformFeedbackNV')
    glBeginTransformFeedback = openglGetProcAddress('glBeginTransformFeedback')
    glBeginVertexShaderEXT = openglGetProcAddress('glBeginVertexShaderEXT')
    glBeginVideoCaptureNV = openglGetProcAddress('glBeginVideoCaptureNV')
    glBindAttribLocationARB = openglGetProcAddress('glBindAttribLocationARB')
    glBindAttribLocation = openglGetProcAddress('glBindAttribLocation')
    glBindBufferARB = openglGetProcAddress('glBindBufferARB')
    glBindBufferBaseEXT = openglGetProcAddress('glBindBufferBaseEXT')
    glBindBufferBaseNV = openglGetProcAddress('glBindBufferBaseNV')
    glBindBufferBase = openglGetProcAddress('glBindBufferBase')
    glBindBufferOffsetEXT = openglGetProcAddress('glBindBufferOffsetEXT')
    glBindBufferOffsetNV = openglGetProcAddress('glBindBufferOffsetNV')
    glBindBuffer = openglGetProcAddress('glBindBuffer')
    glBindBufferRangeEXT = openglGetProcAddress('glBindBufferRangeEXT')
    glBindBufferRangeNV = openglGetProcAddress('glBindBufferRangeNV')
    glBindBufferRange = openglGetProcAddress('glBindBufferRange')
    glBindBuffersBase = openglGetProcAddress('glBindBuffersBase')
    glBindBuffersRange = openglGetProcAddress('glBindBuffersRange')
    glBindFragDataLocationEXT = openglGetProcAddress('glBindFragDataLocationEXT')
    glBindFragDataLocationIndexed = openglGetProcAddress('glBindFragDataLocationIndexed')
    glBindFragDataLocation = openglGetProcAddress('glBindFragDataLocation')
    glBindFragmentShaderATI = openglGetProcAddress('glBindFragmentShaderATI')
    glBindFramebufferEXT = openglGetProcAddress('glBindFramebufferEXT')
    glBindFramebuffer = openglGetProcAddress('glBindFramebuffer')
    glBindImageTextureEXT = openglGetProcAddress('glBindImageTextureEXT')
    glBindImageTexture = openglGetProcAddress('glBindImageTexture')
    glBindImageTextures = openglGetProcAddress('glBindImageTextures')
    glBindMultiTextureEXT = openglGetProcAddress('glBindMultiTextureEXT')
    glBindProgramARB = openglGetProcAddress('glBindProgramARB')
    glBindProgramNV = openglGetProcAddress('glBindProgramNV')
    glBindProgramPipeline = openglGetProcAddress('glBindProgramPipeline')
    glBindRenderbufferEXT = openglGetProcAddress('glBindRenderbufferEXT')
    glBindRenderbuffer = openglGetProcAddress('glBindRenderbuffer')
    glBindSampler = openglGetProcAddress('glBindSampler')
    glBindSamplers = openglGetProcAddress('glBindSamplers')
    glBindTextureEXT = openglGetProcAddress('glBindTextureEXT')
    glBindTextures = openglGetProcAddress('glBindTextures')
    glBindTextureUnit = openglGetProcAddress('glBindTextureUnit')
    glBindTransformFeedbackNV = openglGetProcAddress('glBindTransformFeedbackNV')
    glBindTransformFeedback = openglGetProcAddress('glBindTransformFeedback')
    glBindVertexArrayAPPLE = openglGetProcAddress('glBindVertexArrayAPPLE')
    glBindVertexArray = openglGetProcAddress('glBindVertexArray')
    glBindVertexBuffer = openglGetProcAddress('glBindVertexBuffer')
    glBindVertexBuffers = openglGetProcAddress('glBindVertexBuffers')
    glBindVertexShaderEXT = openglGetProcAddress('glBindVertexShaderEXT')
    glBindVideoCaptureStreamBufferNV = openglGetProcAddress('glBindVideoCaptureStreamBufferNV')
    glBindVideoCaptureStreamTextureNV = openglGetProcAddress('glBindVideoCaptureStreamTextureNV')
    glBinormalPointerEXT = openglGetProcAddress('glBinormalPointerEXT')
    glBlendBarrierKHR = openglGetProcAddress('glBlendBarrierKHR')
    glBlendBarrierNV = openglGetProcAddress('glBlendBarrierNV')
    glBlendColorEXT = openglGetProcAddress('glBlendColorEXT')
    glBlendColor = openglGetProcAddress('glBlendColor')
    glBlendEquationEXT = openglGetProcAddress('glBlendEquationEXT')
    glBlendEquationiARB = openglGetProcAddress('glBlendEquationiARB')
    glBlendEquationIndexedAMD = openglGetProcAddress('glBlendEquationIndexedAMD')
    glBlendEquationi = openglGetProcAddress('glBlendEquationi')
    glBlendEquation = openglGetProcAddress('glBlendEquation')
    glBlendEquationSeparateEXT = openglGetProcAddress('glBlendEquationSeparateEXT')
    glBlendEquationSeparateiARB = openglGetProcAddress('glBlendEquationSeparateiARB')
    glBlendEquationSeparateIndexedAMD = openglGetProcAddress('glBlendEquationSeparateIndexedAMD')
    glBlendEquationSeparatei = openglGetProcAddress('glBlendEquationSeparatei')
    glBlendEquationSeparate = openglGetProcAddress('glBlendEquationSeparate')
    glBlendFunciARB = openglGetProcAddress('glBlendFunciARB')
    glBlendFuncIndexedAMD = openglGetProcAddress('glBlendFuncIndexedAMD')
    glBlendFunci = openglGetProcAddress('glBlendFunci')
    glBlendFuncSeparateEXT = openglGetProcAddress('glBlendFuncSeparateEXT')
    glBlendFuncSeparateiARB = openglGetProcAddress('glBlendFuncSeparateiARB')
    glBlendFuncSeparateIndexedAMD = openglGetProcAddress('glBlendFuncSeparateIndexedAMD')
    glBlendFuncSeparatei = openglGetProcAddress('glBlendFuncSeparatei')
    glBlendFuncSeparate = openglGetProcAddress('glBlendFuncSeparate')
    glBlendParameteriNV = openglGetProcAddress('glBlendParameteriNV')
    glBlitFramebufferANGLE = openglGetProcAddress('glBlitFramebufferANGLE')
    glBlitFramebufferEXT = openglGetProcAddress('glBlitFramebufferEXT')
    glBlitFramebuffer = openglGetProcAddress('glBlitFramebuffer')
    glBlitNamedFramebuffer = openglGetProcAddress('glBlitNamedFramebuffer')
    glBufferAddressRangeNV = openglGetProcAddress('glBufferAddressRangeNV')
    glBufferDataARB = openglGetProcAddress('glBufferDataARB')
    glBufferData = openglGetProcAddress('glBufferData')
    glBufferPageCommitmentARB = openglGetProcAddress('glBufferPageCommitmentARB')
    glBufferParameteriAPPLE = openglGetProcAddress('glBufferParameteriAPPLE')
    glBufferStorage = openglGetProcAddress('glBufferStorage')
    glBufferSubDataARB = openglGetProcAddress('glBufferSubDataARB')
    glBufferSubData = openglGetProcAddress('glBufferSubData')
    glClampColorARB = openglGetProcAddress('glClampColorARB')
    glClampColor = openglGetProcAddress('glClampColor')
    glClearBufferData = openglGetProcAddress('glClearBufferData')
    glClearBufferfi = openglGetProcAddress('glClearBufferfi')
    glClearBufferfv = openglGetProcAddress('glClearBufferfv')
    glClearBufferiv = openglGetProcAddress('glClearBufferiv')
    glClearBufferSubData = openglGetProcAddress('glClearBufferSubData')
    glClearBufferuiv = openglGetProcAddress('glClearBufferuiv')
    glClearColorIiEXT = openglGetProcAddress('glClearColorIiEXT')
    glClearColorIuiEXT = openglGetProcAddress('glClearColorIuiEXT')
    glClearColorx = openglGetProcAddress('glClearColorx')
    glClearDepthdNV = openglGetProcAddress('glClearDepthdNV')
    glClearDepthfOES = openglGetProcAddress('glClearDepthfOES')
    glClearDepthf = openglGetProcAddress('glClearDepthf')
    glClearDepthx = openglGetProcAddress('glClearDepthx')
    glClearNamedBufferDataEXT = openglGetProcAddress('glClearNamedBufferDataEXT')
    glClearNamedBufferData = openglGetProcAddress('glClearNamedBufferData')
    glClearNamedBufferSubDataEXT = openglGetProcAddress('glClearNamedBufferSubDataEXT')
    glClearNamedBufferSubData = openglGetProcAddress('glClearNamedBufferSubData')
    glClearNamedFramebufferfi = openglGetProcAddress('glClearNamedFramebufferfi')
    glClearNamedFramebufferfv = openglGetProcAddress('glClearNamedFramebufferfv')
    glClearNamedFramebufferiv = openglGetProcAddress('glClearNamedFramebufferiv')
    glClearNamedFramebufferuiv = openglGetProcAddress('glClearNamedFramebufferuiv')
    glClearTexImage = openglGetProcAddress('glClearTexImage')
    glClearTexSubImage = openglGetProcAddress('glClearTexSubImage')
    glClientActiveTextureARB = openglGetProcAddress('glClientActiveTextureARB')
    glClientActiveTexture = openglGetProcAddress('glClientActiveTexture')
    glClientActiveVertexStreamATI = openglGetProcAddress('glClientActiveVertexStreamATI')
    glClientAttribDefaultEXT = openglGetProcAddress('glClientAttribDefaultEXT')
    glClipControl = openglGetProcAddress('glClipControl')
    glClipPlanefOES = openglGetProcAddress('glClipPlanefOES')
    glClipPlanef = openglGetProcAddress('glClipPlanef')
    glClipPlanex = openglGetProcAddress('glClipPlanex')
    glColor3fVertex3fSUN = openglGetProcAddress('glColor3fVertex3fSUN')
    glColor3fVertex3fvSUN = openglGetProcAddress('glColor3fVertex3fvSUN')
    glColor3hNV = openglGetProcAddress('glColor3hNV')
    glColor3hvNV = openglGetProcAddress('glColor3hvNV')
    glColor4fNormal3fVertex3fSUN = openglGetProcAddress('glColor4fNormal3fVertex3fSUN')
    glColor4fNormal3fVertex3fvSUN = openglGetProcAddress('glColor4fNormal3fVertex3fvSUN')
    glColor4hNV = openglGetProcAddress('glColor4hNV')
    glColor4hvNV = openglGetProcAddress('glColor4hvNV')
    glColor4ubVertex2fSUN = openglGetProcAddress('glColor4ubVertex2fSUN')
    glColor4ubVertex2fvSUN = openglGetProcAddress('glColor4ubVertex2fvSUN')
    glColor4ubVertex3fSUN = openglGetProcAddress('glColor4ubVertex3fSUN')
    glColor4ubVertex3fvSUN = openglGetProcAddress('glColor4ubVertex3fvSUN')
    glColor4x = openglGetProcAddress('glColor4x')
    glColorFormatNV = openglGetProcAddress('glColorFormatNV')
    glColorFragmentOp1ATI = openglGetProcAddress('glColorFragmentOp1ATI')
    glColorFragmentOp2ATI = openglGetProcAddress('glColorFragmentOp2ATI')
    glColorFragmentOp3ATI = openglGetProcAddress('glColorFragmentOp3ATI')
    glColorMaskIndexedEXT = openglGetProcAddress('glColorMaskIndexedEXT')
    glColorMaski = openglGetProcAddress('glColorMaski')
    glColorP3ui = openglGetProcAddress('glColorP3ui')
    glColorP3uiv = openglGetProcAddress('glColorP3uiv')
    glColorP4ui = openglGetProcAddress('glColorP4ui')
    glColorP4uiv = openglGetProcAddress('glColorP4uiv')
    glColorPointerEXT = openglGetProcAddress('glColorPointerEXT')
    glColorPointerListIBM = openglGetProcAddress('glColorPointerListIBM')
    glColorPointervINTEL = openglGetProcAddress('glColorPointervINTEL')
    glColorSubTableEXT = openglGetProcAddress('glColorSubTableEXT')
    glColorSubTable = openglGetProcAddress('glColorSubTable')
    glColorTableEXT = openglGetProcAddress('glColorTableEXT')
    glColorTableParameterfv = openglGetProcAddress('glColorTableParameterfv')
    glColorTableParameterfvSGI = openglGetProcAddress('glColorTableParameterfvSGI')
    glColorTableParameteriv = openglGetProcAddress('glColorTableParameteriv')
    glColorTableParameterivSGI = openglGetProcAddress('glColorTableParameterivSGI')
    glColorTable = openglGetProcAddress('glColorTable')
    glColorTableSGI = openglGetProcAddress('glColorTableSGI')
    glCombinerInputNV = openglGetProcAddress('glCombinerInputNV')
    glCombinerOutputNV = openglGetProcAddress('glCombinerOutputNV')
    glCombinerParameterfNV = openglGetProcAddress('glCombinerParameterfNV')
    glCombinerParameterfvNV = openglGetProcAddress('glCombinerParameterfvNV')
    glCombinerParameteriNV = openglGetProcAddress('glCombinerParameteriNV')
    glCombinerParameterivNV = openglGetProcAddress('glCombinerParameterivNV')
    glCombinerStageParameterfvNV = openglGetProcAddress('glCombinerStageParameterfvNV')
    glCompileShaderARB = openglGetProcAddress('glCompileShaderARB')
    glCompileShaderIncludeARB = openglGetProcAddress('glCompileShaderIncludeARB')
    glCompileShader = openglGetProcAddress('glCompileShader')
    glCompressedMultiTexImage1DEXT = openglGetProcAddress('glCompressedMultiTexImage1DEXT')
    glCompressedMultiTexImage2DEXT = openglGetProcAddress('glCompressedMultiTexImage2DEXT')
    glCompressedMultiTexImage3DEXT = openglGetProcAddress('glCompressedMultiTexImage3DEXT')
    glCompressedMultiTexSubImage1DEXT = openglGetProcAddress('glCompressedMultiTexSubImage1DEXT')
    glCompressedMultiTexSubImage2DEXT = openglGetProcAddress('glCompressedMultiTexSubImage2DEXT')
    glCompressedMultiTexSubImage3DEXT = openglGetProcAddress('glCompressedMultiTexSubImage3DEXT')
    glCompressedTexImage1DARB = openglGetProcAddress('glCompressedTexImage1DARB')
    glCompressedTexImage1D = openglGetProcAddress('glCompressedTexImage1D')
    glCompressedTexImage2DARB = openglGetProcAddress('glCompressedTexImage2DARB')
    glCompressedTexImage2D = openglGetProcAddress('glCompressedTexImage2D')
    glCompressedTexImage3DARB = openglGetProcAddress('glCompressedTexImage3DARB')
    glCompressedTexImage3D = openglGetProcAddress('glCompressedTexImage3D')
    glCompressedTexSubImage1DARB = openglGetProcAddress('glCompressedTexSubImage1DARB')
    glCompressedTexSubImage1D = openglGetProcAddress('glCompressedTexSubImage1D')
    glCompressedTexSubImage2DARB = openglGetProcAddress('glCompressedTexSubImage2DARB')
    glCompressedTexSubImage2D = openglGetProcAddress('glCompressedTexSubImage2D')
    glCompressedTexSubImage3DARB = openglGetProcAddress('glCompressedTexSubImage3DARB')
    glCompressedTexSubImage3D = openglGetProcAddress('glCompressedTexSubImage3D')
    glCompressedTextureImage1DEXT = openglGetProcAddress('glCompressedTextureImage1DEXT')
    glCompressedTextureImage2DEXT = openglGetProcAddress('glCompressedTextureImage2DEXT')
    glCompressedTextureImage3DEXT = openglGetProcAddress('glCompressedTextureImage3DEXT')
    glCompressedTextureSubImage1DEXT = openglGetProcAddress('glCompressedTextureSubImage1DEXT')
    glCompressedTextureSubImage1D = openglGetProcAddress('glCompressedTextureSubImage1D')
    glCompressedTextureSubImage2DEXT = openglGetProcAddress('glCompressedTextureSubImage2DEXT')
    glCompressedTextureSubImage2D = openglGetProcAddress('glCompressedTextureSubImage2D')
    glCompressedTextureSubImage3DEXT = openglGetProcAddress('glCompressedTextureSubImage3DEXT')
    glCompressedTextureSubImage3D = openglGetProcAddress('glCompressedTextureSubImage3D')
    glConservativeRasterParameterfNV = openglGetProcAddress('glConservativeRasterParameterfNV')
    glConvolutionFilter1DEXT = openglGetProcAddress('glConvolutionFilter1DEXT')
    glConvolutionFilter1D = openglGetProcAddress('glConvolutionFilter1D')
    glConvolutionFilter2DEXT = openglGetProcAddress('glConvolutionFilter2DEXT')
    glConvolutionFilter2D = openglGetProcAddress('glConvolutionFilter2D')
    glConvolutionParameterfEXT = openglGetProcAddress('glConvolutionParameterfEXT')
    glConvolutionParameterf = openglGetProcAddress('glConvolutionParameterf')
    glConvolutionParameterfvEXT = openglGetProcAddress('glConvolutionParameterfvEXT')
    glConvolutionParameterfv = openglGetProcAddress('glConvolutionParameterfv')
    glConvolutionParameteriEXT = openglGetProcAddress('glConvolutionParameteriEXT')
    glConvolutionParameteri = openglGetProcAddress('glConvolutionParameteri')
    glConvolutionParameterivEXT = openglGetProcAddress('glConvolutionParameterivEXT')
    glConvolutionParameteriv = openglGetProcAddress('glConvolutionParameteriv')
    glCopyBufferSubData = openglGetProcAddress('glCopyBufferSubData')
    glCopyColorSubTableEXT = openglGetProcAddress('glCopyColorSubTableEXT')
    glCopyColorSubTable = openglGetProcAddress('glCopyColorSubTable')
    glCopyColorTable = openglGetProcAddress('glCopyColorTable')
    glCopyColorTableSGI = openglGetProcAddress('glCopyColorTableSGI')
    glCopyConvolutionFilter1DEXT = openglGetProcAddress('glCopyConvolutionFilter1DEXT')
    glCopyConvolutionFilter1D = openglGetProcAddress('glCopyConvolutionFilter1D')
    glCopyConvolutionFilter2DEXT = openglGetProcAddress('glCopyConvolutionFilter2DEXT')
    glCopyConvolutionFilter2D = openglGetProcAddress('glCopyConvolutionFilter2D')
    glCopyImageSubDataNV = openglGetProcAddress('glCopyImageSubDataNV')
    glCopyImageSubData = openglGetProcAddress('glCopyImageSubData')
    glCopyMultiTexImage1DEXT = openglGetProcAddress('glCopyMultiTexImage1DEXT')
    glCopyMultiTexImage2DEXT = openglGetProcAddress('glCopyMultiTexImage2DEXT')
    glCopyMultiTexSubImage1DEXT = openglGetProcAddress('glCopyMultiTexSubImage1DEXT')
    glCopyMultiTexSubImage2DEXT = openglGetProcAddress('glCopyMultiTexSubImage2DEXT')
    glCopyMultiTexSubImage3DEXT = openglGetProcAddress('glCopyMultiTexSubImage3DEXT')
    glCopyNamedBufferSubData = openglGetProcAddress('glCopyNamedBufferSubData')
    glCopyPathNV = openglGetProcAddress('glCopyPathNV')
    glCopyTexImage1DEXT = openglGetProcAddress('glCopyTexImage1DEXT')
    glCopyTexImage2DEXT = openglGetProcAddress('glCopyTexImage2DEXT')
    glCopyTexSubImage1DEXT = openglGetProcAddress('glCopyTexSubImage1DEXT')
    glCopyTexSubImage2DEXT = openglGetProcAddress('glCopyTexSubImage2DEXT')
    glCopyTexSubImage3DEXT = openglGetProcAddress('glCopyTexSubImage3DEXT')
    glCopyTexSubImage3D = openglGetProcAddress('glCopyTexSubImage3D')
    glCopyTextureImage1DEXT = openglGetProcAddress('glCopyTextureImage1DEXT')
    glCopyTextureImage2DEXT = openglGetProcAddress('glCopyTextureImage2DEXT')
    glCopyTextureSubImage1DEXT = openglGetProcAddress('glCopyTextureSubImage1DEXT')
    glCopyTextureSubImage1D = openglGetProcAddress('glCopyTextureSubImage1D')
    glCopyTextureSubImage2DEXT = openglGetProcAddress('glCopyTextureSubImage2DEXT')
    glCopyTextureSubImage2D = openglGetProcAddress('glCopyTextureSubImage2D')
    glCopyTextureSubImage3DEXT = openglGetProcAddress('glCopyTextureSubImage3DEXT')
    glCopyTextureSubImage3D = openglGetProcAddress('glCopyTextureSubImage3D')
    glCoverageModulationNV = openglGetProcAddress('glCoverageModulationNV')
    glCoverageModulationTableNV = openglGetProcAddress('glCoverageModulationTableNV')
    glCoverFillPathInstancedNV = openglGetProcAddress('glCoverFillPathInstancedNV')
    glCoverFillPathNV = openglGetProcAddress('glCoverFillPathNV')
    glCoverStrokePathInstancedNV = openglGetProcAddress('glCoverStrokePathInstancedNV')
    glCoverStrokePathNV = openglGetProcAddress('glCoverStrokePathNV')
    glCreateBuffers = openglGetProcAddress('glCreateBuffers')
    glCreateFramebuffers = openglGetProcAddress('glCreateFramebuffers')
    glCreatePerfQueryINTEL = openglGetProcAddress('glCreatePerfQueryINTEL')
    glCreateProgram = openglGetProcAddress('glCreateProgram')
    glCreateProgramPipelines = openglGetProcAddress('glCreateProgramPipelines')
    glCreateQueries = openglGetProcAddress('glCreateQueries')
    glCreateRenderbuffers = openglGetProcAddress('glCreateRenderbuffers')
    glCreateSamplers = openglGetProcAddress('glCreateSamplers')
    glCreateShader = openglGetProcAddress('glCreateShader')
    glCreateTextures = openglGetProcAddress('glCreateTextures')
    glCreateTransformFeedbacks = openglGetProcAddress('glCreateTransformFeedbacks')
    glCreateVertexArrays = openglGetProcAddress('glCreateVertexArrays')
    glCullParameterdvEXT = openglGetProcAddress('glCullParameterdvEXT')
    glCullParameterfvEXT = openglGetProcAddress('glCullParameterfvEXT')
    glCurrentPaletteMatrixARB = openglGetProcAddress('glCurrentPaletteMatrixARB')
    glDebugMessageCallbackAMD = openglGetProcAddress('glDebugMessageCallbackAMD')
    glDebugMessageCallbackARB = openglGetProcAddress('glDebugMessageCallbackARB')
    glDebugMessageCallback = openglGetProcAddress('glDebugMessageCallback')
    glDebugMessageControlARB = openglGetProcAddress('glDebugMessageControlARB')
    glDebugMessageControl = openglGetProcAddress('glDebugMessageControl')
    glDebugMessageEnableAMD = openglGetProcAddress('glDebugMessageEnableAMD')
    glDebugMessageInsertAMD = openglGetProcAddress('glDebugMessageInsertAMD')
    glDebugMessageInsertARB = openglGetProcAddress('glDebugMessageInsertARB')
    glDebugMessageInsert = openglGetProcAddress('glDebugMessageInsert')
    glDeleteAsyncMarkersSGIX = openglGetProcAddress('glDeleteAsyncMarkersSGIX')
    glDeleteBufferRegion = openglGetProcAddress('glDeleteBufferRegion')
    glDeleteBuffersARB = openglGetProcAddress('glDeleteBuffersARB')
    glDeleteBuffers = openglGetProcAddress('glDeleteBuffers')
    glDeleteFencesAPPLE = openglGetProcAddress('glDeleteFencesAPPLE')
    glDeleteFencesNV = openglGetProcAddress('glDeleteFencesNV')
    glDeleteFragmentShaderATI = openglGetProcAddress('glDeleteFragmentShaderATI')
    glDeleteFramebuffersEXT = openglGetProcAddress('glDeleteFramebuffersEXT')
    glDeleteFramebuffers = openglGetProcAddress('glDeleteFramebuffers')
    glDeleteNamedStringARB = openglGetProcAddress('glDeleteNamedStringARB')
    glDeleteNamesAMD = openglGetProcAddress('glDeleteNamesAMD')
    glDeleteObjectARB = openglGetProcAddress('glDeleteObjectARB')
    glDeleteOcclusionQueriesNV = openglGetProcAddress('glDeleteOcclusionQueriesNV')
    glDeletePathsNV = openglGetProcAddress('glDeletePathsNV')
    glDeletePerfMonitorsAMD = openglGetProcAddress('glDeletePerfMonitorsAMD')
    glDeletePerfQueryINTEL = openglGetProcAddress('glDeletePerfQueryINTEL')
    glDeleteProgramPipelines = openglGetProcAddress('glDeleteProgramPipelines')
    glDeleteProgram = openglGetProcAddress('glDeleteProgram')
    glDeleteProgramsARB = openglGetProcAddress('glDeleteProgramsARB')
    glDeleteProgramsNV = openglGetProcAddress('glDeleteProgramsNV')
    glDeleteQueriesANGLE = openglGetProcAddress('glDeleteQueriesANGLE')
    glDeleteQueriesARB = openglGetProcAddress('glDeleteQueriesARB')
    glDeleteQueries = openglGetProcAddress('glDeleteQueries')
    glDeleteRenderbuffersEXT = openglGetProcAddress('glDeleteRenderbuffersEXT')
    glDeleteRenderbuffers = openglGetProcAddress('glDeleteRenderbuffers')
    glDeleteSamplers = openglGetProcAddress('glDeleteSamplers')
    glDeleteShader = openglGetProcAddress('glDeleteShader')
    glDeleteSync = openglGetProcAddress('glDeleteSync')
    glDeleteTexturesEXT = openglGetProcAddress('glDeleteTexturesEXT')
    glDeleteTransformFeedbacksNV = openglGetProcAddress('glDeleteTransformFeedbacksNV')
    glDeleteTransformFeedbacks = openglGetProcAddress('glDeleteTransformFeedbacks')
    glDeleteVertexArraysAPPLE = openglGetProcAddress('glDeleteVertexArraysAPPLE')
    glDeleteVertexArrays = openglGetProcAddress('glDeleteVertexArrays')
    glDeleteVertexShaderEXT = openglGetProcAddress('glDeleteVertexShaderEXT')
    glDepthBoundsdNV = openglGetProcAddress('glDepthBoundsdNV')
    glDepthBoundsEXT = openglGetProcAddress('glDepthBoundsEXT')
    glDepthRangeArrayv = openglGetProcAddress('glDepthRangeArrayv')
    glDepthRangedNV = openglGetProcAddress('glDepthRangedNV')
    glDepthRangefOES = openglGetProcAddress('glDepthRangefOES')
    glDepthRangef = openglGetProcAddress('glDepthRangef')
    glDepthRangeIndexed = openglGetProcAddress('glDepthRangeIndexed')
    glDepthRangex = openglGetProcAddress('glDepthRangex')
    glDetachObjectARB = openglGetProcAddress('glDetachObjectARB')
    glDetachShader = openglGetProcAddress('glDetachShader')
    glDetailTexFuncSGIS = openglGetProcAddress('glDetailTexFuncSGIS')
    glDisableClientStateiEXT = openglGetProcAddress('glDisableClientStateiEXT')
    glDisableClientStateIndexedEXT = openglGetProcAddress('glDisableClientStateIndexedEXT')
    glDisableIndexedEXT = openglGetProcAddress('glDisableIndexedEXT')
    glDisablei = openglGetProcAddress('glDisablei')
    glDisableVariantClientStateEXT = openglGetProcAddress('glDisableVariantClientStateEXT')
    glDisableVertexArrayAttribEXT = openglGetProcAddress('glDisableVertexArrayAttribEXT')
    glDisableVertexArrayAttrib = openglGetProcAddress('glDisableVertexArrayAttrib')
    glDisableVertexArrayEXT = openglGetProcAddress('glDisableVertexArrayEXT')
    glDisableVertexAttribAPPLE = openglGetProcAddress('glDisableVertexAttribAPPLE')
    glDisableVertexAttribArrayARB = openglGetProcAddress('glDisableVertexAttribArrayARB')
    glDisableVertexAttribArray = openglGetProcAddress('glDisableVertexAttribArray')
    glDispatchComputeGroupSizeARB = openglGetProcAddress('glDispatchComputeGroupSizeARB')
    glDispatchComputeIndirect = openglGetProcAddress('glDispatchComputeIndirect')
    glDispatchCompute = openglGetProcAddress('glDispatchCompute')
    glDrawArraysEXT = openglGetProcAddress('glDrawArraysEXT')
    glDrawArraysIndirect = openglGetProcAddress('glDrawArraysIndirect')
    glDrawArraysInstancedANGLE = openglGetProcAddress('glDrawArraysInstancedANGLE')
    glDrawArraysInstancedARB = openglGetProcAddress('glDrawArraysInstancedARB')
    glDrawArraysInstancedBaseInstance = openglGetProcAddress('glDrawArraysInstancedBaseInstance')
    glDrawArraysInstancedEXT = openglGetProcAddress('glDrawArraysInstancedEXT')
    glDrawArraysInstanced = openglGetProcAddress('glDrawArraysInstanced')
    glDrawBufferRegion = openglGetProcAddress('glDrawBufferRegion')
    glDrawBuffersARB = openglGetProcAddress('glDrawBuffersARB')
    glDrawBuffersATI = openglGetProcAddress('glDrawBuffersATI')
    glDrawBuffers = openglGetProcAddress('glDrawBuffers')
    glDrawElementArrayAPPLE = openglGetProcAddress('glDrawElementArrayAPPLE')
    glDrawElementArrayATI = openglGetProcAddress('glDrawElementArrayATI')
    glDrawElementsBaseVertex = openglGetProcAddress('glDrawElementsBaseVertex')
    glDrawElementsIndirect = openglGetProcAddress('glDrawElementsIndirect')
    glDrawElementsInstancedANGLE = openglGetProcAddress('glDrawElementsInstancedANGLE')
    glDrawElementsInstancedARB = openglGetProcAddress('glDrawElementsInstancedARB')
    glDrawElementsInstancedBaseInstance = openglGetProcAddress('glDrawElementsInstancedBaseInstance')
    glDrawElementsInstancedBaseVertexBaseInstance = openglGetProcAddress('glDrawElementsInstancedBaseVertexBaseInstance')
    glDrawElementsInstancedBaseVertex = openglGetProcAddress('glDrawElementsInstancedBaseVertex')
    glDrawElementsInstancedEXT = openglGetProcAddress('glDrawElementsInstancedEXT')
    glDrawElementsInstanced = openglGetProcAddress('glDrawElementsInstanced')
    glDrawRangeElementArrayAPPLE = openglGetProcAddress('glDrawRangeElementArrayAPPLE')
    glDrawRangeElementArrayATI = openglGetProcAddress('glDrawRangeElementArrayATI')
    glDrawRangeElementsBaseVertex = openglGetProcAddress('glDrawRangeElementsBaseVertex')
    glDrawRangeElementsEXT = openglGetProcAddress('glDrawRangeElementsEXT')
    glDrawRangeElements = openglGetProcAddress('glDrawRangeElements')
    glDrawTextureNV = openglGetProcAddress('glDrawTextureNV')
    glDrawTransformFeedbackInstanced = openglGetProcAddress('glDrawTransformFeedbackInstanced')
    glDrawTransformFeedbackNV = openglGetProcAddress('glDrawTransformFeedbackNV')
    glDrawTransformFeedback = openglGetProcAddress('glDrawTransformFeedback')
    glDrawTransformFeedbackStreamInstanced = openglGetProcAddress('glDrawTransformFeedbackStreamInstanced')
    glDrawTransformFeedbackStream = openglGetProcAddress('glDrawTransformFeedbackStream')
    glEdgeFlagFormatNV = openglGetProcAddress('glEdgeFlagFormatNV')
    glEdgeFlagPointerEXT = openglGetProcAddress('glEdgeFlagPointerEXT')
    glEdgeFlagPointerListIBM = openglGetProcAddress('glEdgeFlagPointerListIBM')
    glElementPointerAPPLE = openglGetProcAddress('glElementPointerAPPLE')
    glElementPointerATI = openglGetProcAddress('glElementPointerATI')
    glEnableClientStateiEXT = openglGetProcAddress('glEnableClientStateiEXT')
    glEnableClientStateIndexedEXT = openglGetProcAddress('glEnableClientStateIndexedEXT')
    glEnableIndexedEXT = openglGetProcAddress('glEnableIndexedEXT')
    glEnablei = openglGetProcAddress('glEnablei')
    glEnableVariantClientStateEXT = openglGetProcAddress('glEnableVariantClientStateEXT')
    glEnableVertexArrayAttribEXT = openglGetProcAddress('glEnableVertexArrayAttribEXT')
    glEnableVertexArrayAttrib = openglGetProcAddress('glEnableVertexArrayAttrib')
    glEnableVertexArrayEXT = openglGetProcAddress('glEnableVertexArrayEXT')
    glEnableVertexAttribAPPLE = openglGetProcAddress('glEnableVertexAttribAPPLE')
    glEnableVertexAttribArrayARB = openglGetProcAddress('glEnableVertexAttribArrayARB')
    glEnableVertexAttribArray = openglGetProcAddress('glEnableVertexAttribArray')
    glEndConditionalRenderNV = openglGetProcAddress('glEndConditionalRenderNV')
    glEndConditionalRenderNVX = openglGetProcAddress('glEndConditionalRenderNVX')
    glEndConditionalRender = openglGetProcAddress('glEndConditionalRender')
    glEndFragmentShaderATI = openglGetProcAddress('glEndFragmentShaderATI')
    glEndOcclusionQueryNV = openglGetProcAddress('glEndOcclusionQueryNV')
    glEndPerfMonitorAMD = openglGetProcAddress('glEndPerfMonitorAMD')
    glEndPerfQueryINTEL = openglGetProcAddress('glEndPerfQueryINTEL')
    glEndQueryANGLE = openglGetProcAddress('glEndQueryANGLE')
    glEndQueryARB = openglGetProcAddress('glEndQueryARB')
    glEndQueryIndexed = openglGetProcAddress('glEndQueryIndexed')
    glEndQuery = openglGetProcAddress('glEndQuery')
    glEndSceneEXT = openglGetProcAddress('glEndSceneEXT')
    glEndTransformFeedbackEXT = openglGetProcAddress('glEndTransformFeedbackEXT')
    glEndTransformFeedbackNV = openglGetProcAddress('glEndTransformFeedbackNV')
    glEndTransformFeedback = openglGetProcAddress('glEndTransformFeedback')
    glEndVertexShaderEXT = openglGetProcAddress('glEndVertexShaderEXT')
    glEndVideoCaptureNV = openglGetProcAddress('glEndVideoCaptureNV')
    glEvalMapsNV = openglGetProcAddress('glEvalMapsNV')
    glExecuteProgramNV = openglGetProcAddress('glExecuteProgramNV')
    glExtractComponentEXT = openglGetProcAddress('glExtractComponentEXT')
    glFinalCombinerInputNV = openglGetProcAddress('glFinalCombinerInputNV')
    glFinishFenceAPPLE = openglGetProcAddress('glFinishFenceAPPLE')
    glFinishFenceNV = openglGetProcAddress('glFinishFenceNV')
    glFinishObjectAPPLE = openglGetProcAddress('glFinishObjectAPPLE')
    glFinishTextureSUNX = openglGetProcAddress('glFinishTextureSUNX')
    glFlushMappedBufferRangeAPPLE = openglGetProcAddress('glFlushMappedBufferRangeAPPLE')
    glFlushMappedBufferRange = openglGetProcAddress('glFlushMappedBufferRange')
    glFlushMappedNamedBufferRangeEXT = openglGetProcAddress('glFlushMappedNamedBufferRangeEXT')
    glFlushMappedNamedBufferRange = openglGetProcAddress('glFlushMappedNamedBufferRange')
    glFlushPixelDataRangeNV = openglGetProcAddress('glFlushPixelDataRangeNV')
    glFlushRasterSGIX = openglGetProcAddress('glFlushRasterSGIX')
    glFlushVertexArrayRangeAPPLE = openglGetProcAddress('glFlushVertexArrayRangeAPPLE')
    glFlushVertexArrayRangeNV = openglGetProcAddress('glFlushVertexArrayRangeNV')
    glFogCoorddEXT = openglGetProcAddress('glFogCoorddEXT')
    glFogCoordd = openglGetProcAddress('glFogCoordd')
    glFogCoorddvEXT = openglGetProcAddress('glFogCoorddvEXT')
    glFogCoorddv = openglGetProcAddress('glFogCoorddv')
    glFogCoordfEXT = openglGetProcAddress('glFogCoordfEXT')
    glFogCoordFormatNV = openglGetProcAddress('glFogCoordFormatNV')
    glFogCoordf = openglGetProcAddress('glFogCoordf')
    glFogCoordfvEXT = openglGetProcAddress('glFogCoordfvEXT')
    glFogCoordfv = openglGetProcAddress('glFogCoordfv')
    glFogCoordhNV = openglGetProcAddress('glFogCoordhNV')
    glFogCoordhvNV = openglGetProcAddress('glFogCoordhvNV')
    glFogCoordPointerEXT = openglGetProcAddress('glFogCoordPointerEXT')
    glFogCoordPointerListIBM = openglGetProcAddress('glFogCoordPointerListIBM')
    glFogCoordPointer = openglGetProcAddress('glFogCoordPointer')
    glFogFuncSGIS = openglGetProcAddress('glFogFuncSGIS')
    glFogx = openglGetProcAddress('glFogx')
    glFogxv = openglGetProcAddress('glFogxv')
    glFragmentColorMaterialEXT = openglGetProcAddress('glFragmentColorMaterialEXT')
    glFragmentColorMaterialSGIX = openglGetProcAddress('glFragmentColorMaterialSGIX')
    glFragmentCoverageColorNV = openglGetProcAddress('glFragmentCoverageColorNV')
    glFragmentLightfEXT = openglGetProcAddress('glFragmentLightfEXT')
    glFragmentLightfSGIX = openglGetProcAddress('glFragmentLightfSGIX')
    glFragmentLightfvEXT = openglGetProcAddress('glFragmentLightfvEXT')
    glFragmentLightfvSGIX = openglGetProcAddress('glFragmentLightfvSGIX')
    glFragmentLightiEXT = openglGetProcAddress('glFragmentLightiEXT')
    glFragmentLightiSGIX = openglGetProcAddress('glFragmentLightiSGIX')
    glFragmentLightivEXT = openglGetProcAddress('glFragmentLightivEXT')
    glFragmentLightivSGIX = openglGetProcAddress('glFragmentLightivSGIX')
    glFragmentLightModelfEXT = openglGetProcAddress('glFragmentLightModelfEXT')
    glFragmentLightModelfSGIX = openglGetProcAddress('glFragmentLightModelfSGIX')
    glFragmentLightModelfvEXT = openglGetProcAddress('glFragmentLightModelfvEXT')
    glFragmentLightModelfvSGIX = openglGetProcAddress('glFragmentLightModelfvSGIX')
    glFragmentLightModeliEXT = openglGetProcAddress('glFragmentLightModeliEXT')
    glFragmentLightModeliSGIX = openglGetProcAddress('glFragmentLightModeliSGIX')
    glFragmentLightModelivEXT = openglGetProcAddress('glFragmentLightModelivEXT')
    glFragmentLightModelivSGIX = openglGetProcAddress('glFragmentLightModelivSGIX')
    glFragmentMaterialfEXT = openglGetProcAddress('glFragmentMaterialfEXT')
    glFragmentMaterialfSGIX = openglGetProcAddress('glFragmentMaterialfSGIX')
    glFragmentMaterialfvEXT = openglGetProcAddress('glFragmentMaterialfvEXT')
    glFragmentMaterialfvSGIX = openglGetProcAddress('glFragmentMaterialfvSGIX')
    glFragmentMaterialiEXT = openglGetProcAddress('glFragmentMaterialiEXT')
    glFragmentMaterialiSGIX = openglGetProcAddress('glFragmentMaterialiSGIX')
    glFragmentMaterialivEXT = openglGetProcAddress('glFragmentMaterialivEXT')
    glFragmentMaterialivSGIX = openglGetProcAddress('glFragmentMaterialivSGIX')
    glFramebufferDrawBufferEXT = openglGetProcAddress('glFramebufferDrawBufferEXT')
    glFramebufferDrawBuffersEXT = openglGetProcAddress('glFramebufferDrawBuffersEXT')
    glFramebufferParameteri = openglGetProcAddress('glFramebufferParameteri')
    glFramebufferReadBufferEXT = openglGetProcAddress('glFramebufferReadBufferEXT')
    glFramebufferRenderbufferEXT = openglGetProcAddress('glFramebufferRenderbufferEXT')
    glFramebufferRenderbuffer = openglGetProcAddress('glFramebufferRenderbuffer')
    glFramebufferSampleLocationsfvARB = openglGetProcAddress('glFramebufferSampleLocationsfvARB')
    glFramebufferSampleLocationsfvNV = openglGetProcAddress('glFramebufferSampleLocationsfvNV')
    glFramebufferTexture1DEXT = openglGetProcAddress('glFramebufferTexture1DEXT')
    glFramebufferTexture1D = openglGetProcAddress('glFramebufferTexture1D')
    glFramebufferTexture2DEXT = openglGetProcAddress('glFramebufferTexture2DEXT')
    glFramebufferTexture2D = openglGetProcAddress('glFramebufferTexture2D')
    glFramebufferTexture3DEXT = openglGetProcAddress('glFramebufferTexture3DEXT')
    glFramebufferTexture3D = openglGetProcAddress('glFramebufferTexture3D')
    glFramebufferTextureARB = openglGetProcAddress('glFramebufferTextureARB')
    glFramebufferTextureEXT = openglGetProcAddress('glFramebufferTextureEXT')
    glFramebufferTextureFaceARB = openglGetProcAddress('glFramebufferTextureFaceARB')
    glFramebufferTextureFaceEXT = openglGetProcAddress('glFramebufferTextureFaceEXT')
    glFramebufferTextureLayerARB = openglGetProcAddress('glFramebufferTextureLayerARB')
    glFramebufferTextureLayerEXT = openglGetProcAddress('glFramebufferTextureLayerEXT')
    glFramebufferTextureLayer = openglGetProcAddress('glFramebufferTextureLayer')
    glFramebufferTextureMultiviewOVR = openglGetProcAddress('glFramebufferTextureMultiviewOVR')
    glFramebufferTexture = openglGetProcAddress('glFramebufferTexture')
    glFrameTerminatorGREMEDY = openglGetProcAddress('glFrameTerminatorGREMEDY')
    glFrameZoomSGIX = openglGetProcAddress('glFrameZoomSGIX')
    glFreeObjectBufferATI = openglGetProcAddress('glFreeObjectBufferATI')
    glFrustumfOES = openglGetProcAddress('glFrustumfOES')
    glFrustumf = openglGetProcAddress('glFrustumf')
    glFrustumx = openglGetProcAddress('glFrustumx')
    glGenBuffersARB = openglGetProcAddress('glGenBuffersARB')
    glGenBuffers = openglGetProcAddress('glGenBuffers')
    glGenerateMipmapEXT = openglGetProcAddress('glGenerateMipmapEXT')
    glGenerateMipmap = openglGetProcAddress('glGenerateMipmap')
    glGenerateMultiTexMipmapEXT = openglGetProcAddress('glGenerateMultiTexMipmapEXT')
    glGenerateTextureMipmapEXT = openglGetProcAddress('glGenerateTextureMipmapEXT')
    glGenerateTextureMipmap = openglGetProcAddress('glGenerateTextureMipmap')
    glGenFencesAPPLE = openglGetProcAddress('glGenFencesAPPLE')
    glGenFencesNV = openglGetProcAddress('glGenFencesNV')
    glGenFramebuffersEXT = openglGetProcAddress('glGenFramebuffersEXT')
    glGenFramebuffers = openglGetProcAddress('glGenFramebuffers')
    glGenNamesAMD = openglGetProcAddress('glGenNamesAMD')
    glGenOcclusionQueriesNV = openglGetProcAddress('glGenOcclusionQueriesNV')
    glGenPerfMonitorsAMD = openglGetProcAddress('glGenPerfMonitorsAMD')
    glGenProgramPipelines = openglGetProcAddress('glGenProgramPipelines')
    glGenProgramsARB = openglGetProcAddress('glGenProgramsARB')
    glGenProgramsNV = openglGetProcAddress('glGenProgramsNV')
    glGenQueriesANGLE = openglGetProcAddress('glGenQueriesANGLE')
    glGenQueriesARB = openglGetProcAddress('glGenQueriesARB')
    glGenQueries = openglGetProcAddress('glGenQueries')
    glGenRenderbuffersEXT = openglGetProcAddress('glGenRenderbuffersEXT')
    glGenRenderbuffers = openglGetProcAddress('glGenRenderbuffers')
    glGenSamplers = openglGetProcAddress('glGenSamplers')
    glGenTexturesEXT = openglGetProcAddress('glGenTexturesEXT')
    glGenTransformFeedbacksNV = openglGetProcAddress('glGenTransformFeedbacksNV')
    glGenTransformFeedbacks = openglGetProcAddress('glGenTransformFeedbacks')
    glGenVertexArraysAPPLE = openglGetProcAddress('glGenVertexArraysAPPLE')
    glGenVertexArrays = openglGetProcAddress('glGenVertexArrays')
    glGetActiveAtomicCounterBufferiv = openglGetProcAddress('glGetActiveAtomicCounterBufferiv')
    glGetActiveAttribARB = openglGetProcAddress('glGetActiveAttribARB')
    glGetActiveAttrib = openglGetProcAddress('glGetActiveAttrib')
    glGetActiveSubroutineName = openglGetProcAddress('glGetActiveSubroutineName')
    glGetActiveSubroutineUniformiv = openglGetProcAddress('glGetActiveSubroutineUniformiv')
    glGetActiveSubroutineUniformName = openglGetProcAddress('glGetActiveSubroutineUniformName')
    glGetActiveUniformARB = openglGetProcAddress('glGetActiveUniformARB')
    glGetActiveUniformBlockiv = openglGetProcAddress('glGetActiveUniformBlockiv')
    glGetActiveUniformBlockName = openglGetProcAddress('glGetActiveUniformBlockName')
    glGetActiveUniformName = openglGetProcAddress('glGetActiveUniformName')
    glGetActiveUniform = openglGetProcAddress('glGetActiveUniform')
    glGetActiveUniformsiv = openglGetProcAddress('glGetActiveUniformsiv')
    glGetActiveVaryingNV = openglGetProcAddress('glGetActiveVaryingNV')
    glGetArrayObjectfvATI = openglGetProcAddress('glGetArrayObjectfvATI')
    glGetArrayObjectivATI = openglGetProcAddress('glGetArrayObjectivATI')
    glGetAttachedObjectsARB = openglGetProcAddress('glGetAttachedObjectsARB')
    glGetAttachedShaders = openglGetProcAddress('glGetAttachedShaders')
    glGetBooleanIndexedvEXT = openglGetProcAddress('glGetBooleanIndexedvEXT')
    glGetBooleani_v = openglGetProcAddress('glGetBooleani_v')
    glGetBufferParameteri64v = openglGetProcAddress('glGetBufferParameteri64v')
    glGetBufferParameterivARB = openglGetProcAddress('glGetBufferParameterivARB')
    glGetBufferParameteriv = openglGetProcAddress('glGetBufferParameteriv')
    glGetBufferParameterui64vNV = openglGetProcAddress('glGetBufferParameterui64vNV')
    glGetBufferPointervARB = openglGetProcAddress('glGetBufferPointervARB')
    glGetBufferPointerv = openglGetProcAddress('glGetBufferPointerv')
    glGetBufferSubDataARB = openglGetProcAddress('glGetBufferSubDataARB')
    glGetBufferSubData = openglGetProcAddress('glGetBufferSubData')
    glGetClipPlanefOES = openglGetProcAddress('glGetClipPlanefOES')
    glGetClipPlanef = openglGetProcAddress('glGetClipPlanef')
    glGetColorTableEXT = openglGetProcAddress('glGetColorTableEXT')
    glGetColorTableParameterfvEXT = openglGetProcAddress('glGetColorTableParameterfvEXT')
    glGetColorTableParameterfv = openglGetProcAddress('glGetColorTableParameterfv')
    glGetColorTableParameterfvSGI = openglGetProcAddress('glGetColorTableParameterfvSGI')
    glGetColorTableParameterivEXT = openglGetProcAddress('glGetColorTableParameterivEXT')
    glGetColorTableParameteriv = openglGetProcAddress('glGetColorTableParameteriv')
    glGetColorTableParameterivSGI = openglGetProcAddress('glGetColorTableParameterivSGI')
    glGetColorTable = openglGetProcAddress('glGetColorTable')
    glGetColorTableSGI = openglGetProcAddress('glGetColorTableSGI')
    glGetCombinerInputParameterfvNV = openglGetProcAddress('glGetCombinerInputParameterfvNV')
    glGetCombinerInputParameterivNV = openglGetProcAddress('glGetCombinerInputParameterivNV')
    glGetCombinerOutputParameterfvNV = openglGetProcAddress('glGetCombinerOutputParameterfvNV')
    glGetCombinerOutputParameterivNV = openglGetProcAddress('glGetCombinerOutputParameterivNV')
    glGetCombinerStageParameterfvNV = openglGetProcAddress('glGetCombinerStageParameterfvNV')
    glGetCompressedMultiTexImageEXT = openglGetProcAddress('glGetCompressedMultiTexImageEXT')
    glGetCompressedTexImageARB = openglGetProcAddress('glGetCompressedTexImageARB')
    glGetCompressedTexImage = openglGetProcAddress('glGetCompressedTexImage')
    glGetCompressedTextureImageEXT = openglGetProcAddress('glGetCompressedTextureImageEXT')
    glGetCompressedTextureImage = openglGetProcAddress('glGetCompressedTextureImage')
    glGetCompressedTextureSubImage = openglGetProcAddress('glGetCompressedTextureSubImage')
    glGetConvolutionFilterEXT = openglGetProcAddress('glGetConvolutionFilterEXT')
    glGetConvolutionFilter = openglGetProcAddress('glGetConvolutionFilter')
    glGetConvolutionParameterfvEXT = openglGetProcAddress('glGetConvolutionParameterfvEXT')
    glGetConvolutionParameterfv = openglGetProcAddress('glGetConvolutionParameterfv')
    glGetConvolutionParameterivEXT = openglGetProcAddress('glGetConvolutionParameterivEXT')
    glGetConvolutionParameteriv = openglGetProcAddress('glGetConvolutionParameteriv')
    glGetCoverageModulationTableNV = openglGetProcAddress('glGetCoverageModulationTableNV')
    glGetDetailTexFuncSGIS = openglGetProcAddress('glGetDetailTexFuncSGIS')
    glGetDoubleIndexedvEXT = openglGetProcAddress('glGetDoubleIndexedvEXT')
    glGetDoublei_vEXT = openglGetProcAddress('glGetDoublei_vEXT')
    glGetDoublei_v = openglGetProcAddress('glGetDoublei_v')
    glGetFenceivNV = openglGetProcAddress('glGetFenceivNV')
    glGetFinalCombinerInputParameterfvNV = openglGetProcAddress('glGetFinalCombinerInputParameterfvNV')
    glGetFinalCombinerInputParameterivNV = openglGetProcAddress('glGetFinalCombinerInputParameterivNV')
    glGetFirstPerfQueryIdINTEL = openglGetProcAddress('glGetFirstPerfQueryIdINTEL')
    glGetFixedv = openglGetProcAddress('glGetFixedv')
    glGetFloatIndexedvEXT = openglGetProcAddress('glGetFloatIndexedvEXT')
    glGetFloati_vEXT = openglGetProcAddress('glGetFloati_vEXT')
    glGetFloati_v = openglGetProcAddress('glGetFloati_v')
    glGetFogFuncSGIS = openglGetProcAddress('glGetFogFuncSGIS')
    glGetFragmentLightfvEXT = openglGetProcAddress('glGetFragmentLightfvEXT')
    glGetFragmentLightfvSGIX = openglGetProcAddress('glGetFragmentLightfvSGIX')
    glGetFragmentLightivEXT = openglGetProcAddress('glGetFragmentLightivEXT')
    glGetFragmentLightivSGIX = openglGetProcAddress('glGetFragmentLightivSGIX')
    glGetFragmentMaterialfvEXT = openglGetProcAddress('glGetFragmentMaterialfvEXT')
    glGetFragmentMaterialfvSGIX = openglGetProcAddress('glGetFragmentMaterialfvSGIX')
    glGetFragmentMaterialivEXT = openglGetProcAddress('glGetFragmentMaterialivEXT')
    glGetFragmentMaterialivSGIX = openglGetProcAddress('glGetFragmentMaterialivSGIX')
    glGetFramebufferAttachmentParameterivEXT = openglGetProcAddress('glGetFramebufferAttachmentParameterivEXT')
    glGetFramebufferAttachmentParameteriv = openglGetProcAddress('glGetFramebufferAttachmentParameteriv')
    glGetFramebufferParameterivEXT = openglGetProcAddress('glGetFramebufferParameterivEXT')
    glGetFramebufferParameteriv = openglGetProcAddress('glGetFramebufferParameteriv')
    glGetHistogramEXT = openglGetProcAddress('glGetHistogramEXT')
    glGetHistogramParameterfvEXT = openglGetProcAddress('glGetHistogramParameterfvEXT')
    glGetHistogramParameterfv = openglGetProcAddress('glGetHistogramParameterfv')
    glGetHistogramParameterivEXT = openglGetProcAddress('glGetHistogramParameterivEXT')
    glGetHistogramParameteriv = openglGetProcAddress('glGetHistogramParameteriv')
    glGetHistogram = openglGetProcAddress('glGetHistogram')
    glGetImageTransformParameterfvHP = openglGetProcAddress('glGetImageTransformParameterfvHP')
    glGetImageTransformParameterivHP = openglGetProcAddress('glGetImageTransformParameterivHP')
    glGetInfoLogARB = openglGetProcAddress('glGetInfoLogARB')
    glGetInteger64i_v = openglGetProcAddress('glGetInteger64i_v')
    glGetInteger64v = openglGetProcAddress('glGetInteger64v')
    glGetIntegerIndexedvEXT = openglGetProcAddress('glGetIntegerIndexedvEXT')
    glGetIntegeri_v = openglGetProcAddress('glGetIntegeri_v')
    glGetIntegerui64i_vNV = openglGetProcAddress('glGetIntegerui64i_vNV')
    glGetIntegerui64vNV = openglGetProcAddress('glGetIntegerui64vNV')
    glGetInternalformati64v = openglGetProcAddress('glGetInternalformati64v')
    glGetInternalformativ = openglGetProcAddress('glGetInternalformativ')
    glGetInternalformatSampleivNV = openglGetProcAddress('glGetInternalformatSampleivNV')
    glGetInvariantBooleanvEXT = openglGetProcAddress('glGetInvariantBooleanvEXT')
    glGetInvariantFloatvEXT = openglGetProcAddress('glGetInvariantFloatvEXT')
    glGetInvariantIntegervEXT = openglGetProcAddress('glGetInvariantIntegervEXT')
    glGetLightxv = openglGetProcAddress('glGetLightxv')
    glGetLocalConstantBooleanvEXT = openglGetProcAddress('glGetLocalConstantBooleanvEXT')
    glGetLocalConstantFloatvEXT = openglGetProcAddress('glGetLocalConstantFloatvEXT')
    glGetLocalConstantIntegervEXT = openglGetProcAddress('glGetLocalConstantIntegervEXT')
    glGetMapAttribParameterfvNV = openglGetProcAddress('glGetMapAttribParameterfvNV')
    glGetMapAttribParameterivNV = openglGetProcAddress('glGetMapAttribParameterivNV')
    glGetMapControlPointsNV = openglGetProcAddress('glGetMapControlPointsNV')
    glGetMapParameterfvNV = openglGetProcAddress('glGetMapParameterfvNV')
    glGetMapParameterivNV = openglGetProcAddress('glGetMapParameterivNV')
    glGetMaterialxv = openglGetProcAddress('glGetMaterialxv')
    glGetMinmaxEXT = openglGetProcAddress('glGetMinmaxEXT')
    glGetMinmaxParameterfvEXT = openglGetProcAddress('glGetMinmaxParameterfvEXT')
    glGetMinmaxParameterfv = openglGetProcAddress('glGetMinmaxParameterfv')
    glGetMinmaxParameterivEXT = openglGetProcAddress('glGetMinmaxParameterivEXT')
    glGetMinmaxParameteriv = openglGetProcAddress('glGetMinmaxParameteriv')
    glGetMinmax = openglGetProcAddress('glGetMinmax')
    glGetMultisamplefvNV = openglGetProcAddress('glGetMultisamplefvNV')
    glGetMultisamplefv = openglGetProcAddress('glGetMultisamplefv')
    glGetMultiTexEnvfvEXT = openglGetProcAddress('glGetMultiTexEnvfvEXT')
    glGetMultiTexEnvivEXT = openglGetProcAddress('glGetMultiTexEnvivEXT')
    glGetMultiTexGendvEXT = openglGetProcAddress('glGetMultiTexGendvEXT')
    glGetMultiTexGenfvEXT = openglGetProcAddress('glGetMultiTexGenfvEXT')
    glGetMultiTexGenivEXT = openglGetProcAddress('glGetMultiTexGenivEXT')
    glGetMultiTexImageEXT = openglGetProcAddress('glGetMultiTexImageEXT')
    glGetMultiTexLevelParameterfvEXT = openglGetProcAddress('glGetMultiTexLevelParameterfvEXT')
    glGetMultiTexLevelParameterivEXT = openglGetProcAddress('glGetMultiTexLevelParameterivEXT')
    glGetMultiTexParameterfvEXT = openglGetProcAddress('glGetMultiTexParameterfvEXT')
    glGetMultiTexParameterIivEXT = openglGetProcAddress('glGetMultiTexParameterIivEXT')
    glGetMultiTexParameterIuivEXT = openglGetProcAddress('glGetMultiTexParameterIuivEXT')
    glGetMultiTexParameterivEXT = openglGetProcAddress('glGetMultiTexParameterivEXT')
    glGetNamedBufferParameteri64v = openglGetProcAddress('glGetNamedBufferParameteri64v')
    glGetNamedBufferParameterivEXT = openglGetProcAddress('glGetNamedBufferParameterivEXT')
    glGetNamedBufferParameteriv = openglGetProcAddress('glGetNamedBufferParameteriv')
    glGetNamedBufferParameterui64vNV = openglGetProcAddress('glGetNamedBufferParameterui64vNV')
    glGetNamedBufferPointervEXT = openglGetProcAddress('glGetNamedBufferPointervEXT')
    glGetNamedBufferPointerv = openglGetProcAddress('glGetNamedBufferPointerv')
    glGetNamedBufferSubDataEXT = openglGetProcAddress('glGetNamedBufferSubDataEXT')
    glGetNamedBufferSubData = openglGetProcAddress('glGetNamedBufferSubData')
    glGetNamedFramebufferAttachmentParameterivEXT = openglGetProcAddress('glGetNamedFramebufferAttachmentParameterivEXT')
    glGetNamedFramebufferAttachmentParameteriv = openglGetProcAddress('glGetNamedFramebufferAttachmentParameteriv')
    glGetNamedFramebufferParameterivEXT = openglGetProcAddress('glGetNamedFramebufferParameterivEXT')
    glGetNamedFramebufferParameteriv = openglGetProcAddress('glGetNamedFramebufferParameteriv')
    glGetNamedProgramivEXT = openglGetProcAddress('glGetNamedProgramivEXT')
    glGetNamedProgramLocalParameterdvEXT = openglGetProcAddress('glGetNamedProgramLocalParameterdvEXT')
    glGetNamedProgramLocalParameterfvEXT = openglGetProcAddress('glGetNamedProgramLocalParameterfvEXT')
    glGetNamedProgramLocalParameterIivEXT = openglGetProcAddress('glGetNamedProgramLocalParameterIivEXT')
    glGetNamedProgramLocalParameterIuivEXT = openglGetProcAddress('glGetNamedProgramLocalParameterIuivEXT')
    glGetNamedProgramStringEXT = openglGetProcAddress('glGetNamedProgramStringEXT')
    glGetNamedRenderbufferParameterivEXT = openglGetProcAddress('glGetNamedRenderbufferParameterivEXT')
    glGetNamedRenderbufferParameteriv = openglGetProcAddress('glGetNamedRenderbufferParameteriv')
    glGetNamedStringARB = openglGetProcAddress('glGetNamedStringARB')
    glGetNamedStringivARB = openglGetProcAddress('glGetNamedStringivARB')
    glGetnColorTableARB = openglGetProcAddress('glGetnColorTableARB')
    glGetnCompressedTexImageARB = openglGetProcAddress('glGetnCompressedTexImageARB')
    glGetnCompressedTexImage = openglGetProcAddress('glGetnCompressedTexImage')
    glGetnConvolutionFilterARB = openglGetProcAddress('glGetnConvolutionFilterARB')
    glGetNextPerfQueryIdINTEL = openglGetProcAddress('glGetNextPerfQueryIdINTEL')
    glGetnHistogramARB = openglGetProcAddress('glGetnHistogramARB')
    glGetnMapdvARB = openglGetProcAddress('glGetnMapdvARB')
    glGetnMapfvARB = openglGetProcAddress('glGetnMapfvARB')
    glGetnMapivARB = openglGetProcAddress('glGetnMapivARB')
    glGetnMinmaxARB = openglGetProcAddress('glGetnMinmaxARB')
    glGetnPixelMapfvARB = openglGetProcAddress('glGetnPixelMapfvARB')
    glGetnPixelMapuivARB = openglGetProcAddress('glGetnPixelMapuivARB')
    glGetnPixelMapusvARB = openglGetProcAddress('glGetnPixelMapusvARB')
    glGetnPolygonStippleARB = openglGetProcAddress('glGetnPolygonStippleARB')
    glGetnSeparableFilterARB = openglGetProcAddress('glGetnSeparableFilterARB')
    glGetnTexImageARB = openglGetProcAddress('glGetnTexImageARB')
    glGetnTexImage = openglGetProcAddress('glGetnTexImage')
    glGetnUniformdvARB = openglGetProcAddress('glGetnUniformdvARB')
    glGetnUniformdv = openglGetProcAddress('glGetnUniformdv')
    glGetnUniformfvARB = openglGetProcAddress('glGetnUniformfvARB')
    glGetnUniformfv = openglGetProcAddress('glGetnUniformfv')
    glGetnUniformi64vARB = openglGetProcAddress('glGetnUniformi64vARB')
    glGetnUniformivARB = openglGetProcAddress('glGetnUniformivARB')
    glGetnUniformiv = openglGetProcAddress('glGetnUniformiv')
    glGetnUniformui64vARB = openglGetProcAddress('glGetnUniformui64vARB')
    glGetnUniformuivARB = openglGetProcAddress('glGetnUniformuivARB')
    glGetnUniformuiv = openglGetProcAddress('glGetnUniformuiv')
    glGetObjectBufferfvATI = openglGetProcAddress('glGetObjectBufferfvATI')
    glGetObjectBufferivATI = openglGetProcAddress('glGetObjectBufferivATI')
    glGetObjectLabelEXT = openglGetProcAddress('glGetObjectLabelEXT')
    glGetObjectLabel = openglGetProcAddress('glGetObjectLabel')
    glGetObjectParameterfvARB = openglGetProcAddress('glGetObjectParameterfvARB')
    glGetObjectParameterivAPPLE = openglGetProcAddress('glGetObjectParameterivAPPLE')
    glGetObjectParameterivARB = openglGetProcAddress('glGetObjectParameterivARB')
    glGetObjectPtrLabel = openglGetProcAddress('glGetObjectPtrLabel')
    glGetOcclusionQueryivNV = openglGetProcAddress('glGetOcclusionQueryivNV')
    glGetOcclusionQueryuivNV = openglGetProcAddress('glGetOcclusionQueryuivNV')
    glGetPathColorGenfvNV = openglGetProcAddress('glGetPathColorGenfvNV')
    glGetPathColorGenivNV = openglGetProcAddress('glGetPathColorGenivNV')
    glGetPathCommandsNV = openglGetProcAddress('glGetPathCommandsNV')
    glGetPathCoordsNV = openglGetProcAddress('glGetPathCoordsNV')
    glGetPathDashArrayNV = openglGetProcAddress('glGetPathDashArrayNV')
    glGetPathMetricRangeNV = openglGetProcAddress('glGetPathMetricRangeNV')
    glGetPathMetricsNV = openglGetProcAddress('glGetPathMetricsNV')
    glGetPathParameterfvNV = openglGetProcAddress('glGetPathParameterfvNV')
    glGetPathParameterivNV = openglGetProcAddress('glGetPathParameterivNV')
    glGetPathSpacingNV = openglGetProcAddress('glGetPathSpacingNV')
    glGetPathTexGenfvNV = openglGetProcAddress('glGetPathTexGenfvNV')
    glGetPathTexGenivNV = openglGetProcAddress('glGetPathTexGenivNV')
    glGetPerfCounterInfoINTEL = openglGetProcAddress('glGetPerfCounterInfoINTEL')
    glGetPerfMonitorCounterDataAMD = openglGetProcAddress('glGetPerfMonitorCounterDataAMD')
    glGetPerfMonitorCounterInfoAMD = openglGetProcAddress('glGetPerfMonitorCounterInfoAMD')
    glGetPerfMonitorCountersAMD = openglGetProcAddress('glGetPerfMonitorCountersAMD')
    glGetPerfMonitorCounterStringAMD = openglGetProcAddress('glGetPerfMonitorCounterStringAMD')
    glGetPerfMonitorGroupsAMD = openglGetProcAddress('glGetPerfMonitorGroupsAMD')
    glGetPerfMonitorGroupStringAMD = openglGetProcAddress('glGetPerfMonitorGroupStringAMD')
    glGetPerfQueryDataINTEL = openglGetProcAddress('glGetPerfQueryDataINTEL')
    glGetPerfQueryIdByNameINTEL = openglGetProcAddress('glGetPerfQueryIdByNameINTEL')
    glGetPerfQueryInfoINTEL = openglGetProcAddress('glGetPerfQueryInfoINTEL')
    glGetPixelTransformParameterfvEXT = openglGetProcAddress('glGetPixelTransformParameterfvEXT')
    glGetPixelTransformParameterivEXT = openglGetProcAddress('glGetPixelTransformParameterivEXT')
    glGetPointerIndexedvEXT = openglGetProcAddress('glGetPointerIndexedvEXT')
    glGetPointeri_vEXT = openglGetProcAddress('glGetPointeri_vEXT')
    glGetProgramBinary = openglGetProcAddress('glGetProgramBinary')
    glGetProgramEnvParameterdvARB = openglGetProcAddress('glGetProgramEnvParameterdvARB')
    glGetProgramEnvParameterfvARB = openglGetProcAddress('glGetProgramEnvParameterfvARB')
    glGetProgramInfoLog = openglGetProcAddress('glGetProgramInfoLog')
    glGetProgramInterfaceiv = openglGetProcAddress('glGetProgramInterfaceiv')
    glGetProgramivARB = openglGetProcAddress('glGetProgramivARB')
    glGetProgramivNV = openglGetProcAddress('glGetProgramivNV')
    glGetProgramiv = openglGetProcAddress('glGetProgramiv')
    glGetProgramLocalParameterdvARB = openglGetProcAddress('glGetProgramLocalParameterdvARB')
    glGetProgramLocalParameterfvARB = openglGetProcAddress('glGetProgramLocalParameterfvARB')
    glGetProgramNamedParameterdvNV = openglGetProcAddress('glGetProgramNamedParameterdvNV')
    glGetProgramNamedParameterfvNV = openglGetProcAddress('glGetProgramNamedParameterfvNV')
    glGetProgramParameterdvNV = openglGetProcAddress('glGetProgramParameterdvNV')
    glGetProgramParameterfvNV = openglGetProcAddress('glGetProgramParameterfvNV')
    glGetProgramPipelineInfoLog = openglGetProcAddress('glGetProgramPipelineInfoLog')
    glGetProgramPipelineiv = openglGetProcAddress('glGetProgramPipelineiv')
    glGetProgramResourcefvNV = openglGetProcAddress('glGetProgramResourcefvNV')
    glGetProgramResourceiv = openglGetProcAddress('glGetProgramResourceiv')
    glGetProgramResourceName = openglGetProcAddress('glGetProgramResourceName')
    glGetProgramStageiv = openglGetProcAddress('glGetProgramStageiv')
    glGetProgramStringARB = openglGetProcAddress('glGetProgramStringARB')
    glGetProgramStringNV = openglGetProcAddress('glGetProgramStringNV')
    glGetQueryBufferObjecti64v = openglGetProcAddress('glGetQueryBufferObjecti64v')
    glGetQueryBufferObjectiv = openglGetProcAddress('glGetQueryBufferObjectiv')
    glGetQueryBufferObjectui64v = openglGetProcAddress('glGetQueryBufferObjectui64v')
    glGetQueryBufferObjectuiv = openglGetProcAddress('glGetQueryBufferObjectuiv')
    glGetQueryIndexediv = openglGetProcAddress('glGetQueryIndexediv')
    glGetQueryivANGLE = openglGetProcAddress('glGetQueryivANGLE')
    glGetQueryivARB = openglGetProcAddress('glGetQueryivARB')
    glGetQueryiv = openglGetProcAddress('glGetQueryiv')
    glGetQueryObjecti64vANGLE = openglGetProcAddress('glGetQueryObjecti64vANGLE')
    glGetQueryObjecti64vEXT = openglGetProcAddress('glGetQueryObjecti64vEXT')
    glGetQueryObjecti64v = openglGetProcAddress('glGetQueryObjecti64v')
    glGetQueryObjectivANGLE = openglGetProcAddress('glGetQueryObjectivANGLE')
    glGetQueryObjectivARB = openglGetProcAddress('glGetQueryObjectivARB')
    glGetQueryObjectiv = openglGetProcAddress('glGetQueryObjectiv')
    glGetQueryObjectui64vANGLE = openglGetProcAddress('glGetQueryObjectui64vANGLE')
    glGetQueryObjectui64vEXT = openglGetProcAddress('glGetQueryObjectui64vEXT')
    glGetQueryObjectui64v = openglGetProcAddress('glGetQueryObjectui64v')
    glGetQueryObjectuivANGLE = openglGetProcAddress('glGetQueryObjectuivANGLE')
    glGetQueryObjectuivARB = openglGetProcAddress('glGetQueryObjectuivARB')
    glGetQueryObjectuiv = openglGetProcAddress('glGetQueryObjectuiv')
    glGetRenderbufferParameterivEXT = openglGetProcAddress('glGetRenderbufferParameterivEXT')
    glGetRenderbufferParameteriv = openglGetProcAddress('glGetRenderbufferParameteriv')
    glGetSamplerParameterfv = openglGetProcAddress('glGetSamplerParameterfv')
    glGetSamplerParameterIiv = openglGetProcAddress('glGetSamplerParameterIiv')
    glGetSamplerParameterIuiv = openglGetProcAddress('glGetSamplerParameterIuiv')
    glGetSamplerParameteriv = openglGetProcAddress('glGetSamplerParameteriv')
    glGetSeparableFilterEXT = openglGetProcAddress('glGetSeparableFilterEXT')
    glGetSeparableFilter = openglGetProcAddress('glGetSeparableFilter')
    glGetShaderInfoLog = openglGetProcAddress('glGetShaderInfoLog')
    glGetShaderiv = openglGetProcAddress('glGetShaderiv')
    glGetShaderPrecisionFormat = openglGetProcAddress('glGetShaderPrecisionFormat')
    glGetShaderSourceARB = openglGetProcAddress('glGetShaderSourceARB')
    glGetShaderSource = openglGetProcAddress('glGetShaderSource')
    glGetSharpenTexFuncSGIS = openglGetProcAddress('glGetSharpenTexFuncSGIS')
    glGetSynciv = openglGetProcAddress('glGetSynciv')
    glGetTexBumpParameterfvATI = openglGetProcAddress('glGetTexBumpParameterfvATI')
    glGetTexBumpParameterivATI = openglGetProcAddress('glGetTexBumpParameterivATI')
    glGetTexEnvxv = openglGetProcAddress('glGetTexEnvxv')
    glGetTexFilterFuncSGIS = openglGetProcAddress('glGetTexFilterFuncSGIS')
    glGetTexParameterIivEXT = openglGetProcAddress('glGetTexParameterIivEXT')
    glGetTexParameterIiv = openglGetProcAddress('glGetTexParameterIiv')
    glGetTexParameterIuivEXT = openglGetProcAddress('glGetTexParameterIuivEXT')
    glGetTexParameterIuiv = openglGetProcAddress('glGetTexParameterIuiv')
    glGetTexParameterPointervAPPLE = openglGetProcAddress('glGetTexParameterPointervAPPLE')
    glGetTexParameterxv = openglGetProcAddress('glGetTexParameterxv')
    glGetTextureImageEXT = openglGetProcAddress('glGetTextureImageEXT')
    glGetTextureImage = openglGetProcAddress('glGetTextureImage')
    glGetTextureLevelParameterfvEXT = openglGetProcAddress('glGetTextureLevelParameterfvEXT')
    glGetTextureLevelParameterfv = openglGetProcAddress('glGetTextureLevelParameterfv')
    glGetTextureLevelParameterivEXT = openglGetProcAddress('glGetTextureLevelParameterivEXT')
    glGetTextureLevelParameteriv = openglGetProcAddress('glGetTextureLevelParameteriv')
    glGetTextureParameterfvEXT = openglGetProcAddress('glGetTextureParameterfvEXT')
    glGetTextureParameterfv = openglGetProcAddress('glGetTextureParameterfv')
    glGetTextureParameterIivEXT = openglGetProcAddress('glGetTextureParameterIivEXT')
    glGetTextureParameterIiv = openglGetProcAddress('glGetTextureParameterIiv')
    glGetTextureParameterIuivEXT = openglGetProcAddress('glGetTextureParameterIuivEXT')
    glGetTextureParameterIuiv = openglGetProcAddress('glGetTextureParameterIuiv')
    glGetTextureParameterivEXT = openglGetProcAddress('glGetTextureParameterivEXT')
    glGetTextureParameteriv = openglGetProcAddress('glGetTextureParameteriv')
    glGetTextureSubImage = openglGetProcAddress('glGetTextureSubImage')
    glGetTrackMatrixivNV = openglGetProcAddress('glGetTrackMatrixivNV')
    glGetTransformFeedbacki64_v = openglGetProcAddress('glGetTransformFeedbacki64_v')
    glGetTransformFeedbackiv = openglGetProcAddress('glGetTransformFeedbackiv')
    glGetTransformFeedbacki_v = openglGetProcAddress('glGetTransformFeedbacki_v')
    glGetTransformFeedbackVaryingEXT = openglGetProcAddress('glGetTransformFeedbackVaryingEXT')
    glGetTransformFeedbackVaryingNV = openglGetProcAddress('glGetTransformFeedbackVaryingNV')
    glGetTransformFeedbackVarying = openglGetProcAddress('glGetTransformFeedbackVarying')
    glGetTranslatedShaderSourceANGLE = openglGetProcAddress('glGetTranslatedShaderSourceANGLE')
    glGetUniformLocation = openglGetProcAddress('glGetUniformLocation')
    glGetUniformdv = openglGetProcAddress('glGetUniformdv')
    glGetUniformfvARB = openglGetProcAddress('glGetUniformfvARB')
    glGetUniformfv = openglGetProcAddress('glGetUniformfv')
    glGetUniformi64vARB = openglGetProcAddress('glGetUniformi64vARB')
    glGetUniformi64vNV = openglGetProcAddress('glGetUniformi64vNV')
    glGetUniformIndices = openglGetProcAddress('glGetUniformIndices')
    glGetUniformivARB = openglGetProcAddress('glGetUniformivARB')
    glGetUniformiv = openglGetProcAddress('glGetUniformiv')
    glGetUniformSubroutineuiv = openglGetProcAddress('glGetUniformSubroutineuiv')
    glGetUniformui64vARB = openglGetProcAddress('glGetUniformui64vARB')
    glGetUniformui64vNV = openglGetProcAddress('glGetUniformui64vNV')
    glGetUniformuivEXT = openglGetProcAddress('glGetUniformuivEXT')
    glGetUniformuiv = openglGetProcAddress('glGetUniformuiv')
    glGetVariantArrayObjectfvATI = openglGetProcAddress('glGetVariantArrayObjectfvATI')
    glGetVariantArrayObjectivATI = openglGetProcAddress('glGetVariantArrayObjectivATI')
    glGetVariantBooleanvEXT = openglGetProcAddress('glGetVariantBooleanvEXT')
    glGetVariantFloatvEXT = openglGetProcAddress('glGetVariantFloatvEXT')
    glGetVariantIntegervEXT = openglGetProcAddress('glGetVariantIntegervEXT')
    glGetVariantPointervEXT = openglGetProcAddress('glGetVariantPointervEXT')
    glGetVertexArrayIndexed64iv = openglGetProcAddress('glGetVertexArrayIndexed64iv')
    glGetVertexArrayIndexediv = openglGetProcAddress('glGetVertexArrayIndexediv')
    glGetVertexArrayIntegeri_vEXT = openglGetProcAddress('glGetVertexArrayIntegeri_vEXT')
    glGetVertexArrayIntegervEXT = openglGetProcAddress('glGetVertexArrayIntegervEXT')
    glGetVertexArrayiv = openglGetProcAddress('glGetVertexArrayiv')
    glGetVertexArrayPointeri_vEXT = openglGetProcAddress('glGetVertexArrayPointeri_vEXT')
    glGetVertexArrayPointervEXT = openglGetProcAddress('glGetVertexArrayPointervEXT')
    glGetVertexAttribArrayObjectfvATI = openglGetProcAddress('glGetVertexAttribArrayObjectfvATI')
    glGetVertexAttribArrayObjectivATI = openglGetProcAddress('glGetVertexAttribArrayObjectivATI')
    glGetVertexAttribdvARB = openglGetProcAddress('glGetVertexAttribdvARB')
    glGetVertexAttribdvNV = openglGetProcAddress('glGetVertexAttribdvNV')
    glGetVertexAttribdv = openglGetProcAddress('glGetVertexAttribdv')
    glGetVertexAttribfvARB = openglGetProcAddress('glGetVertexAttribfvARB')
    glGetVertexAttribfvNV = openglGetProcAddress('glGetVertexAttribfvNV')
    glGetVertexAttribfv = openglGetProcAddress('glGetVertexAttribfv')
    glGetVertexAttribIivEXT = openglGetProcAddress('glGetVertexAttribIivEXT')
    glGetVertexAttribIiv = openglGetProcAddress('glGetVertexAttribIiv')
    glGetVertexAttribIuivEXT = openglGetProcAddress('glGetVertexAttribIuivEXT')
    glGetVertexAttribIuiv = openglGetProcAddress('glGetVertexAttribIuiv')
    glGetVertexAttribivARB = openglGetProcAddress('glGetVertexAttribivARB')
    glGetVertexAttribivNV = openglGetProcAddress('glGetVertexAttribivNV')
    glGetVertexAttribiv = openglGetProcAddress('glGetVertexAttribiv')
    glGetVertexAttribLdvEXT = openglGetProcAddress('glGetVertexAttribLdvEXT')
    glGetVertexAttribLdv = openglGetProcAddress('glGetVertexAttribLdv')
    glGetVertexAttribLi64vNV = openglGetProcAddress('glGetVertexAttribLi64vNV')
    glGetVertexAttribLui64vARB = openglGetProcAddress('glGetVertexAttribLui64vARB')
    glGetVertexAttribLui64vNV = openglGetProcAddress('glGetVertexAttribLui64vNV')
    glGetVertexAttribPointervARB = openglGetProcAddress('glGetVertexAttribPointervARB')
    glGetVertexAttribPointervNV = openglGetProcAddress('glGetVertexAttribPointervNV')
    glGetVertexAttribPointerv = openglGetProcAddress('glGetVertexAttribPointerv')
    glGetVideoCaptureivNV = openglGetProcAddress('glGetVideoCaptureivNV')
    glGetVideoCaptureStreamdvNV = openglGetProcAddress('glGetVideoCaptureStreamdvNV')
    glGetVideoCaptureStreamfvNV = openglGetProcAddress('glGetVideoCaptureStreamfvNV')
    glGetVideoCaptureStreamivNV = openglGetProcAddress('glGetVideoCaptureStreamivNV')
    glGetVideoi64vNV = openglGetProcAddress('glGetVideoi64vNV')
    glGetVideoivNV = openglGetProcAddress('glGetVideoivNV')
    glGetVideoui64vNV = openglGetProcAddress('glGetVideoui64vNV')
    glGetVideouivNV = openglGetProcAddress('glGetVideouivNV')
    glGlobalAlphaFactorbSUN = openglGetProcAddress('glGlobalAlphaFactorbSUN')
    glGlobalAlphaFactordSUN = openglGetProcAddress('glGlobalAlphaFactordSUN')
    glGlobalAlphaFactorfSUN = openglGetProcAddress('glGlobalAlphaFactorfSUN')
    glGlobalAlphaFactoriSUN = openglGetProcAddress('glGlobalAlphaFactoriSUN')
    glGlobalAlphaFactorsSUN = openglGetProcAddress('glGlobalAlphaFactorsSUN')
    glGlobalAlphaFactorubSUN = openglGetProcAddress('glGlobalAlphaFactorubSUN')
    glGlobalAlphaFactoruiSUN = openglGetProcAddress('glGlobalAlphaFactoruiSUN')
    glGlobalAlphaFactorusSUN = openglGetProcAddress('glGlobalAlphaFactorusSUN')
    glHistogramEXT = openglGetProcAddress('glHistogramEXT')
    glHistogram = openglGetProcAddress('glHistogram')
    glImageTransformParameterfHP = openglGetProcAddress('glImageTransformParameterfHP')
    glImageTransformParameterfvHP = openglGetProcAddress('glImageTransformParameterfvHP')
    glImageTransformParameteriHP = openglGetProcAddress('glImageTransformParameteriHP')
    glImageTransformParameterivHP = openglGetProcAddress('glImageTransformParameterivHP')
    glIndexFuncEXT = openglGetProcAddress('glIndexFuncEXT')
    glIndexMaterialEXT = openglGetProcAddress('glIndexMaterialEXT')
    glIndexPointerEXT = openglGetProcAddress('glIndexPointerEXT')
    glIndexPointerListIBM = openglGetProcAddress('glIndexPointerListIBM')
    glInsertComponentEXT = openglGetProcAddress('glInsertComponentEXT')
    glInsertEventMarkerEXT = openglGetProcAddress('glInsertEventMarkerEXT')
    glInterpolatePathsNV = openglGetProcAddress('glInterpolatePathsNV')
    glInvalidateBufferData = openglGetProcAddress('glInvalidateBufferData')
    glInvalidateBufferSubData = openglGetProcAddress('glInvalidateBufferSubData')
    glInvalidateFramebuffer = openglGetProcAddress('glInvalidateFramebuffer')
    glInvalidateNamedFramebufferData = openglGetProcAddress('glInvalidateNamedFramebufferData')
    glInvalidateNamedFramebufferSubData = openglGetProcAddress('glInvalidateNamedFramebufferSubData')
    glInvalidateSubFramebuffer = openglGetProcAddress('glInvalidateSubFramebuffer')
    glInvalidateTexImage = openglGetProcAddress('glInvalidateTexImage')
    glInvalidateTexSubImage = openglGetProcAddress('glInvalidateTexSubImage')
    glLabelObjectEXT = openglGetProcAddress('glLabelObjectEXT')
    glLightEnviEXT = openglGetProcAddress('glLightEnviEXT')
    glLightModelx = openglGetProcAddress('glLightModelx')
    glLightModelxv = openglGetProcAddress('glLightModelxv')
    glLightx = openglGetProcAddress('glLightx')
    glLightxv = openglGetProcAddress('glLightxv')
    glLineWidthx = openglGetProcAddress('glLineWidthx')
    glLinkProgramARB = openglGetProcAddress('glLinkProgramARB')
    glLinkProgram = openglGetProcAddress('glLinkProgram')
    glLoadMatrixx = openglGetProcAddress('glLoadMatrixx')
    glLoadProgramNV = openglGetProcAddress('glLoadProgramNV')
    glLoadTransposeMatrixdARB = openglGetProcAddress('glLoadTransposeMatrixdARB')
    glLoadTransposeMatrixd = openglGetProcAddress('glLoadTransposeMatrixd')
    glLockArraysEXT = openglGetProcAddress('glLockArraysEXT')
    glLogMessageCallbackREGAL = openglGetProcAddress('glLogMessageCallbackREGAL')
    glMakeBufferNonResidentNV = openglGetProcAddress('glMakeBufferNonResidentNV')
    glMakeBufferResidentNV = openglGetProcAddress('glMakeBufferResidentNV')
    glMakeImageHandleNonResidentARB = openglGetProcAddress('glMakeImageHandleNonResidentARB')
    glMakeImageHandleNonResidentNV = openglGetProcAddress('glMakeImageHandleNonResidentNV')
    glMakeImageHandleResidentARB = openglGetProcAddress('glMakeImageHandleResidentARB')
    glMakeImageHandleResidentNV = openglGetProcAddress('glMakeImageHandleResidentNV')
    glMakeNamedBufferNonResidentNV = openglGetProcAddress('glMakeNamedBufferNonResidentNV')
    glMakeNamedBufferResidentNV = openglGetProcAddress('glMakeNamedBufferResidentNV')
    glMakeTextureHandleNonResidentARB = openglGetProcAddress('glMakeTextureHandleNonResidentARB')
    glMakeTextureHandleNonResidentNV = openglGetProcAddress('glMakeTextureHandleNonResidentNV')
    glMakeTextureHandleResidentARB = openglGetProcAddress('glMakeTextureHandleResidentARB')
    glMakeTextureHandleResidentNV = openglGetProcAddress('glMakeTextureHandleResidentNV')
    glMapControlPointsNV = openglGetProcAddress('glMapControlPointsNV')
    glMapParameterfvNV = openglGetProcAddress('glMapParameterfvNV')
    glMapParameterivNV = openglGetProcAddress('glMapParameterivNV')
    glMapVertexAttrib1dAPPLE = openglGetProcAddress('glMapVertexAttrib1dAPPLE')
    glMapVertexAttrib1fAPPLE = openglGetProcAddress('glMapVertexAttrib1fAPPLE')
    glMapVertexAttrib2dAPPLE = openglGetProcAddress('glMapVertexAttrib2dAPPLE')
    glMapVertexAttrib2fAPPLE = openglGetProcAddress('glMapVertexAttrib2fAPPLE')
    glMaterialx = openglGetProcAddress('glMaterialx')
    glMaterialxv = openglGetProcAddress('glMaterialxv')
    glMatrixFrustumEXT = openglGetProcAddress('glMatrixFrustumEXT')
    glMatrixIndexPointerARB = openglGetProcAddress('glMatrixIndexPointerARB')
    glMatrixIndexubvARB = openglGetProcAddress('glMatrixIndexubvARB')
    glMatrixIndexuivARB = openglGetProcAddress('glMatrixIndexuivARB')
    glMatrixIndexusvARB = openglGetProcAddress('glMatrixIndexusvARB')
    glMatrixLoad3x2fNV = openglGetProcAddress('glMatrixLoad3x2fNV')
    glMatrixLoad3x3fNV = openglGetProcAddress('glMatrixLoad3x3fNV')
    glMatrixLoaddEXT = openglGetProcAddress('glMatrixLoaddEXT')
    glMatrixLoadfEXT = openglGetProcAddress('glMatrixLoadfEXT')
    glMatrixLoadIdentityEXT = openglGetProcAddress('glMatrixLoadIdentityEXT')
    glMatrixLoadTranspose3x3fNV = openglGetProcAddress('glMatrixLoadTranspose3x3fNV')
    glMatrixLoadTransposedEXT = openglGetProcAddress('glMatrixLoadTransposedEXT')
    glMatrixLoadTransposefEXT = openglGetProcAddress('glMatrixLoadTransposefEXT')
    glMatrixMult3x2fNV = openglGetProcAddress('glMatrixMult3x2fNV')
    glMatrixMult3x3fNV = openglGetProcAddress('glMatrixMult3x3fNV')
    glMatrixMultdEXT = openglGetProcAddress('glMatrixMultdEXT')
    glMatrixMultfEXT = openglGetProcAddress('glMatrixMultfEXT')
    glMatrixMultTranspose3x3fNV = openglGetProcAddress('glMatrixMultTranspose3x3fNV')
    glMatrixMultTransposedEXT = openglGetProcAddress('glMatrixMultTransposedEXT')
    glMatrixMultTransposefEXT = openglGetProcAddress('glMatrixMultTransposefEXT')
    glMatrixOrthoEXT = openglGetProcAddress('glMatrixOrthoEXT')
    glMatrixPopEXT = openglGetProcAddress('glMatrixPopEXT')
    glMatrixPushEXT = openglGetProcAddress('glMatrixPushEXT')
    glMatrixRotatedEXT = openglGetProcAddress('glMatrixRotatedEXT')
    glMatrixRotatefEXT = openglGetProcAddress('glMatrixRotatefEXT')
    glMatrixScaledEXT = openglGetProcAddress('glMatrixScaledEXT')
    glMatrixScalefEXT = openglGetProcAddress('glMatrixScalefEXT')
    glMatrixTranslatedEXT = openglGetProcAddress('glMatrixTranslatedEXT')
    glMatrixTranslatefEXT = openglGetProcAddress('glMatrixTranslatefEXT')
    glMaxShaderCompilerThreadsARB = openglGetProcAddress('glMaxShaderCompilerThreadsARB')
    glMemoryBarrierByRegion = openglGetProcAddress('glMemoryBarrierByRegion')
    glMemoryBarrierEXT = openglGetProcAddress('glMemoryBarrierEXT')
    glMemoryBarrier = openglGetProcAddress('glMemoryBarrier')
    glMinmaxEXT = openglGetProcAddress('glMinmaxEXT')
    glMinmax = openglGetProcAddress('glMinmax')
    glMinSampleShadingARB = openglGetProcAddress('glMinSampleShadingARB')
    glMinSampleShading = openglGetProcAddress('glMinSampleShading')
    glMultiDrawArraysEXT = openglGetProcAddress('glMultiDrawArraysEXT')
    glMultiDrawArraysIndirectAMD = openglGetProcAddress('glMultiDrawArraysIndirectAMD')
    glMultiDrawArraysIndirectBindlessCountNV = openglGetProcAddress('glMultiDrawArraysIndirectBindlessCountNV')
    glMultiDrawArraysIndirectBindlessNV = openglGetProcAddress('glMultiDrawArraysIndirectBindlessNV')
    glMultiDrawArraysIndirectCountARB = openglGetProcAddress('glMultiDrawArraysIndirectCountARB')
    glMultiDrawArraysIndirect = openglGetProcAddress('glMultiDrawArraysIndirect')
    glMultiDrawArrays = openglGetProcAddress('glMultiDrawArrays')
    glMultiDrawElementArrayAPPLE = openglGetProcAddress('glMultiDrawElementArrayAPPLE')
    glMultiDrawElementsBaseVertex = openglGetProcAddress('glMultiDrawElementsBaseVertex')
    glMultiDrawElementsEXT = openglGetProcAddress('glMultiDrawElementsEXT')
    glMultiDrawElementsIndirectAMD = openglGetProcAddress('glMultiDrawElementsIndirectAMD')
    glMultiDrawElementsIndirectBindlessCountNV = openglGetProcAddress('glMultiDrawElementsIndirectBindlessCountNV')
    glMultiDrawElementsIndirectBindlessNV = openglGetProcAddress('glMultiDrawElementsIndirectBindlessNV')
    glMultiDrawElementsIndirectCountARB = openglGetProcAddress('glMultiDrawElementsIndirectCountARB')
    glMultiDrawElementsIndirect = openglGetProcAddress('glMultiDrawElementsIndirect')
    glMultiDrawElements = openglGetProcAddress('glMultiDrawElements')
    glMultiDrawRangeElementArrayAPPLE = openglGetProcAddress('glMultiDrawRangeElementArrayAPPLE')
    glMultiModeDrawArraysIBM = openglGetProcAddress('glMultiModeDrawArraysIBM')
    glMultiModeDrawElementsIBM = openglGetProcAddress('glMultiModeDrawElementsIBM')
    glMultiTexBufferEXT = openglGetProcAddress('glMultiTexBufferEXT')
    glMultiTexCoord1dARB = openglGetProcAddress('glMultiTexCoord1dARB')
    glMultiTexCoord1d = openglGetProcAddress('glMultiTexCoord1d')
    glMultiTexCoord1dvARB = openglGetProcAddress('glMultiTexCoord1dvARB')
    glMultiTexCoord1dv = openglGetProcAddress('glMultiTexCoord1dv')
    glMultiTexCoord1fARB = openglGetProcAddress('glMultiTexCoord1fARB')
    glMultiTexCoord1f = openglGetProcAddress('glMultiTexCoord1f')
    glMultiTexCoord1fvARB = openglGetProcAddress('glMultiTexCoord1fvARB')
    glMultiTexCoord1fv = openglGetProcAddress('glMultiTexCoord1fv')
    glMultiTexCoord1hNV = openglGetProcAddress('glMultiTexCoord1hNV')
    glMultiTexCoord1hvNV = openglGetProcAddress('glMultiTexCoord1hvNV')
    glMultiTexCoord1iARB = openglGetProcAddress('glMultiTexCoord1iARB')
    glMultiTexCoord1i = openglGetProcAddress('glMultiTexCoord1i')
    glMultiTexCoord1ivARB = openglGetProcAddress('glMultiTexCoord1ivARB')
    glMultiTexCoord1iv = openglGetProcAddress('glMultiTexCoord1iv')
    glMultiTexCoord1sARB = openglGetProcAddress('glMultiTexCoord1sARB')
    glMultiTexCoord1s = openglGetProcAddress('glMultiTexCoord1s')
    glMultiTexCoord1svARB = openglGetProcAddress('glMultiTexCoord1svARB')
    glMultiTexCoord1sv = openglGetProcAddress('glMultiTexCoord1sv')
    glMultiTexCoord2dARB = openglGetProcAddress('glMultiTexCoord2dARB')
    glMultiTexCoord2d = openglGetProcAddress('glMultiTexCoord2d')
    glMultiTexCoord2dvARB = openglGetProcAddress('glMultiTexCoord2dvARB')
    glMultiTexCoord2dv = openglGetProcAddress('glMultiTexCoord2dv')
    glMultiTexCoord2fARB = openglGetProcAddress('glMultiTexCoord2fARB')
    glMultiTexCoord2f = openglGetProcAddress('glMultiTexCoord2f')
    glMultiTexCoord2fvARB = openglGetProcAddress('glMultiTexCoord2fvARB')
    glMultiTexCoord2fv = openglGetProcAddress('glMultiTexCoord2fv')
    glMultiTexCoord2hNV = openglGetProcAddress('glMultiTexCoord2hNV')
    glMultiTexCoord2hvNV = openglGetProcAddress('glMultiTexCoord2hvNV')
    glMultiTexCoord2iARB = openglGetProcAddress('glMultiTexCoord2iARB')
    glMultiTexCoord2i = openglGetProcAddress('glMultiTexCoord2i')
    glMultiTexCoord2ivARB = openglGetProcAddress('glMultiTexCoord2ivARB')
    glMultiTexCoord2iv = openglGetProcAddress('glMultiTexCoord2iv')
    glMultiTexCoord2sARB = openglGetProcAddress('glMultiTexCoord2sARB')
    glMultiTexCoord2s = openglGetProcAddress('glMultiTexCoord2s')
    glMultiTexCoord2svARB = openglGetProcAddress('glMultiTexCoord2svARB')
    glMultiTexCoord2sv = openglGetProcAddress('glMultiTexCoord2sv')
    glMultiTexCoord3dARB = openglGetProcAddress('glMultiTexCoord3dARB')
    glMultiTexCoord3d = openglGetProcAddress('glMultiTexCoord3d')
    glMultiTexCoord3dvARB = openglGetProcAddress('glMultiTexCoord3dvARB')
    glMultiTexCoord3dv = openglGetProcAddress('glMultiTexCoord3dv')
    glMultiTexCoord3fARB = openglGetProcAddress('glMultiTexCoord3fARB')
    glMultiTexCoord3f = openglGetProcAddress('glMultiTexCoord3f')
    glMultiTexCoord3fvARB = openglGetProcAddress('glMultiTexCoord3fvARB')
    glMultiTexCoord3fv = openglGetProcAddress('glMultiTexCoord3fv')
    glMultiTexCoord3hNV = openglGetProcAddress('glMultiTexCoord3hNV')
    glMultiTexCoord3hvNV = openglGetProcAddress('glMultiTexCoord3hvNV')
    glMultiTexCoord3iARB = openglGetProcAddress('glMultiTexCoord3iARB')
    glMultiTexCoord3i = openglGetProcAddress('glMultiTexCoord3i')
    glMultiTexCoord3ivARB = openglGetProcAddress('glMultiTexCoord3ivARB')
    glMultiTexCoord3iv = openglGetProcAddress('glMultiTexCoord3iv')
    glMultiTexCoord3sARB = openglGetProcAddress('glMultiTexCoord3sARB')
    glMultiTexCoord3s = openglGetProcAddress('glMultiTexCoord3s')
    glMultiTexCoord3svARB = openglGetProcAddress('glMultiTexCoord3svARB')
    glMultiTexCoord3sv = openglGetProcAddress('glMultiTexCoord3sv')
    glMultiTexCoord4dARB = openglGetProcAddress('glMultiTexCoord4dARB')
    glMultiTexCoord4d = openglGetProcAddress('glMultiTexCoord4d')
    glMultiTexCoord4dvARB = openglGetProcAddress('glMultiTexCoord4dvARB')
    glMultiTexCoord4dv = openglGetProcAddress('glMultiTexCoord4dv')
    glMultiTexCoord4fARB = openglGetProcAddress('glMultiTexCoord4fARB')
    glMultiTexCoord4f = openglGetProcAddress('glMultiTexCoord4f')
    glMultiTexCoord4fvARB = openglGetProcAddress('glMultiTexCoord4fvARB')
    glMultiTexCoord4fv = openglGetProcAddress('glMultiTexCoord4fv')
    glMultiTexCoord4hNV = openglGetProcAddress('glMultiTexCoord4hNV')
    glMultiTexCoord4hvNV = openglGetProcAddress('glMultiTexCoord4hvNV')
    glMultiTexCoord4iARB = openglGetProcAddress('glMultiTexCoord4iARB')
    glMultiTexCoord4i = openglGetProcAddress('glMultiTexCoord4i')
    glMultiTexCoord4ivARB = openglGetProcAddress('glMultiTexCoord4ivARB')
    glMultiTexCoord4iv = openglGetProcAddress('glMultiTexCoord4iv')
    glMultiTexCoord4sARB = openglGetProcAddress('glMultiTexCoord4sARB')
    glMultiTexCoord4s = openglGetProcAddress('glMultiTexCoord4s')
    glMultiTexCoord4svARB = openglGetProcAddress('glMultiTexCoord4svARB')
    glMultiTexCoord4sv = openglGetProcAddress('glMultiTexCoord4sv')
    glMultiTexCoord4x = openglGetProcAddress('glMultiTexCoord4x')
    glMultiTexCoordP1ui = openglGetProcAddress('glMultiTexCoordP1ui')
    glMultiTexCoordP1uiv = openglGetProcAddress('glMultiTexCoordP1uiv')
    glMultiTexCoordP2ui = openglGetProcAddress('glMultiTexCoordP2ui')
    glMultiTexCoordP2uiv = openglGetProcAddress('glMultiTexCoordP2uiv')
    glMultiTexCoordP3ui = openglGetProcAddress('glMultiTexCoordP3ui')
    glMultiTexCoordP3uiv = openglGetProcAddress('glMultiTexCoordP3uiv')
    glMultiTexCoordP4ui = openglGetProcAddress('glMultiTexCoordP4ui')
    glMultiTexCoordP4uiv = openglGetProcAddress('glMultiTexCoordP4uiv')
    glMultiTexCoordPointerEXT = openglGetProcAddress('glMultiTexCoordPointerEXT')
    glMultiTexEnvfEXT = openglGetProcAddress('glMultiTexEnvfEXT')
    glMultiTexEnvfvEXT = openglGetProcAddress('glMultiTexEnvfvEXT')
    glMultiTexEnviEXT = openglGetProcAddress('glMultiTexEnviEXT')
    glMultiTexEnvivEXT = openglGetProcAddress('glMultiTexEnvivEXT')
    glMultiTexGendEXT = openglGetProcAddress('glMultiTexGendEXT')
    glMultiTexGendvEXT = openglGetProcAddress('glMultiTexGendvEXT')
    glMultiTexGenfEXT = openglGetProcAddress('glMultiTexGenfEXT')
    glMultiTexGenfvEXT = openglGetProcAddress('glMultiTexGenfvEXT')
    glMultiTexGeniEXT = openglGetProcAddress('glMultiTexGeniEXT')
    glMultiTexGenivEXT = openglGetProcAddress('glMultiTexGenivEXT')
    glMultiTexImage1DEXT = openglGetProcAddress('glMultiTexImage1DEXT')
    glMultiTexImage2DEXT = openglGetProcAddress('glMultiTexImage2DEXT')
    glMultiTexImage3DEXT = openglGetProcAddress('glMultiTexImage3DEXT')
    glMultiTexParameterfEXT = openglGetProcAddress('glMultiTexParameterfEXT')
    glMultiTexParameterfvEXT = openglGetProcAddress('glMultiTexParameterfvEXT')
    glMultiTexParameteriEXT = openglGetProcAddress('glMultiTexParameteriEXT')
    glMultiTexParameterIivEXT = openglGetProcAddress('glMultiTexParameterIivEXT')
    glMultiTexParameterIuivEXT = openglGetProcAddress('glMultiTexParameterIuivEXT')
    glMultiTexParameterivEXT = openglGetProcAddress('glMultiTexParameterivEXT')
    glMultiTexRenderbufferEXT = openglGetProcAddress('glMultiTexRenderbufferEXT')
    glMultiTexSubImage1DEXT = openglGetProcAddress('glMultiTexSubImage1DEXT')
    glMultiTexSubImage2DEXT = openglGetProcAddress('glMultiTexSubImage2DEXT')
    glMultiTexSubImage3DEXT = openglGetProcAddress('glMultiTexSubImage3DEXT')
    glMultMatrixx = openglGetProcAddress('glMultMatrixx')
    glMultTransposeMatrixdARB = openglGetProcAddress('glMultTransposeMatrixdARB')
    glMultTransposeMatrixd = openglGetProcAddress('glMultTransposeMatrixd')
    glNamedBufferDataEXT = openglGetProcAddress('glNamedBufferDataEXT')
    glNamedBufferData = openglGetProcAddress('glNamedBufferData')
    glNamedBufferStorageEXT = openglGetProcAddress('glNamedBufferStorageEXT')
    glNamedBufferStorage = openglGetProcAddress('glNamedBufferStorage')
    glNamedBufferSubDataEXT = openglGetProcAddress('glNamedBufferSubDataEXT')
    glNamedBufferSubData = openglGetProcAddress('glNamedBufferSubData')
    glNamedCopyBufferSubDataEXT = openglGetProcAddress('glNamedCopyBufferSubDataEXT')
    glNamedFramebufferDrawBuffer = openglGetProcAddress('glNamedFramebufferDrawBuffer')
    glNamedFramebufferDrawBuffers = openglGetProcAddress('glNamedFramebufferDrawBuffers')
    glNamedFramebufferParameteriEXT = openglGetProcAddress('glNamedFramebufferParameteriEXT')
    glNamedFramebufferParameteri = openglGetProcAddress('glNamedFramebufferParameteri')
    glNamedFramebufferReadBuffer = openglGetProcAddress('glNamedFramebufferReadBuffer')
    glNamedFramebufferRenderbufferEXT = openglGetProcAddress('glNamedFramebufferRenderbufferEXT')
    glNamedFramebufferRenderbuffer = openglGetProcAddress('glNamedFramebufferRenderbuffer')
    glNamedFramebufferSampleLocationsfvARB = openglGetProcAddress('glNamedFramebufferSampleLocationsfvARB')
    glNamedFramebufferSampleLocationsfvNV = openglGetProcAddress('glNamedFramebufferSampleLocationsfvNV')
    glNamedFramebufferTexture1DEXT = openglGetProcAddress('glNamedFramebufferTexture1DEXT')
    glNamedFramebufferTexture2DEXT = openglGetProcAddress('glNamedFramebufferTexture2DEXT')
    glNamedFramebufferTexture3DEXT = openglGetProcAddress('glNamedFramebufferTexture3DEXT')
    glNamedFramebufferTextureEXT = openglGetProcAddress('glNamedFramebufferTextureEXT')
    glNamedFramebufferTextureFaceEXT = openglGetProcAddress('glNamedFramebufferTextureFaceEXT')
    glNamedFramebufferTextureLayerEXT = openglGetProcAddress('glNamedFramebufferTextureLayerEXT')
    glNamedFramebufferTextureLayer = openglGetProcAddress('glNamedFramebufferTextureLayer')
    glNamedFramebufferTexture = openglGetProcAddress('glNamedFramebufferTexture')
    glNamedProgramLocalParameter4dEXT = openglGetProcAddress('glNamedProgramLocalParameter4dEXT')
    glNamedProgramLocalParameter4dvEXT = openglGetProcAddress('glNamedProgramLocalParameter4dvEXT')
    glNamedProgramLocalParameter4fEXT = openglGetProcAddress('glNamedProgramLocalParameter4fEXT')
    glNamedProgramLocalParameter4fvEXT = openglGetProcAddress('glNamedProgramLocalParameter4fvEXT')
    glNamedProgramLocalParameterI4iEXT = openglGetProcAddress('glNamedProgramLocalParameterI4iEXT')
    glNamedProgramLocalParameterI4ivEXT = openglGetProcAddress('glNamedProgramLocalParameterI4ivEXT')
    glNamedProgramLocalParameterI4uiEXT = openglGetProcAddress('glNamedProgramLocalParameterI4uiEXT')
    glNamedProgramLocalParameterI4uivEXT = openglGetProcAddress('glNamedProgramLocalParameterI4uivEXT')
    glNamedProgramLocalParameters4fvEXT = openglGetProcAddress('glNamedProgramLocalParameters4fvEXT')
    glNamedProgramLocalParametersI4ivEXT = openglGetProcAddress('glNamedProgramLocalParametersI4ivEXT')
    glNamedProgramLocalParametersI4uivEXT = openglGetProcAddress('glNamedProgramLocalParametersI4uivEXT')
    glNamedProgramStringEXT = openglGetProcAddress('glNamedProgramStringEXT')
    glNamedRenderbufferStorageEXT = openglGetProcAddress('glNamedRenderbufferStorageEXT')
    glNamedRenderbufferStorageMultisampleCoverageEXT = openglGetProcAddress('glNamedRenderbufferStorageMultisampleCoverageEXT')
    glNamedRenderbufferStorageMultisampleEXT = openglGetProcAddress('glNamedRenderbufferStorageMultisampleEXT')
    glNamedRenderbufferStorageMultisample = openglGetProcAddress('glNamedRenderbufferStorageMultisample')
    glNamedRenderbufferStorage = openglGetProcAddress('glNamedRenderbufferStorage')
    glNamedStringARB = openglGetProcAddress('glNamedStringARB')
    glNormal3fVertex3fSUN = openglGetProcAddress('glNormal3fVertex3fSUN')
    glNormal3fVertex3fvSUN = openglGetProcAddress('glNormal3fVertex3fvSUN')
    glNormal3hNV = openglGetProcAddress('glNormal3hNV')
    glNormal3hvNV = openglGetProcAddress('glNormal3hvNV')
    glNormal3x = openglGetProcAddress('glNormal3x')
    glNormalFormatNV = openglGetProcAddress('glNormalFormatNV')
    glNormalP3ui = openglGetProcAddress('glNormalP3ui')
    glNormalP3uiv = openglGetProcAddress('glNormalP3uiv')
    glNormalPointerEXT = openglGetProcAddress('glNormalPointerEXT')
    glNormalPointerListIBM = openglGetProcAddress('glNormalPointerListIBM')
    glNormalPointervINTEL = openglGetProcAddress('glNormalPointervINTEL')
    glNormalStream3bATI = openglGetProcAddress('glNormalStream3bATI')
    glNormalStream3bvATI = openglGetProcAddress('glNormalStream3bvATI')
    glNormalStream3dATI = openglGetProcAddress('glNormalStream3dATI')
    glNormalStream3dvATI = openglGetProcAddress('glNormalStream3dvATI')
    glNormalStream3fATI = openglGetProcAddress('glNormalStream3fATI')
    glNormalStream3fvATI = openglGetProcAddress('glNormalStream3fvATI')
    glNormalStream3iATI = openglGetProcAddress('glNormalStream3iATI')
    glNormalStream3ivATI = openglGetProcAddress('glNormalStream3ivATI')
    glNormalStream3sATI = openglGetProcAddress('glNormalStream3sATI')
    glNormalStream3svATI = openglGetProcAddress('glNormalStream3svATI')
    glObjectLabel = openglGetProcAddress('glObjectLabel')
    glObjectPtrLabel = openglGetProcAddress('glObjectPtrLabel')
    glOrthofOES = openglGetProcAddress('glOrthofOES')
    glOrthof = openglGetProcAddress('glOrthof')
    glOrthox = openglGetProcAddress('glOrthox')
    glPassTexCoordATI = openglGetProcAddress('glPassTexCoordATI')
    glPatchParameterfv = openglGetProcAddress('glPatchParameterfv')
    glPatchParameteri = openglGetProcAddress('glPatchParameteri')
    glPathColorGenNV = openglGetProcAddress('glPathColorGenNV')
    glPathCommandsNV = openglGetProcAddress('glPathCommandsNV')
    glPathCoordsNV = openglGetProcAddress('glPathCoordsNV')
    glPathCoverDepthFuncNV = openglGetProcAddress('glPathCoverDepthFuncNV')
    glPathDashArrayNV = openglGetProcAddress('glPathDashArrayNV')
    glPathFogGenNV = openglGetProcAddress('glPathFogGenNV')
    glPathGlyphRangeNV = openglGetProcAddress('glPathGlyphRangeNV')
    glPathGlyphsNV = openglGetProcAddress('glPathGlyphsNV')
    glPathParameterfNV = openglGetProcAddress('glPathParameterfNV')
    glPathParameterfvNV = openglGetProcAddress('glPathParameterfvNV')
    glPathParameteriNV = openglGetProcAddress('glPathParameteriNV')
    glPathParameterivNV = openglGetProcAddress('glPathParameterivNV')
    glPathStencilDepthOffsetNV = openglGetProcAddress('glPathStencilDepthOffsetNV')
    glPathStencilFuncNV = openglGetProcAddress('glPathStencilFuncNV')
    glPathStringNV = openglGetProcAddress('glPathStringNV')
    glPathSubCommandsNV = openglGetProcAddress('glPathSubCommandsNV')
    glPathSubCoordsNV = openglGetProcAddress('glPathSubCoordsNV')
    glPathTexGenNV = openglGetProcAddress('glPathTexGenNV')
    glPauseTransformFeedbackNV = openglGetProcAddress('glPauseTransformFeedbackNV')
    glPauseTransformFeedback = openglGetProcAddress('glPauseTransformFeedback')
    glPixelDataRangeNV = openglGetProcAddress('glPixelDataRangeNV')
    glPixelTexGenSGIX = openglGetProcAddress('glPixelTexGenSGIX')
    glPixelTransformParameterfEXT = openglGetProcAddress('glPixelTransformParameterfEXT')
    glPixelTransformParameterfvEXT = openglGetProcAddress('glPixelTransformParameterfvEXT')
    glPixelTransformParameteriEXT = openglGetProcAddress('glPixelTransformParameteriEXT')
    glPixelTransformParameterivEXT = openglGetProcAddress('glPixelTransformParameterivEXT')
    glPNTrianglesfATI = openglGetProcAddress('glPNTrianglesfATI')
    glPNTrianglesiATI = openglGetProcAddress('glPNTrianglesiATI')
    glPointParameterfARB = openglGetProcAddress('glPointParameterfARB')
    glPointParameterfEXT = openglGetProcAddress('glPointParameterfEXT')
    glPointParameterf = openglGetProcAddress('glPointParameterf')
    glPointParameterfvARB = openglGetProcAddress('glPointParameterfvARB')
    glPointParameterfvEXT = openglGetProcAddress('glPointParameterfvEXT')
    glPointParameterfv = openglGetProcAddress('glPointParameterfv')
    glPointParameteriNV = openglGetProcAddress('glPointParameteriNV')
    glPointParameteri = openglGetProcAddress('glPointParameteri')
    glPointParameterivNV = openglGetProcAddress('glPointParameterivNV')
    glPointParameteriv = openglGetProcAddress('glPointParameteriv')
    glPointParameterx = openglGetProcAddress('glPointParameterx')
    glPointParameterxv = openglGetProcAddress('glPointParameterxv')
    glPointSizePointerOES = openglGetProcAddress('glPointSizePointerOES')
    glPointSizex = openglGetProcAddress('glPointSizex')
    glPolygonOffsetClampEXT = openglGetProcAddress('glPolygonOffsetClampEXT')
    glPolygonOffsetEXT = openglGetProcAddress('glPolygonOffsetEXT')
    glPolygonOffsetx = openglGetProcAddress('glPolygonOffsetx')
    glPopDebugGroup = openglGetProcAddress('glPopDebugGroup')
    glPopGroupMarkerEXT = openglGetProcAddress('glPopGroupMarkerEXT')
    glPresentFrameDualFillNV = openglGetProcAddress('glPresentFrameDualFillNV')
    glPresentFrameKeyedNV = openglGetProcAddress('glPresentFrameKeyedNV')
    glPrimitiveBoundingBoxARB = openglGetProcAddress('glPrimitiveBoundingBoxARB')
    glPrimitiveRestartIndexNV = openglGetProcAddress('glPrimitiveRestartIndexNV')
    glPrimitiveRestartIndex = openglGetProcAddress('glPrimitiveRestartIndex')
    glPrimitiveRestartNV = openglGetProcAddress('glPrimitiveRestartNV')
    glPrioritizeTexturesEXT = openglGetProcAddress('glPrioritizeTexturesEXT')
    glProgramBinary = openglGetProcAddress('glProgramBinary')
    glProgramBufferParametersfvNV = openglGetProcAddress('glProgramBufferParametersfvNV')
    glProgramBufferParametersIivNV = openglGetProcAddress('glProgramBufferParametersIivNV')
    glProgramBufferParametersIuivNV = openglGetProcAddress('glProgramBufferParametersIuivNV')
    glProgramEnvParameter4dARB = openglGetProcAddress('glProgramEnvParameter4dARB')
    glProgramEnvParameter4dvARB = openglGetProcAddress('glProgramEnvParameter4dvARB')
    glProgramEnvParameter4fARB = openglGetProcAddress('glProgramEnvParameter4fARB')
    glProgramEnvParameter4fvARB = openglGetProcAddress('glProgramEnvParameter4fvARB')
    glProgramEnvParameterI4iNV = openglGetProcAddress('glProgramEnvParameterI4iNV')
    glProgramEnvParameterI4ivNV = openglGetProcAddress('glProgramEnvParameterI4ivNV')
    glProgramEnvParameterI4uiNV = openglGetProcAddress('glProgramEnvParameterI4uiNV')
    glProgramEnvParameterI4uivNV = openglGetProcAddress('glProgramEnvParameterI4uivNV')
    glProgramEnvParameters4fvEXT = openglGetProcAddress('glProgramEnvParameters4fvEXT')
    glProgramEnvParametersI4ivNV = openglGetProcAddress('glProgramEnvParametersI4ivNV')
    glProgramEnvParametersI4uivNV = openglGetProcAddress('glProgramEnvParametersI4uivNV')
    glProgramLocalParameter4dARB = openglGetProcAddress('glProgramLocalParameter4dARB')
    glProgramLocalParameter4dvARB = openglGetProcAddress('glProgramLocalParameter4dvARB')
    glProgramLocalParameter4fARB = openglGetProcAddress('glProgramLocalParameter4fARB')
    glProgramLocalParameter4fvARB = openglGetProcAddress('glProgramLocalParameter4fvARB')
    glProgramLocalParameterI4iNV = openglGetProcAddress('glProgramLocalParameterI4iNV')
    glProgramLocalParameterI4ivNV = openglGetProcAddress('glProgramLocalParameterI4ivNV')
    glProgramLocalParameterI4uiNV = openglGetProcAddress('glProgramLocalParameterI4uiNV')
    glProgramLocalParameterI4uivNV = openglGetProcAddress('glProgramLocalParameterI4uivNV')
    glProgramLocalParameters4fvEXT = openglGetProcAddress('glProgramLocalParameters4fvEXT')
    glProgramLocalParametersI4ivNV = openglGetProcAddress('glProgramLocalParametersI4ivNV')
    glProgramLocalParametersI4uivNV = openglGetProcAddress('glProgramLocalParametersI4uivNV')
    glProgramNamedParameter4dNV = openglGetProcAddress('glProgramNamedParameter4dNV')
    glProgramNamedParameter4dvNV = openglGetProcAddress('glProgramNamedParameter4dvNV')
    glProgramNamedParameter4fvNV = openglGetProcAddress('glProgramNamedParameter4fvNV')
    glProgramParameter4dNV = openglGetProcAddress('glProgramParameter4dNV')
    glProgramParameter4dvNV = openglGetProcAddress('glProgramParameter4dvNV')
    glProgramParameter4fNV = openglGetProcAddress('glProgramParameter4fNV')
    glProgramParameter4fvNV = openglGetProcAddress('glProgramParameter4fvNV')
    glProgramParameteriARB = openglGetProcAddress('glProgramParameteriARB')
    glProgramParameteriEXT = openglGetProcAddress('glProgramParameteriEXT')
    glProgramParameteri = openglGetProcAddress('glProgramParameteri')
    glProgramParameters4dvNV = openglGetProcAddress('glProgramParameters4dvNV')
    glProgramParameters4fvNV = openglGetProcAddress('glProgramParameters4fvNV')
    glProgramPathFragmentInputGenNV = openglGetProcAddress('glProgramPathFragmentInputGenNV')
    glProgramStringARB = openglGetProcAddress('glProgramStringARB')
    glProgramUniform1d = openglGetProcAddress('glProgramUniform1d')
    glProgramUniform1dv = openglGetProcAddress('glProgramUniform1dv')
    glProgramUniform1fEXT = openglGetProcAddress('glProgramUniform1fEXT')
    glProgramUniform1f = openglGetProcAddress('glProgramUniform1f')
    glProgramUniform1fvEXT = openglGetProcAddress('glProgramUniform1fvEXT')
    glProgramUniform1fv = openglGetProcAddress('glProgramUniform1fv')
    glProgramUniform1i64ARB = openglGetProcAddress('glProgramUniform1i64ARB')
    glProgramUniform1i64NV = openglGetProcAddress('glProgramUniform1i64NV')
    glProgramUniform1i64vARB = openglGetProcAddress('glProgramUniform1i64vARB')
    glProgramUniform1i64vNV = openglGetProcAddress('glProgramUniform1i64vNV')
    glProgramUniform1iEXT = openglGetProcAddress('glProgramUniform1iEXT')
    glProgramUniform1i = openglGetProcAddress('glProgramUniform1i')
    glProgramUniform1ivEXT = openglGetProcAddress('glProgramUniform1ivEXT')
    glProgramUniform1iv = openglGetProcAddress('glProgramUniform1iv')
    glProgramUniform1ui64ARB = openglGetProcAddress('glProgramUniform1ui64ARB')
    glProgramUniform1ui64NV = openglGetProcAddress('glProgramUniform1ui64NV')
    glProgramUniform1ui64vARB = openglGetProcAddress('glProgramUniform1ui64vARB')
    glProgramUniform1ui64vNV = openglGetProcAddress('glProgramUniform1ui64vNV')
    glProgramUniform1uiEXT = openglGetProcAddress('glProgramUniform1uiEXT')
    glProgramUniform1ui = openglGetProcAddress('glProgramUniform1ui')
    glProgramUniform1uivEXT = openglGetProcAddress('glProgramUniform1uivEXT')
    glProgramUniform1uiv = openglGetProcAddress('glProgramUniform1uiv')
    glProgramUniform2d = openglGetProcAddress('glProgramUniform2d')
    glProgramUniform2dv = openglGetProcAddress('glProgramUniform2dv')
    glProgramUniform2fEXT = openglGetProcAddress('glProgramUniform2fEXT')
    glProgramUniform2f = openglGetProcAddress('glProgramUniform2f')
    glProgramUniform2fvEXT = openglGetProcAddress('glProgramUniform2fvEXT')
    glProgramUniform2fv = openglGetProcAddress('glProgramUniform2fv')
    glProgramUniform2i64ARB = openglGetProcAddress('glProgramUniform2i64ARB')
    glProgramUniform2i64NV = openglGetProcAddress('glProgramUniform2i64NV')
    glProgramUniform2i64vARB = openglGetProcAddress('glProgramUniform2i64vARB')
    glProgramUniform2i64vNV = openglGetProcAddress('glProgramUniform2i64vNV')
    glProgramUniform2iEXT = openglGetProcAddress('glProgramUniform2iEXT')
    glProgramUniform2i = openglGetProcAddress('glProgramUniform2i')
    glProgramUniform2ivEXT = openglGetProcAddress('glProgramUniform2ivEXT')
    glProgramUniform2iv = openglGetProcAddress('glProgramUniform2iv')
    glProgramUniform2ui64ARB = openglGetProcAddress('glProgramUniform2ui64ARB')
    glProgramUniform2ui64NV = openglGetProcAddress('glProgramUniform2ui64NV')
    glProgramUniform2ui64vARB = openglGetProcAddress('glProgramUniform2ui64vARB')
    glProgramUniform2ui64vNV = openglGetProcAddress('glProgramUniform2ui64vNV')
    glProgramUniform2uiEXT = openglGetProcAddress('glProgramUniform2uiEXT')
    glProgramUniform2ui = openglGetProcAddress('glProgramUniform2ui')
    glProgramUniform2uivEXT = openglGetProcAddress('glProgramUniform2uivEXT')
    glProgramUniform2uiv = openglGetProcAddress('glProgramUniform2uiv')
    glProgramUniform3d = openglGetProcAddress('glProgramUniform3d')
    glProgramUniform3dv = openglGetProcAddress('glProgramUniform3dv')
    glProgramUniform3fEXT = openglGetProcAddress('glProgramUniform3fEXT')
    glProgramUniform3f = openglGetProcAddress('glProgramUniform3f')
    glProgramUniform3fvEXT = openglGetProcAddress('glProgramUniform3fvEXT')
    glProgramUniform3fv = openglGetProcAddress('glProgramUniform3fv')
    glProgramUniform3i64ARB = openglGetProcAddress('glProgramUniform3i64ARB')
    glProgramUniform3i64NV = openglGetProcAddress('glProgramUniform3i64NV')
    glProgramUniform3i64vARB = openglGetProcAddress('glProgramUniform3i64vARB')
    glProgramUniform3i64vNV = openglGetProcAddress('glProgramUniform3i64vNV')
    glProgramUniform3iEXT = openglGetProcAddress('glProgramUniform3iEXT')
    glProgramUniform3i = openglGetProcAddress('glProgramUniform3i')
    glProgramUniform3ivEXT = openglGetProcAddress('glProgramUniform3ivEXT')
    glProgramUniform3iv = openglGetProcAddress('glProgramUniform3iv')
    glProgramUniform3ui64ARB = openglGetProcAddress('glProgramUniform3ui64ARB')
    glProgramUniform3ui64NV = openglGetProcAddress('glProgramUniform3ui64NV')
    glProgramUniform3ui64vARB = openglGetProcAddress('glProgramUniform3ui64vARB')
    glProgramUniform3ui64vNV = openglGetProcAddress('glProgramUniform3ui64vNV')
    glProgramUniform3uiEXT = openglGetProcAddress('glProgramUniform3uiEXT')
    glProgramUniform3ui = openglGetProcAddress('glProgramUniform3ui')
    glProgramUniform3uivEXT = openglGetProcAddress('glProgramUniform3uivEXT')
    glProgramUniform3uiv = openglGetProcAddress('glProgramUniform3uiv')
    glProgramUniform4d = openglGetProcAddress('glProgramUniform4d')
    glProgramUniform4dv = openglGetProcAddress('glProgramUniform4dv')
    glProgramUniform4fEXT = openglGetProcAddress('glProgramUniform4fEXT')
    glProgramUniform4f = openglGetProcAddress('glProgramUniform4f')
    glProgramUniform4fvEXT = openglGetProcAddress('glProgramUniform4fvEXT')
    glProgramUniform4fv = openglGetProcAddress('glProgramUniform4fv')
    glProgramUniform4i64ARB = openglGetProcAddress('glProgramUniform4i64ARB')
    glProgramUniform4i64NV = openglGetProcAddress('glProgramUniform4i64NV')
    glProgramUniform4i64vARB = openglGetProcAddress('glProgramUniform4i64vARB')
    glProgramUniform4i64vNV = openglGetProcAddress('glProgramUniform4i64vNV')
    glProgramUniform4iEXT = openglGetProcAddress('glProgramUniform4iEXT')
    glProgramUniform4i = openglGetProcAddress('glProgramUniform4i')
    glProgramUniform4ivEXT = openglGetProcAddress('glProgramUniform4ivEXT')
    glProgramUniform4iv = openglGetProcAddress('glProgramUniform4iv')
    glProgramUniform4ui64ARB = openglGetProcAddress('glProgramUniform4ui64ARB')
    glProgramUniform4ui64NV = openglGetProcAddress('glProgramUniform4ui64NV')
    glProgramUniform4ui64vARB = openglGetProcAddress('glProgramUniform4ui64vARB')
    glProgramUniform4ui64vNV = openglGetProcAddress('glProgramUniform4ui64vNV')
    glProgramUniform4uiEXT = openglGetProcAddress('glProgramUniform4uiEXT')
    glProgramUniform4ui = openglGetProcAddress('glProgramUniform4ui')
    glProgramUniform4uivEXT = openglGetProcAddress('glProgramUniform4uivEXT')
    glProgramUniform4uiv = openglGetProcAddress('glProgramUniform4uiv')
    glProgramUniformHandleui64ARB = openglGetProcAddress('glProgramUniformHandleui64ARB')
    glProgramUniformHandleui64NV = openglGetProcAddress('glProgramUniformHandleui64NV')
    glProgramUniformHandleui64vARB = openglGetProcAddress('glProgramUniformHandleui64vARB')
    glProgramUniformHandleui64vNV = openglGetProcAddress('glProgramUniformHandleui64vNV')
    glProgramUniformMatrix2dv = openglGetProcAddress('glProgramUniformMatrix2dv')
    glProgramUniformMatrix2fvEXT = openglGetProcAddress('glProgramUniformMatrix2fvEXT')
    glProgramUniformMatrix2fv = openglGetProcAddress('glProgramUniformMatrix2fv')
    glProgramUniformMatrix2x3dv = openglGetProcAddress('glProgramUniformMatrix2x3dv')
    glProgramUniformMatrix2x3fvEXT = openglGetProcAddress('glProgramUniformMatrix2x3fvEXT')
    glProgramUniformMatrix2x3fv = openglGetProcAddress('glProgramUniformMatrix2x3fv')
    glProgramUniformMatrix2x4dv = openglGetProcAddress('glProgramUniformMatrix2x4dv')
    glProgramUniformMatrix2x4fvEXT = openglGetProcAddress('glProgramUniformMatrix2x4fvEXT')
    glProgramUniformMatrix2x4fv = openglGetProcAddress('glProgramUniformMatrix2x4fv')
    glProgramUniformMatrix3dv = openglGetProcAddress('glProgramUniformMatrix3dv')
    glProgramUniformMatrix3fvEXT = openglGetProcAddress('glProgramUniformMatrix3fvEXT')
    glProgramUniformMatrix3fv = openglGetProcAddress('glProgramUniformMatrix3fv')
    glProgramUniformMatrix3x2dv = openglGetProcAddress('glProgramUniformMatrix3x2dv')
    glProgramUniformMatrix3x2fvEXT = openglGetProcAddress('glProgramUniformMatrix3x2fvEXT')
    glProgramUniformMatrix3x2fv = openglGetProcAddress('glProgramUniformMatrix3x2fv')
    glProgramUniformMatrix3x4dv = openglGetProcAddress('glProgramUniformMatrix3x4dv')
    glProgramUniformMatrix3x4fvEXT = openglGetProcAddress('glProgramUniformMatrix3x4fvEXT')
    glProgramUniformMatrix3x4fv = openglGetProcAddress('glProgramUniformMatrix3x4fv')
    glProgramUniformMatrix4dv = openglGetProcAddress('glProgramUniformMatrix4dv')
    glProgramUniformMatrix4fvEXT = openglGetProcAddress('glProgramUniformMatrix4fvEXT')
    glProgramUniformMatrix4fv = openglGetProcAddress('glProgramUniformMatrix4fv')
    glProgramUniformMatrix4x2dv = openglGetProcAddress('glProgramUniformMatrix4x2dv')
    glProgramUniformMatrix4x2fvEXT = openglGetProcAddress('glProgramUniformMatrix4x2fvEXT')
    glProgramUniformMatrix4x2fv = openglGetProcAddress('glProgramUniformMatrix4x2fv')
    glProgramUniformMatrix4x3dv = openglGetProcAddress('glProgramUniformMatrix4x3dv')
    glProgramUniformMatrix4x3fvEXT = openglGetProcAddress('glProgramUniformMatrix4x3fvEXT')
    glProgramUniformMatrix4x3fv = openglGetProcAddress('glProgramUniformMatrix4x3fv')
    glProgramUniformui64NV = openglGetProcAddress('glProgramUniformui64NV')
    glProgramUniformui64vNV = openglGetProcAddress('glProgramUniformui64vNV')
    glProgramVertexLimitNV = openglGetProcAddress('glProgramVertexLimitNV')
    glProvokingVertexEXT = openglGetProcAddress('glProvokingVertexEXT')
    glProvokingVertex = openglGetProcAddress('glProvokingVertex')
    glPushClientAttribDefaultEXT = openglGetProcAddress('glPushClientAttribDefaultEXT')
    glPushDebugGroup = openglGetProcAddress('glPushDebugGroup')
    glPushGroupMarkerEXT = openglGetProcAddress('glPushGroupMarkerEXT')
    glQueryCounterANGLE = openglGetProcAddress('glQueryCounterANGLE')
    glQueryCounter = openglGetProcAddress('glQueryCounter')
    glQueryObjectParameteruiAMD = openglGetProcAddress('glQueryObjectParameteruiAMD')
    glRasterSamplesEXT = openglGetProcAddress('glRasterSamplesEXT')
    glReadBufferRegion = openglGetProcAddress('glReadBufferRegion')
    glReadnPixelsARB = openglGetProcAddress('glReadnPixelsARB')
    glReadnPixels = openglGetProcAddress('glReadnPixels')
    glReadVideoPixelsSUN = openglGetProcAddress('glReadVideoPixelsSUN')
    glReferencePlaneSGIX = openglGetProcAddress('glReferencePlaneSGIX')
    glReleaseShaderCompiler = openglGetProcAddress('glReleaseShaderCompiler')
    glRenderbufferStorageEXT = openglGetProcAddress('glRenderbufferStorageEXT')
    glRenderbufferStorageMultisampleANGLE = openglGetProcAddress('glRenderbufferStorageMultisampleANGLE')
    glRenderbufferStorageMultisampleCoverageNV = openglGetProcAddress('glRenderbufferStorageMultisampleCoverageNV')
    glRenderbufferStorageMultisampleEXT = openglGetProcAddress('glRenderbufferStorageMultisampleEXT')
    glRenderbufferStorageMultisample = openglGetProcAddress('glRenderbufferStorageMultisample')
    glRenderbufferStorage = openglGetProcAddress('glRenderbufferStorage')
    glReplacementCodePointerSUN = openglGetProcAddress('glReplacementCodePointerSUN')
    glReplacementCodeubSUN = openglGetProcAddress('glReplacementCodeubSUN')
    glReplacementCodeubvSUN = openglGetProcAddress('glReplacementCodeubvSUN')
    glReplacementCodeuiColor3fVertex3fSUN = openglGetProcAddress('glReplacementCodeuiColor3fVertex3fSUN')
    glReplacementCodeuiColor3fVertex3fvSUN = openglGetProcAddress('glReplacementCodeuiColor3fVertex3fvSUN')
    glReplacementCodeuiColor4fNormal3fVertex3fSUN = openglGetProcAddress('glReplacementCodeuiColor4fNormal3fVertex3fSUN')
    glReplacementCodeuiColor4fNormal3fVertex3fvSUN = openglGetProcAddress('glReplacementCodeuiColor4fNormal3fVertex3fvSUN')
    glReplacementCodeuiColor4ubVertex3fSUN = openglGetProcAddress('glReplacementCodeuiColor4ubVertex3fSUN')
    glReplacementCodeuiColor4ubVertex3fvSUN = openglGetProcAddress('glReplacementCodeuiColor4ubVertex3fvSUN')
    glReplacementCodeuiNormal3fVertex3fSUN = openglGetProcAddress('glReplacementCodeuiNormal3fVertex3fSUN')
    glReplacementCodeuiNormal3fVertex3fvSUN = openglGetProcAddress('glReplacementCodeuiNormal3fVertex3fvSUN')
    glReplacementCodeuiSUN = openglGetProcAddress('glReplacementCodeuiSUN')
    glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = openglGetProcAddress('glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN')
    glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = openglGetProcAddress('glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN')
    glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = openglGetProcAddress('glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN')
    glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = openglGetProcAddress('glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN')
    glReplacementCodeuiTexCoord2fVertex3fSUN = openglGetProcAddress('glReplacementCodeuiTexCoord2fVertex3fSUN')
    glReplacementCodeuiTexCoord2fVertex3fvSUN = openglGetProcAddress('glReplacementCodeuiTexCoord2fVertex3fvSUN')
    glReplacementCodeuiVertex3fSUN = openglGetProcAddress('glReplacementCodeuiVertex3fSUN')
    glReplacementCodeuiVertex3fvSUN = openglGetProcAddress('glReplacementCodeuiVertex3fvSUN')
    glReplacementCodeuivSUN = openglGetProcAddress('glReplacementCodeuivSUN')
    glReplacementCodeusSUN = openglGetProcAddress('glReplacementCodeusSUN')
    glReplacementCodeusvSUN = openglGetProcAddress('glReplacementCodeusvSUN')
    glRequestResidentProgramsNV = openglGetProcAddress('glRequestResidentProgramsNV')
    glResetHistogramEXT = openglGetProcAddress('glResetHistogramEXT')
    glResetHistogram = openglGetProcAddress('glResetHistogram')
    glResetMinmaxEXT = openglGetProcAddress('glResetMinmaxEXT')
    glResetMinmax = openglGetProcAddress('glResetMinmax')
    glResizeBuffersMESA = openglGetProcAddress('glResizeBuffersMESA')
    glResumeTransformFeedbackNV = openglGetProcAddress('glResumeTransformFeedbackNV')
    glResumeTransformFeedback = openglGetProcAddress('glResumeTransformFeedback')
    glRotatex = openglGetProcAddress('glRotatex')
    glSampleCoverageARB = openglGetProcAddress('glSampleCoverageARB')
    glSampleCoverage = openglGetProcAddress('glSampleCoverage')
    glSampleCoveragex = openglGetProcAddress('glSampleCoveragex')
    glSampleMapATI = openglGetProcAddress('glSampleMapATI')
    glSampleMaskEXT = openglGetProcAddress('glSampleMaskEXT')
    glSampleMaskIndexedNV = openglGetProcAddress('glSampleMaskIndexedNV')
    glSampleMaski = openglGetProcAddress('glSampleMaski')
    glSampleMaskSGIS = openglGetProcAddress('glSampleMaskSGIS')
    glSamplePatternEXT = openglGetProcAddress('glSamplePatternEXT')
    glSamplePatternSGIS = openglGetProcAddress('glSamplePatternSGIS')
    glSamplerParameterf = openglGetProcAddress('glSamplerParameterf')
    glSamplerParameterfv = openglGetProcAddress('glSamplerParameterfv')
    glSamplerParameterIiv = openglGetProcAddress('glSamplerParameterIiv')
    glSamplerParameteri = openglGetProcAddress('glSamplerParameteri')
    glSamplerParameterIuiv = openglGetProcAddress('glSamplerParameterIuiv')
    glSamplerParameteriv = openglGetProcAddress('glSamplerParameteriv')
    glScalex = openglGetProcAddress('glScalex')
    glScissorArrayv = openglGetProcAddress('glScissorArrayv')
    glScissorIndexed = openglGetProcAddress('glScissorIndexed')
    glScissorIndexedv = openglGetProcAddress('glScissorIndexedv')
    glSecondaryColor3bEXT = openglGetProcAddress('glSecondaryColor3bEXT')
    glSecondaryColor3b = openglGetProcAddress('glSecondaryColor3b')
    glSecondaryColor3bvEXT = openglGetProcAddress('glSecondaryColor3bvEXT')
    glSecondaryColor3bv = openglGetProcAddress('glSecondaryColor3bv')
    glSecondaryColor3dEXT = openglGetProcAddress('glSecondaryColor3dEXT')
    glSecondaryColor3d = openglGetProcAddress('glSecondaryColor3d')
    glSecondaryColor3dvEXT = openglGetProcAddress('glSecondaryColor3dvEXT')
    glSecondaryColor3dv = openglGetProcAddress('glSecondaryColor3dv')
    glSecondaryColor3fEXT = openglGetProcAddress('glSecondaryColor3fEXT')
    glSecondaryColor3f = openglGetProcAddress('glSecondaryColor3f')
    glSecondaryColor3fvEXT = openglGetProcAddress('glSecondaryColor3fvEXT')
    glSecondaryColor3fv = openglGetProcAddress('glSecondaryColor3fv')
    glSecondaryColor3hNV = openglGetProcAddress('glSecondaryColor3hNV')
    glSecondaryColor3hvNV = openglGetProcAddress('glSecondaryColor3hvNV')
    glSecondaryColor3iEXT = openglGetProcAddress('glSecondaryColor3iEXT')
    glSecondaryColor3i = openglGetProcAddress('glSecondaryColor3i')
    glSecondaryColor3ivEXT = openglGetProcAddress('glSecondaryColor3ivEXT')
    glSecondaryColor3iv = openglGetProcAddress('glSecondaryColor3iv')
    glSecondaryColor3sEXT = openglGetProcAddress('glSecondaryColor3sEXT')
    glSecondaryColor3s = openglGetProcAddress('glSecondaryColor3s')
    glSecondaryColor3svEXT = openglGetProcAddress('glSecondaryColor3svEXT')
    glSecondaryColor3sv = openglGetProcAddress('glSecondaryColor3sv')
    glSecondaryColor3ubEXT = openglGetProcAddress('glSecondaryColor3ubEXT')
    glSecondaryColor3ub = openglGetProcAddress('glSecondaryColor3ub')
    glSecondaryColor3ubvEXT = openglGetProcAddress('glSecondaryColor3ubvEXT')
    glSecondaryColor3ubv = openglGetProcAddress('glSecondaryColor3ubv')
    glSecondaryColor3uiEXT = openglGetProcAddress('glSecondaryColor3uiEXT')
    glSecondaryColor3ui = openglGetProcAddress('glSecondaryColor3ui')
    glSecondaryColor3uivEXT = openglGetProcAddress('glSecondaryColor3uivEXT')
    glSecondaryColor3uiv = openglGetProcAddress('glSecondaryColor3uiv')
    glSecondaryColor3usEXT = openglGetProcAddress('glSecondaryColor3usEXT')
    glSecondaryColor3us = openglGetProcAddress('glSecondaryColor3us')
    glSecondaryColor3usvEXT = openglGetProcAddress('glSecondaryColor3usvEXT')
    glSecondaryColor3usv = openglGetProcAddress('glSecondaryColor3usv')
    glSecondaryColorFormatNV = openglGetProcAddress('glSecondaryColorFormatNV')
    glSecondaryColorP3ui = openglGetProcAddress('glSecondaryColorP3ui')
    glSecondaryColorP3uiv = openglGetProcAddress('glSecondaryColorP3uiv')
    glSecondaryColorPointerEXT = openglGetProcAddress('glSecondaryColorPointerEXT')
    glSecondaryColorPointerListIBM = openglGetProcAddress('glSecondaryColorPointerListIBM')
    glSecondaryColorPointer = openglGetProcAddress('glSecondaryColorPointer')
    glSelectPerfMonitorCountersAMD = openglGetProcAddress('glSelectPerfMonitorCountersAMD')
    glSeparableFilter2DEXT = openglGetProcAddress('glSeparableFilter2DEXT')
    glSeparableFilter2D = openglGetProcAddress('glSeparableFilter2D')
    glSetFenceAPPLE = openglGetProcAddress('glSetFenceAPPLE')
    glSetFenceNV = openglGetProcAddress('glSetFenceNV')
    glSetFragmentShaderConstantATI = openglGetProcAddress('glSetFragmentShaderConstantATI')
    glSetInvariantEXT = openglGetProcAddress('glSetInvariantEXT')
    glSetLocalConstantEXT = openglGetProcAddress('glSetLocalConstantEXT')
    glSetMultisamplefvAMD = openglGetProcAddress('glSetMultisamplefvAMD')
    glShaderBinary = openglGetProcAddress('glShaderBinary')
    glShaderOp1EXT = openglGetProcAddress('glShaderOp1EXT')
    glShaderOp2EXT = openglGetProcAddress('glShaderOp2EXT')
    glShaderOp3EXT = openglGetProcAddress('glShaderOp3EXT')
    glShaderSourceARB = openglGetProcAddress('glShaderSourceARB')
    glShaderSource = openglGetProcAddress('glShaderSource')
    glShaderStorageBlockBinding = openglGetProcAddress('glShaderStorageBlockBinding')
    glSharpenTexFuncSGIS = openglGetProcAddress('glSharpenTexFuncSGIS')
    glSpriteParameterfSGIX = openglGetProcAddress('glSpriteParameterfSGIX')
    glSpriteParameterfvSGIX = openglGetProcAddress('glSpriteParameterfvSGIX')
    glSpriteParameteriSGIX = openglGetProcAddress('glSpriteParameteriSGIX')
    glSpriteParameterivSGIX = openglGetProcAddress('glSpriteParameterivSGIX')
    glStencilFillPathInstancedNV = openglGetProcAddress('glStencilFillPathInstancedNV')
    glStencilFillPathNV = openglGetProcAddress('glStencilFillPathNV')
    glStencilFuncSeparateATI = openglGetProcAddress('glStencilFuncSeparateATI')
    glStencilFuncSeparate = openglGetProcAddress('glStencilFuncSeparate')
    glStencilMaskSeparate = openglGetProcAddress('glStencilMaskSeparate')
    glStencilOpSeparateATI = openglGetProcAddress('glStencilOpSeparateATI')
    glStencilOpSeparate = openglGetProcAddress('glStencilOpSeparate')
    glStencilOpValueAMD = openglGetProcAddress('glStencilOpValueAMD')
    glStencilStrokePathInstancedNV = openglGetProcAddress('glStencilStrokePathInstancedNV')
    glStencilStrokePathNV = openglGetProcAddress('glStencilStrokePathNV')
    glStencilThenCoverFillPathInstancedNV = openglGetProcAddress('glStencilThenCoverFillPathInstancedNV')
    glStencilThenCoverFillPathNV = openglGetProcAddress('glStencilThenCoverFillPathNV')
    glStencilThenCoverStrokePathInstancedNV = openglGetProcAddress('glStencilThenCoverStrokePathInstancedNV')
    glStencilThenCoverStrokePathNV = openglGetProcAddress('glStencilThenCoverStrokePathNV')
    glStringMarkerGREMEDY = openglGetProcAddress('glStringMarkerGREMEDY')
    glSubpixelPrecisionBiasNV = openglGetProcAddress('glSubpixelPrecisionBiasNV')
    glSwizzleEXT = openglGetProcAddress('glSwizzleEXT')
    glSyncTextureINTEL = openglGetProcAddress('glSyncTextureINTEL')
    glTagSampleBufferSGIX = openglGetProcAddress('glTagSampleBufferSGIX')
    glTangentPointerEXT = openglGetProcAddress('glTangentPointerEXT')
    glTbufferMask3DFX = openglGetProcAddress('glTbufferMask3DFX')
    glTessellationFactorAMD = openglGetProcAddress('glTessellationFactorAMD')
    glTessellationModeAMD = openglGetProcAddress('glTessellationModeAMD')
    glTexBufferARB = openglGetProcAddress('glTexBufferARB')
    glTexBufferEXT = openglGetProcAddress('glTexBufferEXT')
    glTexBuffer = openglGetProcAddress('glTexBuffer')
    glTexBufferRange = openglGetProcAddress('glTexBufferRange')
    glTexBumpParameterfvATI = openglGetProcAddress('glTexBumpParameterfvATI')
    glTexBumpParameterivATI = openglGetProcAddress('glTexBumpParameterivATI')
    glTexCoord1hNV = openglGetProcAddress('glTexCoord1hNV')
    glTexCoord1hvNV = openglGetProcAddress('glTexCoord1hvNV')
    glTexCoord2fColor3fVertex3fSUN = openglGetProcAddress('glTexCoord2fColor3fVertex3fSUN')
    glTexCoord2fColor3fVertex3fvSUN = openglGetProcAddress('glTexCoord2fColor3fVertex3fvSUN')
    glTexCoord2fColor4fNormal3fVertex3fSUN = openglGetProcAddress('glTexCoord2fColor4fNormal3fVertex3fSUN')
    glTexCoord2fColor4fNormal3fVertex3fvSUN = openglGetProcAddress('glTexCoord2fColor4fNormal3fVertex3fvSUN')
    glTexCoord2fColor4ubVertex3fSUN = openglGetProcAddress('glTexCoord2fColor4ubVertex3fSUN')
    glTexCoord2fColor4ubVertex3fvSUN = openglGetProcAddress('glTexCoord2fColor4ubVertex3fvSUN')
    glTexCoord2fNormal3fVertex3fSUN = openglGetProcAddress('glTexCoord2fNormal3fVertex3fSUN')
    glTexCoord2fNormal3fVertex3fvSUN = openglGetProcAddress('glTexCoord2fNormal3fVertex3fvSUN')
    glTexCoord2fVertex3fSUN = openglGetProcAddress('glTexCoord2fVertex3fSUN')
    glTexCoord2fVertex3fvSUN = openglGetProcAddress('glTexCoord2fVertex3fvSUN')
    glTexCoord2hNV = openglGetProcAddress('glTexCoord2hNV')
    glTexCoord2hvNV = openglGetProcAddress('glTexCoord2hvNV')
    glTexCoord3hNV = openglGetProcAddress('glTexCoord3hNV')
    glTexCoord3hvNV = openglGetProcAddress('glTexCoord3hvNV')
    glTexCoord4fColor4fNormal3fVertex4fSUN = openglGetProcAddress('glTexCoord4fColor4fNormal3fVertex4fSUN')
    glTexCoord4fColor4fNormal3fVertex4fvSUN = openglGetProcAddress('glTexCoord4fColor4fNormal3fVertex4fvSUN')
    glTexCoord4fVertex4fSUN = openglGetProcAddress('glTexCoord4fVertex4fSUN')
    glTexCoord4fVertex4fvSUN = openglGetProcAddress('glTexCoord4fVertex4fvSUN')
    glTexCoord4hNV = openglGetProcAddress('glTexCoord4hNV')
    glTexCoord4hvNV = openglGetProcAddress('glTexCoord4hvNV')
    glTexCoordFormatNV = openglGetProcAddress('glTexCoordFormatNV')
    glTexCoordP1ui = openglGetProcAddress('glTexCoordP1ui')
    glTexCoordP1uiv = openglGetProcAddress('glTexCoordP1uiv')
    glTexCoordP2ui = openglGetProcAddress('glTexCoordP2ui')
    glTexCoordP2uiv = openglGetProcAddress('glTexCoordP2uiv')
    glTexCoordP3ui = openglGetProcAddress('glTexCoordP3ui')
    glTexCoordP3uiv = openglGetProcAddress('glTexCoordP3uiv')
    glTexCoordP4ui = openglGetProcAddress('glTexCoordP4ui')
    glTexCoordP4uiv = openglGetProcAddress('glTexCoordP4uiv')
    glTexCoordPointerEXT = openglGetProcAddress('glTexCoordPointerEXT')
    glTexCoordPointerListIBM = openglGetProcAddress('glTexCoordPointerListIBM')
    glTexCoordPointervINTEL = openglGetProcAddress('glTexCoordPointervINTEL')
    glTexEnvx = openglGetProcAddress('glTexEnvx')
    glTexEnvxv = openglGetProcAddress('glTexEnvxv')
    glTexFilterFuncSGIS = openglGetProcAddress('glTexFilterFuncSGIS')
    glTexImage2DMultisampleCoverageNV = openglGetProcAddress('glTexImage2DMultisampleCoverageNV')
    glTexImage2DMultisample = openglGetProcAddress('glTexImage2DMultisample')
    glTexImage3DEXT = openglGetProcAddress('glTexImage3DEXT')
    glTexImage3DMultisampleCoverageNV = openglGetProcAddress('glTexImage3DMultisampleCoverageNV')
    glTexImage3DMultisample = openglGetProcAddress('glTexImage3DMultisample')
    glTexImage3D = openglGetProcAddress('glTexImage3D')
    glTexImage4DSGIS = openglGetProcAddress('glTexImage4DSGIS')
    glTexPageCommitmentARB = openglGetProcAddress('glTexPageCommitmentARB')
    glTexParameterIivEXT = openglGetProcAddress('glTexParameterIivEXT')
    glTexParameterIiv = openglGetProcAddress('glTexParameterIiv')
    glTexParameterIuivEXT = openglGetProcAddress('glTexParameterIuivEXT')
    glTexParameterIuiv = openglGetProcAddress('glTexParameterIuiv')
    glTexParameterx = openglGetProcAddress('glTexParameterx')
    glTexParameterxv = openglGetProcAddress('glTexParameterxv')
    glTexRenderbufferNV = openglGetProcAddress('glTexRenderbufferNV')
    glTexScissorFuncINTEL = openglGetProcAddress('glTexScissorFuncINTEL')
    glTexScissorINTEL = openglGetProcAddress('glTexScissorINTEL')
    glTexStorage1D = openglGetProcAddress('glTexStorage1D')
    glTexStorage2DMultisample = openglGetProcAddress('glTexStorage2DMultisample')
    glTexStorage2D = openglGetProcAddress('glTexStorage2D')
    glTexStorage3DMultisample = openglGetProcAddress('glTexStorage3DMultisample')
    glTexStorage3D = openglGetProcAddress('glTexStorage3D')
    glTexStorageSparseAMD = openglGetProcAddress('glTexStorageSparseAMD')
    glTexSubImage1DEXT = openglGetProcAddress('glTexSubImage1DEXT')
    glTexSubImage2DEXT = openglGetProcAddress('glTexSubImage2DEXT')
    glTexSubImage3DEXT = openglGetProcAddress('glTexSubImage3DEXT')
    glTexSubImage3D = openglGetProcAddress('glTexSubImage3D')
    glTexSubImage4DSGIS = openglGetProcAddress('glTexSubImage4DSGIS')
    glTextureBarrierNV = openglGetProcAddress('glTextureBarrierNV')
    glTextureBarrier = openglGetProcAddress('glTextureBarrier')
    glTextureBufferEXT = openglGetProcAddress('glTextureBufferEXT')
    glTextureBuffer = openglGetProcAddress('glTextureBuffer')
    glTextureBufferRangeEXT = openglGetProcAddress('glTextureBufferRangeEXT')
    glTextureBufferRange = openglGetProcAddress('glTextureBufferRange')
    glTextureFogSGIX = openglGetProcAddress('glTextureFogSGIX')
    glTextureImage1DEXT = openglGetProcAddress('glTextureImage1DEXT')
    glTextureImage2DEXT = openglGetProcAddress('glTextureImage2DEXT')
    glTextureImage2DMultisampleCoverageNV = openglGetProcAddress('glTextureImage2DMultisampleCoverageNV')
    glTextureImage2DMultisampleNV = openglGetProcAddress('glTextureImage2DMultisampleNV')
    glTextureImage3DEXT = openglGetProcAddress('glTextureImage3DEXT')
    glTextureImage3DMultisampleCoverageNV = openglGetProcAddress('glTextureImage3DMultisampleCoverageNV')
    glTextureImage3DMultisampleNV = openglGetProcAddress('glTextureImage3DMultisampleNV')
    glTextureLightEXT = openglGetProcAddress('glTextureLightEXT')
    glTextureMaterialEXT = openglGetProcAddress('glTextureMaterialEXT')
    glTextureNormalEXT = openglGetProcAddress('glTextureNormalEXT')
    glTexturePageCommitmentEXT = openglGetProcAddress('glTexturePageCommitmentEXT')
    glTextureParameterfEXT = openglGetProcAddress('glTextureParameterfEXT')
    glTextureParameterf = openglGetProcAddress('glTextureParameterf')
    glTextureParameterfvEXT = openglGetProcAddress('glTextureParameterfvEXT')
    glTextureParameterfv = openglGetProcAddress('glTextureParameterfv')
    glTextureParameteriEXT = openglGetProcAddress('glTextureParameteriEXT')
    glTextureParameterIivEXT = openglGetProcAddress('glTextureParameterIivEXT')
    glTextureParameterIiv = openglGetProcAddress('glTextureParameterIiv')
    glTextureParameteri = openglGetProcAddress('glTextureParameteri')
    glTextureParameterIuivEXT = openglGetProcAddress('glTextureParameterIuivEXT')
    glTextureParameterIuiv = openglGetProcAddress('glTextureParameterIuiv')
    glTextureParameterivEXT = openglGetProcAddress('glTextureParameterivEXT')
    glTextureParameteriv = openglGetProcAddress('glTextureParameteriv')
    glTextureRangeAPPLE = openglGetProcAddress('glTextureRangeAPPLE')
    glTextureRenderbufferEXT = openglGetProcAddress('glTextureRenderbufferEXT')
    glTextureStorage1DEXT = openglGetProcAddress('glTextureStorage1DEXT')
    glTextureStorage1D = openglGetProcAddress('glTextureStorage1D')
    glTextureStorage2DEXT = openglGetProcAddress('glTextureStorage2DEXT')
    glTextureStorage2DMultisampleEXT = openglGetProcAddress('glTextureStorage2DMultisampleEXT')
    glTextureStorage2DMultisample = openglGetProcAddress('glTextureStorage2DMultisample')
    glTextureStorage2D = openglGetProcAddress('glTextureStorage2D')
    glTextureStorage3DEXT = openglGetProcAddress('glTextureStorage3DEXT')
    glTextureStorage3DMultisampleEXT = openglGetProcAddress('glTextureStorage3DMultisampleEXT')
    glTextureStorage3DMultisample = openglGetProcAddress('glTextureStorage3DMultisample')
    glTextureStorage3D = openglGetProcAddress('glTextureStorage3D')
    glTextureStorageSparseAMD = openglGetProcAddress('glTextureStorageSparseAMD')
    glTextureSubImage1DEXT = openglGetProcAddress('glTextureSubImage1DEXT')
    glTextureSubImage1D = openglGetProcAddress('glTextureSubImage1D')
    glTextureSubImage2DEXT = openglGetProcAddress('glTextureSubImage2DEXT')
    glTextureSubImage2D = openglGetProcAddress('glTextureSubImage2D')
    glTextureSubImage3DEXT = openglGetProcAddress('glTextureSubImage3DEXT')
    glTextureSubImage3D = openglGetProcAddress('glTextureSubImage3D')
    glTextureView = openglGetProcAddress('glTextureView')
    glTrackMatrixNV = openglGetProcAddress('glTrackMatrixNV')
    glTransformFeedbackAttribsNV = openglGetProcAddress('glTransformFeedbackAttribsNV')
    glTransformFeedbackBufferBase = openglGetProcAddress('glTransformFeedbackBufferBase')
    glTransformFeedbackBufferRange = openglGetProcAddress('glTransformFeedbackBufferRange')
    glTransformFeedbackVaryingsEXT = openglGetProcAddress('glTransformFeedbackVaryingsEXT')
    glTransformFeedbackVaryingsNV = openglGetProcAddress('glTransformFeedbackVaryingsNV')
    glTransformFeedbackVaryings = openglGetProcAddress('glTransformFeedbackVaryings')
    glTransformPathNV = openglGetProcAddress('glTransformPathNV')
    glTranslatex = openglGetProcAddress('glTranslatex')
    glUniform1d = openglGetProcAddress('glUniform1d')
    glUniform1dv = openglGetProcAddress('glUniform1dv')
    glUniform1fARB = openglGetProcAddress('glUniform1fARB')
    glUniform1f = openglGetProcAddress('glUniform1f')
    glUniform1fvARB = openglGetProcAddress('glUniform1fvARB')
    glUniform1fv = openglGetProcAddress('glUniform1fv')
    glUniform1i64ARB = openglGetProcAddress('glUniform1i64ARB')
    glUniform1i64NV = openglGetProcAddress('glUniform1i64NV')
    glUniform1i64vARB = openglGetProcAddress('glUniform1i64vARB')
    glUniform1i64vNV = openglGetProcAddress('glUniform1i64vNV')
    glUniform1iARB = openglGetProcAddress('glUniform1iARB')
    glUniform1i = openglGetProcAddress('glUniform1i')
    glUniform1ivARB = openglGetProcAddress('glUniform1ivARB')
    glUniform1iv = openglGetProcAddress('glUniform1iv')
    glUniform1ui64ARB = openglGetProcAddress('glUniform1ui64ARB')
    glUniform1ui64NV = openglGetProcAddress('glUniform1ui64NV')
    glUniform1ui64vARB = openglGetProcAddress('glUniform1ui64vARB')
    glUniform1ui64vNV = openglGetProcAddress('glUniform1ui64vNV')
    glUniform1uiEXT = openglGetProcAddress('glUniform1uiEXT')
    glUniform1ui = openglGetProcAddress('glUniform1ui')
    glUniform1uivEXT = openglGetProcAddress('glUniform1uivEXT')
    glUniform1uiv = openglGetProcAddress('glUniform1uiv')
    glUniform2d = openglGetProcAddress('glUniform2d')
    glUniform2dv = openglGetProcAddress('glUniform2dv')
    glUniform2fARB = openglGetProcAddress('glUniform2fARB')
    glUniform2f = openglGetProcAddress('glUniform2f')
    glUniform2fvARB = openglGetProcAddress('glUniform2fvARB')
    glUniform2fv = openglGetProcAddress('glUniform2fv')
    glUniform2i64ARB = openglGetProcAddress('glUniform2i64ARB')
    glUniform2i64NV = openglGetProcAddress('glUniform2i64NV')
    glUniform2i64vARB = openglGetProcAddress('glUniform2i64vARB')
    glUniform2i64vNV = openglGetProcAddress('glUniform2i64vNV')
    glUniform2iARB = openglGetProcAddress('glUniform2iARB')
    glUniform2i = openglGetProcAddress('glUniform2i')
    glUniform2ivARB = openglGetProcAddress('glUniform2ivARB')
    glUniform2iv = openglGetProcAddress('glUniform2iv')
    glUniform2ui64ARB = openglGetProcAddress('glUniform2ui64ARB')
    glUniform2ui64NV = openglGetProcAddress('glUniform2ui64NV')
    glUniform2ui64vARB = openglGetProcAddress('glUniform2ui64vARB')
    glUniform2ui64vNV = openglGetProcAddress('glUniform2ui64vNV')
    glUniform2uiEXT = openglGetProcAddress('glUniform2uiEXT')
    glUniform2ui = openglGetProcAddress('glUniform2ui')
    glUniform2uivEXT = openglGetProcAddress('glUniform2uivEXT')
    glUniform2uiv = openglGetProcAddress('glUniform2uiv')
    glUniform3d = openglGetProcAddress('glUniform3d')
    glUniform3dv = openglGetProcAddress('glUniform3dv')
    glUniform3fARB = openglGetProcAddress('glUniform3fARB')
    glUniform3f = openglGetProcAddress('glUniform3f')
    glUniform3fvARB = openglGetProcAddress('glUniform3fvARB')
    glUniform3fv = openglGetProcAddress('glUniform3fv')
    glUniform3i64ARB = openglGetProcAddress('glUniform3i64ARB')
    glUniform3i64NV = openglGetProcAddress('glUniform3i64NV')
    glUniform3i64vARB = openglGetProcAddress('glUniform3i64vARB')
    glUniform3i64vNV = openglGetProcAddress('glUniform3i64vNV')
    glUniform3iARB = openglGetProcAddress('glUniform3iARB')
    glUniform3i = openglGetProcAddress('glUniform3i')
    glUniform3ivARB = openglGetProcAddress('glUniform3ivARB')
    glUniform3iv = openglGetProcAddress('glUniform3iv')
    glUniform3ui64ARB = openglGetProcAddress('glUniform3ui64ARB')
    glUniform3ui64NV = openglGetProcAddress('glUniform3ui64NV')
    glUniform3ui64vARB = openglGetProcAddress('glUniform3ui64vARB')
    glUniform3ui64vNV = openglGetProcAddress('glUniform3ui64vNV')
    glUniform3uiEXT = openglGetProcAddress('glUniform3uiEXT')
    glUniform3ui = openglGetProcAddress('glUniform3ui')
    glUniform3uivEXT = openglGetProcAddress('glUniform3uivEXT')
    glUniform3uiv = openglGetProcAddress('glUniform3uiv')
    glUniform4d = openglGetProcAddress('glUniform4d')
    glUniform4dv = openglGetProcAddress('glUniform4dv')
    glUniform4fARB = openglGetProcAddress('glUniform4fARB')
    glUniform4f = openglGetProcAddress('glUniform4f')
    glUniform4fvARB = openglGetProcAddress('glUniform4fvARB')
    glUniform4fv = openglGetProcAddress('glUniform4fv')
    glUniform4i64ARB = openglGetProcAddress('glUniform4i64ARB')
    glUniform4i64NV = openglGetProcAddress('glUniform4i64NV')
    glUniform4i64vARB = openglGetProcAddress('glUniform4i64vARB')
    glUniform4i64vNV = openglGetProcAddress('glUniform4i64vNV')
    glUniform4iARB = openglGetProcAddress('glUniform4iARB')
    glUniform4i = openglGetProcAddress('glUniform4i')
    glUniform4ivARB = openglGetProcAddress('glUniform4ivARB')
    glUniform4iv = openglGetProcAddress('glUniform4iv')
    glUniform4ui64ARB = openglGetProcAddress('glUniform4ui64ARB')
    glUniform4ui64NV = openglGetProcAddress('glUniform4ui64NV')
    glUniform4ui64vARB = openglGetProcAddress('glUniform4ui64vARB')
    glUniform4ui64vNV = openglGetProcAddress('glUniform4ui64vNV')
    glUniform4uiEXT = openglGetProcAddress('glUniform4uiEXT')
    glUniform4ui = openglGetProcAddress('glUniform4ui')
    glUniform4uivEXT = openglGetProcAddress('glUniform4uivEXT')
    glUniform4uiv = openglGetProcAddress('glUniform4uiv')
    glUniformBlockBinding = openglGetProcAddress('glUniformBlockBinding')
    glUniformBufferEXT = openglGetProcAddress('glUniformBufferEXT')
    glUniformHandleui64ARB = openglGetProcAddress('glUniformHandleui64ARB')
    glUniformHandleui64NV = openglGetProcAddress('glUniformHandleui64NV')
    glUniformHandleui64vARB = openglGetProcAddress('glUniformHandleui64vARB')
    glUniformHandleui64vNV = openglGetProcAddress('glUniformHandleui64vNV')
    glUniformMatrix2dv = openglGetProcAddress('glUniformMatrix2dv')
    glUniformMatrix2fvARB = openglGetProcAddress('glUniformMatrix2fvARB')
    glUniformMatrix2fv = openglGetProcAddress('glUniformMatrix2fv')
    glUniformMatrix2x3dv = openglGetProcAddress('glUniformMatrix2x3dv')
    glUniformMatrix2x3fv = openglGetProcAddress('glUniformMatrix2x3fv')
    glUniformMatrix2x4dv = openglGetProcAddress('glUniformMatrix2x4dv')
    glUniformMatrix2x4fv = openglGetProcAddress('glUniformMatrix2x4fv')
    glUniformMatrix3dv = openglGetProcAddress('glUniformMatrix3dv')
    glUniformMatrix3fvARB = openglGetProcAddress('glUniformMatrix3fvARB')
    glUniformMatrix3fv = openglGetProcAddress('glUniformMatrix3fv')
    glUniformMatrix3x2dv = openglGetProcAddress('glUniformMatrix3x2dv')
    glUniformMatrix3x2fv = openglGetProcAddress('glUniformMatrix3x2fv')
    glUniformMatrix3x4dv = openglGetProcAddress('glUniformMatrix3x4dv')
    glUniformMatrix3x4fv = openglGetProcAddress('glUniformMatrix3x4fv')
    glUniformMatrix4dv = openglGetProcAddress('glUniformMatrix4dv')
    glUniformMatrix4fvARB = openglGetProcAddress('glUniformMatrix4fvARB')
    glUniformMatrix4fv = openglGetProcAddress('glUniformMatrix4fv')
    glUniformMatrix4x2dv = openglGetProcAddress('glUniformMatrix4x2dv')
    glUniformMatrix4x2fv = openglGetProcAddress('glUniformMatrix4x2fv')
    glUniformMatrix4x3dv = openglGetProcAddress('glUniformMatrix4x3dv')
    glUniformMatrix4x3fv = openglGetProcAddress('glUniformMatrix4x3fv')
    glUniformSubroutinesuiv = openglGetProcAddress('glUniformSubroutinesuiv')
    glUniformui64NV = openglGetProcAddress('glUniformui64NV')
    glUniformui64vNV = openglGetProcAddress('glUniformui64vNV')
    glUnlockArraysEXT = openglGetProcAddress('glUnlockArraysEXT')
    glUnmapObjectBufferATI = openglGetProcAddress('glUnmapObjectBufferATI')
    glUnmapTexture2DINTEL = openglGetProcAddress('glUnmapTexture2DINTEL')
    glUpdateObjectBufferATI = openglGetProcAddress('glUpdateObjectBufferATI')
    glUseProgramObjectARB = openglGetProcAddress('glUseProgramObjectARB')
    glUseProgram = openglGetProcAddress('glUseProgram')
    glUseProgramStages = openglGetProcAddress('glUseProgramStages')
    glUseShaderProgramEXT = openglGetProcAddress('glUseShaderProgramEXT')
    glValidateProgramARB = openglGetProcAddress('glValidateProgramARB')
    glValidateProgramPipeline = openglGetProcAddress('glValidateProgramPipeline')
    glValidateProgram = openglGetProcAddress('glValidateProgram')
    glVariantArrayObjectATI = openglGetProcAddress('glVariantArrayObjectATI')
    glVariantbvEXT = openglGetProcAddress('glVariantbvEXT')
    glVariantdvEXT = openglGetProcAddress('glVariantdvEXT')
    glVariantfvEXT = openglGetProcAddress('glVariantfvEXT')
    glVariantivEXT = openglGetProcAddress('glVariantivEXT')
    glVariantPointerEXT = openglGetProcAddress('glVariantPointerEXT')
    glVariantsvEXT = openglGetProcAddress('glVariantsvEXT')
    glVariantubvEXT = openglGetProcAddress('glVariantubvEXT')
    glVariantuivEXT = openglGetProcAddress('glVariantuivEXT')
    glVariantusvEXT = openglGetProcAddress('glVariantusvEXT')
    glVDPAUFiniNV = openglGetProcAddress('glVDPAUFiniNV')
    glVDPAUGetSurfaceivNV = openglGetProcAddress('glVDPAUGetSurfaceivNV')
    glVDPAUInitNV = openglGetProcAddress('glVDPAUInitNV')
    glVDPAUIsSurfaceNV = openglGetProcAddress('glVDPAUIsSurfaceNV')
    glVDPAUMapSurfacesNV = openglGetProcAddress('glVDPAUMapSurfacesNV')
    glVDPAUSurfaceAccessNV = openglGetProcAddress('glVDPAUSurfaceAccessNV')
    glVDPAUUnmapSurfacesNV = openglGetProcAddress('glVDPAUUnmapSurfacesNV')
    glVDPAUUnregisterSurfaceNV = openglGetProcAddress('glVDPAUUnregisterSurfaceNV')
    glVertex2hNV = openglGetProcAddress('glVertex2hNV')
    glVertex2hvNV = openglGetProcAddress('glVertex2hvNV')
    glVertex3hNV = openglGetProcAddress('glVertex3hNV')
    glVertex3hvNV = openglGetProcAddress('glVertex3hvNV')
    glVertex4hNV = openglGetProcAddress('glVertex4hNV')
    glVertex4hvNV = openglGetProcAddress('glVertex4hvNV')
    glVertexArrayAttribBinding = openglGetProcAddress('glVertexArrayAttribBinding')
    glVertexArrayAttribFormat = openglGetProcAddress('glVertexArrayAttribFormat')
    glVertexArrayAttribIFormat = openglGetProcAddress('glVertexArrayAttribIFormat')
    glVertexArrayAttribLFormat = openglGetProcAddress('glVertexArrayAttribLFormat')
    glVertexArrayBindingDivisor = openglGetProcAddress('glVertexArrayBindingDivisor')
    glVertexArrayBindVertexBufferEXT = openglGetProcAddress('glVertexArrayBindVertexBufferEXT')
    glVertexArrayColorOffsetEXT = openglGetProcAddress('glVertexArrayColorOffsetEXT')
    glVertexArrayEdgeFlagOffsetEXT = openglGetProcAddress('glVertexArrayEdgeFlagOffsetEXT')
    glVertexArrayElementBuffer = openglGetProcAddress('glVertexArrayElementBuffer')
    glVertexArrayFogCoordOffsetEXT = openglGetProcAddress('glVertexArrayFogCoordOffsetEXT')
    glVertexArrayIndexOffsetEXT = openglGetProcAddress('glVertexArrayIndexOffsetEXT')
    glVertexArrayMultiTexCoordOffsetEXT = openglGetProcAddress('glVertexArrayMultiTexCoordOffsetEXT')
    glVertexArrayNormalOffsetEXT = openglGetProcAddress('glVertexArrayNormalOffsetEXT')
    glVertexArrayParameteriAPPLE = openglGetProcAddress('glVertexArrayParameteriAPPLE')
    glVertexArrayRangeAPPLE = openglGetProcAddress('glVertexArrayRangeAPPLE')
    glVertexArrayRangeNV = openglGetProcAddress('glVertexArrayRangeNV')
    glVertexArraySecondaryColorOffsetEXT = openglGetProcAddress('glVertexArraySecondaryColorOffsetEXT')
    glVertexArrayTexCoordOffsetEXT = openglGetProcAddress('glVertexArrayTexCoordOffsetEXT')
    glVertexArrayVertexAttribBindingEXT = openglGetProcAddress('glVertexArrayVertexAttribBindingEXT')
    glVertexArrayVertexAttribDivisorEXT = openglGetProcAddress('glVertexArrayVertexAttribDivisorEXT')
    glVertexArrayVertexAttribFormatEXT = openglGetProcAddress('glVertexArrayVertexAttribFormatEXT')
    glVertexArrayVertexAttribIFormatEXT = openglGetProcAddress('glVertexArrayVertexAttribIFormatEXT')
    glVertexArrayVertexAttribIOffsetEXT = openglGetProcAddress('glVertexArrayVertexAttribIOffsetEXT')
    glVertexArrayVertexAttribLFormatEXT = openglGetProcAddress('glVertexArrayVertexAttribLFormatEXT')
    glVertexArrayVertexAttribLOffsetEXT = openglGetProcAddress('glVertexArrayVertexAttribLOffsetEXT')
    glVertexArrayVertexAttribOffsetEXT = openglGetProcAddress('glVertexArrayVertexAttribOffsetEXT')
    glVertexArrayVertexBindingDivisorEXT = openglGetProcAddress('glVertexArrayVertexBindingDivisorEXT')
    glVertexArrayVertexBuffer = openglGetProcAddress('glVertexArrayVertexBuffer')
    glVertexArrayVertexBuffers = openglGetProcAddress('glVertexArrayVertexBuffers')
    glVertexArrayVertexOffsetEXT = openglGetProcAddress('glVertexArrayVertexOffsetEXT')
    glVertexAttrib1dARB = openglGetProcAddress('glVertexAttrib1dARB')
    glVertexAttrib1dNV = openglGetProcAddress('glVertexAttrib1dNV')
    glVertexAttrib1d = openglGetProcAddress('glVertexAttrib1d')
    glVertexAttrib1dvARB = openglGetProcAddress('glVertexAttrib1dvARB')
    glVertexAttrib1dvNV = openglGetProcAddress('glVertexAttrib1dvNV')
    glVertexAttrib1dv = openglGetProcAddress('glVertexAttrib1dv')
    glVertexAttrib1fARB = openglGetProcAddress('glVertexAttrib1fARB')
    glVertexAttrib1fNV = openglGetProcAddress('glVertexAttrib1fNV')
    glVertexAttrib1f = openglGetProcAddress('glVertexAttrib1f')
    glVertexAttrib1fvARB = openglGetProcAddress('glVertexAttrib1fvARB')
    glVertexAttrib1fvNV = openglGetProcAddress('glVertexAttrib1fvNV')
    glVertexAttrib1fv = openglGetProcAddress('glVertexAttrib1fv')
    glVertexAttrib1hNV = openglGetProcAddress('glVertexAttrib1hNV')
    glVertexAttrib1hvNV = openglGetProcAddress('glVertexAttrib1hvNV')
    glVertexAttrib1sARB = openglGetProcAddress('glVertexAttrib1sARB')
    glVertexAttrib1sNV = openglGetProcAddress('glVertexAttrib1sNV')
    glVertexAttrib1s = openglGetProcAddress('glVertexAttrib1s')
    glVertexAttrib1svARB = openglGetProcAddress('glVertexAttrib1svARB')
    glVertexAttrib1svNV = openglGetProcAddress('glVertexAttrib1svNV')
    glVertexAttrib1sv = openglGetProcAddress('glVertexAttrib1sv')
    glVertexAttrib2dARB = openglGetProcAddress('glVertexAttrib2dARB')
    glVertexAttrib2dNV = openglGetProcAddress('glVertexAttrib2dNV')
    glVertexAttrib2d = openglGetProcAddress('glVertexAttrib2d')
    glVertexAttrib2dvARB = openglGetProcAddress('glVertexAttrib2dvARB')
    glVertexAttrib2dvNV = openglGetProcAddress('glVertexAttrib2dvNV')
    glVertexAttrib2dv = openglGetProcAddress('glVertexAttrib2dv')
    glVertexAttrib2fARB = openglGetProcAddress('glVertexAttrib2fARB')
    glVertexAttrib2fNV = openglGetProcAddress('glVertexAttrib2fNV')
    glVertexAttrib2f = openglGetProcAddress('glVertexAttrib2f')
    glVertexAttrib2fvARB = openglGetProcAddress('glVertexAttrib2fvARB')
    glVertexAttrib2fvNV = openglGetProcAddress('glVertexAttrib2fvNV')
    glVertexAttrib2fv = openglGetProcAddress('glVertexAttrib2fv')
    glVertexAttrib2hNV = openglGetProcAddress('glVertexAttrib2hNV')
    glVertexAttrib2hvNV = openglGetProcAddress('glVertexAttrib2hvNV')
    glVertexAttrib2sARB = openglGetProcAddress('glVertexAttrib2sARB')
    glVertexAttrib2sNV = openglGetProcAddress('glVertexAttrib2sNV')
    glVertexAttrib2s = openglGetProcAddress('glVertexAttrib2s')
    glVertexAttrib2svARB = openglGetProcAddress('glVertexAttrib2svARB')
    glVertexAttrib2svNV = openglGetProcAddress('glVertexAttrib2svNV')
    glVertexAttrib2sv = openglGetProcAddress('glVertexAttrib2sv')
    glVertexAttrib3dARB = openglGetProcAddress('glVertexAttrib3dARB')
    glVertexAttrib3dNV = openglGetProcAddress('glVertexAttrib3dNV')
    glVertexAttrib3d = openglGetProcAddress('glVertexAttrib3d')
    glVertexAttrib3dvARB = openglGetProcAddress('glVertexAttrib3dvARB')
    glVertexAttrib3dvNV = openglGetProcAddress('glVertexAttrib3dvNV')
    glVertexAttrib3dv = openglGetProcAddress('glVertexAttrib3dv')
    glVertexAttrib3fARB = openglGetProcAddress('glVertexAttrib3fARB')
    glVertexAttrib3fNV = openglGetProcAddress('glVertexAttrib3fNV')
    glVertexAttrib3f = openglGetProcAddress('glVertexAttrib3f')
    glVertexAttrib3fvARB = openglGetProcAddress('glVertexAttrib3fvARB')
    glVertexAttrib3fvNV = openglGetProcAddress('glVertexAttrib3fvNV')
    glVertexAttrib3fv = openglGetProcAddress('glVertexAttrib3fv')
    glVertexAttrib3hNV = openglGetProcAddress('glVertexAttrib3hNV')
    glVertexAttrib3hvNV = openglGetProcAddress('glVertexAttrib3hvNV')
    glVertexAttrib3sARB = openglGetProcAddress('glVertexAttrib3sARB')
    glVertexAttrib3sNV = openglGetProcAddress('glVertexAttrib3sNV')
    glVertexAttrib3s = openglGetProcAddress('glVertexAttrib3s')
    glVertexAttrib3svARB = openglGetProcAddress('glVertexAttrib3svARB')
    glVertexAttrib3svNV = openglGetProcAddress('glVertexAttrib3svNV')
    glVertexAttrib3sv = openglGetProcAddress('glVertexAttrib3sv')
    glVertexAttrib4bvARB = openglGetProcAddress('glVertexAttrib4bvARB')
    glVertexAttrib4bv = openglGetProcAddress('glVertexAttrib4bv')
    glVertexAttrib4dARB = openglGetProcAddress('glVertexAttrib4dARB')
    glVertexAttrib4dNV = openglGetProcAddress('glVertexAttrib4dNV')
    glVertexAttrib4d = openglGetProcAddress('glVertexAttrib4d')
    glVertexAttrib4dvARB = openglGetProcAddress('glVertexAttrib4dvARB')
    glVertexAttrib4dvNV = openglGetProcAddress('glVertexAttrib4dvNV')
    glVertexAttrib4dv = openglGetProcAddress('glVertexAttrib4dv')
    glVertexAttrib4fARB = openglGetProcAddress('glVertexAttrib4fARB')
    glVertexAttrib4fNV = openglGetProcAddress('glVertexAttrib4fNV')
    glVertexAttrib4f = openglGetProcAddress('glVertexAttrib4f')
    glVertexAttrib4fvARB = openglGetProcAddress('glVertexAttrib4fvARB')
    glVertexAttrib4fvNV = openglGetProcAddress('glVertexAttrib4fvNV')
    glVertexAttrib4fv = openglGetProcAddress('glVertexAttrib4fv')
    glVertexAttrib4hNV = openglGetProcAddress('glVertexAttrib4hNV')
    glVertexAttrib4hvNV = openglGetProcAddress('glVertexAttrib4hvNV')
    glVertexAttrib4ivARB = openglGetProcAddress('glVertexAttrib4ivARB')
    glVertexAttrib4iv = openglGetProcAddress('glVertexAttrib4iv')
    glVertexAttrib4NbvARB = openglGetProcAddress('glVertexAttrib4NbvARB')
    glVertexAttrib4Nbv = openglGetProcAddress('glVertexAttrib4Nbv')
    glVertexAttrib4NivARB = openglGetProcAddress('glVertexAttrib4NivARB')
    glVertexAttrib4Niv = openglGetProcAddress('glVertexAttrib4Niv')
    glVertexAttrib4NsvARB = openglGetProcAddress('glVertexAttrib4NsvARB')
    glVertexAttrib4Nsv = openglGetProcAddress('glVertexAttrib4Nsv')
    glVertexAttrib4NubARB = openglGetProcAddress('glVertexAttrib4NubARB')
    glVertexAttrib4Nub = openglGetProcAddress('glVertexAttrib4Nub')
    glVertexAttrib4NubvARB = openglGetProcAddress('glVertexAttrib4NubvARB')
    glVertexAttrib4Nubv = openglGetProcAddress('glVertexAttrib4Nubv')
    glVertexAttrib4NuivARB = openglGetProcAddress('glVertexAttrib4NuivARB')
    glVertexAttrib4Nuiv = openglGetProcAddress('glVertexAttrib4Nuiv')
    glVertexAttrib4NusvARB = openglGetProcAddress('glVertexAttrib4NusvARB')
    glVertexAttrib4Nusv = openglGetProcAddress('glVertexAttrib4Nusv')
    glVertexAttrib4sARB = openglGetProcAddress('glVertexAttrib4sARB')
    glVertexAttrib4sNV = openglGetProcAddress('glVertexAttrib4sNV')
    glVertexAttrib4s = openglGetProcAddress('glVertexAttrib4s')
    glVertexAttrib4svARB = openglGetProcAddress('glVertexAttrib4svARB')
    glVertexAttrib4svNV = openglGetProcAddress('glVertexAttrib4svNV')
    glVertexAttrib4sv = openglGetProcAddress('glVertexAttrib4sv')
    glVertexAttrib4ubNV = openglGetProcAddress('glVertexAttrib4ubNV')
    glVertexAttrib4ubvARB = openglGetProcAddress('glVertexAttrib4ubvARB')
    glVertexAttrib4ubvNV = openglGetProcAddress('glVertexAttrib4ubvNV')
    glVertexAttrib4ubv = openglGetProcAddress('glVertexAttrib4ubv')
    glVertexAttrib4uivARB = openglGetProcAddress('glVertexAttrib4uivARB')
    glVertexAttrib4uiv = openglGetProcAddress('glVertexAttrib4uiv')
    glVertexAttrib4usvARB = openglGetProcAddress('glVertexAttrib4usvARB')
    glVertexAttrib4usv = openglGetProcAddress('glVertexAttrib4usv')
    glVertexAttribArrayObjectATI = openglGetProcAddress('glVertexAttribArrayObjectATI')
    glVertexAttribBinding = openglGetProcAddress('glVertexAttribBinding')
    glVertexAttribDivisorANGLE = openglGetProcAddress('glVertexAttribDivisorANGLE')
    glVertexAttribDivisorARB = openglGetProcAddress('glVertexAttribDivisorARB')
    glVertexAttribDivisor = openglGetProcAddress('glVertexAttribDivisor')
    glVertexAttribFormatNV = openglGetProcAddress('glVertexAttribFormatNV')
    glVertexAttribFormat = openglGetProcAddress('glVertexAttribFormat')
    glVertexAttribI1iEXT = openglGetProcAddress('glVertexAttribI1iEXT')
    glVertexAttribI1i = openglGetProcAddress('glVertexAttribI1i')
    glVertexAttribI1ivEXT = openglGetProcAddress('glVertexAttribI1ivEXT')
    glVertexAttribI1iv = openglGetProcAddress('glVertexAttribI1iv')
    glVertexAttribI1uiEXT = openglGetProcAddress('glVertexAttribI1uiEXT')
    glVertexAttribI1ui = openglGetProcAddress('glVertexAttribI1ui')
    glVertexAttribI1uivEXT = openglGetProcAddress('glVertexAttribI1uivEXT')
    glVertexAttribI1uiv = openglGetProcAddress('glVertexAttribI1uiv')
    glVertexAttribI2iEXT = openglGetProcAddress('glVertexAttribI2iEXT')
    glVertexAttribI2i = openglGetProcAddress('glVertexAttribI2i')
    glVertexAttribI2ivEXT = openglGetProcAddress('glVertexAttribI2ivEXT')
    glVertexAttribI2iv = openglGetProcAddress('glVertexAttribI2iv')
    glVertexAttribI2uiEXT = openglGetProcAddress('glVertexAttribI2uiEXT')
    glVertexAttribI2ui = openglGetProcAddress('glVertexAttribI2ui')
    glVertexAttribI2uivEXT = openglGetProcAddress('glVertexAttribI2uivEXT')
    glVertexAttribI2uiv = openglGetProcAddress('glVertexAttribI2uiv')
    glVertexAttribI3iEXT = openglGetProcAddress('glVertexAttribI3iEXT')
    glVertexAttribI3i = openglGetProcAddress('glVertexAttribI3i')
    glVertexAttribI3ivEXT = openglGetProcAddress('glVertexAttribI3ivEXT')
    glVertexAttribI3iv = openglGetProcAddress('glVertexAttribI3iv')
    glVertexAttribI3uiEXT = openglGetProcAddress('glVertexAttribI3uiEXT')
    glVertexAttribI3ui = openglGetProcAddress('glVertexAttribI3ui')
    glVertexAttribI3uivEXT = openglGetProcAddress('glVertexAttribI3uivEXT')
    glVertexAttribI3uiv = openglGetProcAddress('glVertexAttribI3uiv')
    glVertexAttribI4bvEXT = openglGetProcAddress('glVertexAttribI4bvEXT')
    glVertexAttribI4bv = openglGetProcAddress('glVertexAttribI4bv')
    glVertexAttribI4iEXT = openglGetProcAddress('glVertexAttribI4iEXT')
    glVertexAttribI4i = openglGetProcAddress('glVertexAttribI4i')
    glVertexAttribI4ivEXT = openglGetProcAddress('glVertexAttribI4ivEXT')
    glVertexAttribI4iv = openglGetProcAddress('glVertexAttribI4iv')
    glVertexAttribI4svEXT = openglGetProcAddress('glVertexAttribI4svEXT')
    glVertexAttribI4sv = openglGetProcAddress('glVertexAttribI4sv')
    glVertexAttribI4ubvEXT = openglGetProcAddress('glVertexAttribI4ubvEXT')
    glVertexAttribI4ubv = openglGetProcAddress('glVertexAttribI4ubv')
    glVertexAttribI4uiEXT = openglGetProcAddress('glVertexAttribI4uiEXT')
    glVertexAttribI4ui = openglGetProcAddress('glVertexAttribI4ui')
    glVertexAttribI4uivEXT = openglGetProcAddress('glVertexAttribI4uivEXT')
    glVertexAttribI4uiv = openglGetProcAddress('glVertexAttribI4uiv')
    glVertexAttribI4usvEXT = openglGetProcAddress('glVertexAttribI4usvEXT')
    glVertexAttribI4usv = openglGetProcAddress('glVertexAttribI4usv')
    glVertexAttribIFormatNV = openglGetProcAddress('glVertexAttribIFormatNV')
    glVertexAttribIFormat = openglGetProcAddress('glVertexAttribIFormat')
    glVertexAttribIPointerEXT = openglGetProcAddress('glVertexAttribIPointerEXT')
    glVertexAttribIPointer = openglGetProcAddress('glVertexAttribIPointer')
    glVertexAttribL1dEXT = openglGetProcAddress('glVertexAttribL1dEXT')
    glVertexAttribL1d = openglGetProcAddress('glVertexAttribL1d')
    glVertexAttribL1dvEXT = openglGetProcAddress('glVertexAttribL1dvEXT')
    glVertexAttribL1dv = openglGetProcAddress('glVertexAttribL1dv')
    glVertexAttribL1i64NV = openglGetProcAddress('glVertexAttribL1i64NV')
    glVertexAttribL1i64vNV = openglGetProcAddress('glVertexAttribL1i64vNV')
    glVertexAttribL1ui64ARB = openglGetProcAddress('glVertexAttribL1ui64ARB')
    glVertexAttribL1ui64NV = openglGetProcAddress('glVertexAttribL1ui64NV')
    glVertexAttribL1ui64vARB = openglGetProcAddress('glVertexAttribL1ui64vARB')
    glVertexAttribL1ui64vNV = openglGetProcAddress('glVertexAttribL1ui64vNV')
    glVertexAttribL2dEXT = openglGetProcAddress('glVertexAttribL2dEXT')
    glVertexAttribL2d = openglGetProcAddress('glVertexAttribL2d')
    glVertexAttribL2dvEXT = openglGetProcAddress('glVertexAttribL2dvEXT')
    glVertexAttribL2dv = openglGetProcAddress('glVertexAttribL2dv')
    glVertexAttribL2i64NV = openglGetProcAddress('glVertexAttribL2i64NV')
    glVertexAttribL2i64vNV = openglGetProcAddress('glVertexAttribL2i64vNV')
    glVertexAttribL2ui64NV = openglGetProcAddress('glVertexAttribL2ui64NV')
    glVertexAttribL2ui64vNV = openglGetProcAddress('glVertexAttribL2ui64vNV')
    glVertexAttribL3dEXT = openglGetProcAddress('glVertexAttribL3dEXT')
    glVertexAttribL3d = openglGetProcAddress('glVertexAttribL3d')
    glVertexAttribL3dvEXT = openglGetProcAddress('glVertexAttribL3dvEXT')
    glVertexAttribL3dv = openglGetProcAddress('glVertexAttribL3dv')
    glVertexAttribL3i64NV = openglGetProcAddress('glVertexAttribL3i64NV')
    glVertexAttribL3i64vNV = openglGetProcAddress('glVertexAttribL3i64vNV')
    glVertexAttribL3ui64NV = openglGetProcAddress('glVertexAttribL3ui64NV')
    glVertexAttribL3ui64vNV = openglGetProcAddress('glVertexAttribL3ui64vNV')
    glVertexAttribL4dEXT = openglGetProcAddress('glVertexAttribL4dEXT')
    glVertexAttribL4d = openglGetProcAddress('glVertexAttribL4d')
    glVertexAttribL4dvEXT = openglGetProcAddress('glVertexAttribL4dvEXT')
    glVertexAttribL4dv = openglGetProcAddress('glVertexAttribL4dv')
    glVertexAttribL4i64NV = openglGetProcAddress('glVertexAttribL4i64NV')
    glVertexAttribL4i64vNV = openglGetProcAddress('glVertexAttribL4i64vNV')
    glVertexAttribL4ui64NV = openglGetProcAddress('glVertexAttribL4ui64NV')
    glVertexAttribL4ui64vNV = openglGetProcAddress('glVertexAttribL4ui64vNV')
    glVertexAttribLFormatNV = openglGetProcAddress('glVertexAttribLFormatNV')
    glVertexAttribLFormat = openglGetProcAddress('glVertexAttribLFormat')
    glVertexAttribLPointerEXT = openglGetProcAddress('glVertexAttribLPointerEXT')
    glVertexAttribLPointer = openglGetProcAddress('glVertexAttribLPointer')
    glVertexAttribP1ui = openglGetProcAddress('glVertexAttribP1ui')
    glVertexAttribP1uiv = openglGetProcAddress('glVertexAttribP1uiv')
    glVertexAttribP2ui = openglGetProcAddress('glVertexAttribP2ui')
    glVertexAttribP2uiv = openglGetProcAddress('glVertexAttribP2uiv')
    glVertexAttribP3ui = openglGetProcAddress('glVertexAttribP3ui')
    glVertexAttribP3uiv = openglGetProcAddress('glVertexAttribP3uiv')
    glVertexAttribP4ui = openglGetProcAddress('glVertexAttribP4ui')
    glVertexAttribP4uiv = openglGetProcAddress('glVertexAttribP4uiv')
    glVertexAttribParameteriAMD = openglGetProcAddress('glVertexAttribParameteriAMD')
    glVertexAttribPointerARB = openglGetProcAddress('glVertexAttribPointerARB')
    glVertexAttribPointerNV = openglGetProcAddress('glVertexAttribPointerNV')
    glVertexAttribPointer = openglGetProcAddress('glVertexAttribPointer')
    glVertexAttribs1dvNV = openglGetProcAddress('glVertexAttribs1dvNV')
    glVertexAttribs1fvNV = openglGetProcAddress('glVertexAttribs1fvNV')
    glVertexAttribs1hvNV = openglGetProcAddress('glVertexAttribs1hvNV')
    glVertexAttribs1svNV = openglGetProcAddress('glVertexAttribs1svNV')
    glVertexAttribs2dvNV = openglGetProcAddress('glVertexAttribs2dvNV')
    glVertexAttribs2fvNV = openglGetProcAddress('glVertexAttribs2fvNV')
    glVertexAttribs2hvNV = openglGetProcAddress('glVertexAttribs2hvNV')
    glVertexAttribs2svNV = openglGetProcAddress('glVertexAttribs2svNV')
    glVertexAttribs3dvNV = openglGetProcAddress('glVertexAttribs3dvNV')
    glVertexAttribs3fvNV = openglGetProcAddress('glVertexAttribs3fvNV')
    glVertexAttribs3hvNV = openglGetProcAddress('glVertexAttribs3hvNV')
    glVertexAttribs3svNV = openglGetProcAddress('glVertexAttribs3svNV')
    glVertexAttribs4dvNV = openglGetProcAddress('glVertexAttribs4dvNV')
    glVertexAttribs4fvNV = openglGetProcAddress('glVertexAttribs4fvNV')
    glVertexAttribs4hvNV = openglGetProcAddress('glVertexAttribs4hvNV')
    glVertexAttribs4svNV = openglGetProcAddress('glVertexAttribs4svNV')
    glVertexAttribs4ubvNV = openglGetProcAddress('glVertexAttribs4ubvNV')
    glVertexBindingDivisor = openglGetProcAddress('glVertexBindingDivisor')
    glVertexBlendARB = openglGetProcAddress('glVertexBlendARB')
    glVertexBlendEnvfATI = openglGetProcAddress('glVertexBlendEnvfATI')
    glVertexBlendEnviATI = openglGetProcAddress('glVertexBlendEnviATI')
    glVertexFormatNV = openglGetProcAddress('glVertexFormatNV')
    glVertexP2ui = openglGetProcAddress('glVertexP2ui')
    glVertexP2uiv = openglGetProcAddress('glVertexP2uiv')
    glVertexP3ui = openglGetProcAddress('glVertexP3ui')
    glVertexP3uiv = openglGetProcAddress('glVertexP3uiv')
    glVertexP4ui = openglGetProcAddress('glVertexP4ui')
    glVertexP4uiv = openglGetProcAddress('glVertexP4uiv')
    glVertexPointerEXT = openglGetProcAddress('glVertexPointerEXT')
    glVertexPointerListIBM = openglGetProcAddress('glVertexPointerListIBM')
    glVertexPointervINTEL = openglGetProcAddress('glVertexPointervINTEL')
    glVertexStream1dATI = openglGetProcAddress('glVertexStream1dATI')
    glVertexStream1dvATI = openglGetProcAddress('glVertexStream1dvATI')
    glVertexStream1fATI = openglGetProcAddress('glVertexStream1fATI')
    glVertexStream1fvATI = openglGetProcAddress('glVertexStream1fvATI')
    glVertexStream1iATI = openglGetProcAddress('glVertexStream1iATI')
    glVertexStream1ivATI = openglGetProcAddress('glVertexStream1ivATI')
    glVertexStream1sATI = openglGetProcAddress('glVertexStream1sATI')
    glVertexStream1svATI = openglGetProcAddress('glVertexStream1svATI')
    glVertexStream2dATI = openglGetProcAddress('glVertexStream2dATI')
    glVertexStream2dvATI = openglGetProcAddress('glVertexStream2dvATI')
    glVertexStream2fATI = openglGetProcAddress('glVertexStream2fATI')
    glVertexStream2fvATI = openglGetProcAddress('glVertexStream2fvATI')
    glVertexStream2iATI = openglGetProcAddress('glVertexStream2iATI')
    glVertexStream2ivATI = openglGetProcAddress('glVertexStream2ivATI')
    glVertexStream2sATI = openglGetProcAddress('glVertexStream2sATI')
    glVertexStream2svATI = openglGetProcAddress('glVertexStream2svATI')
    glVertexStream3dATI = openglGetProcAddress('glVertexStream3dATI')
    glVertexStream3dvATI = openglGetProcAddress('glVertexStream3dvATI')
    glVertexStream3fATI = openglGetProcAddress('glVertexStream3fATI')
    glVertexStream3fvATI = openglGetProcAddress('glVertexStream3fvATI')
    glVertexStream3iATI = openglGetProcAddress('glVertexStream3iATI')
    glVertexStream3ivATI = openglGetProcAddress('glVertexStream3ivATI')
    glVertexStream3sATI = openglGetProcAddress('glVertexStream3sATI')
    glVertexStream3svATI = openglGetProcAddress('glVertexStream3svATI')
    glVertexStream4dATI = openglGetProcAddress('glVertexStream4dATI')
    glVertexStream4dvATI = openglGetProcAddress('glVertexStream4dvATI')
    glVertexStream4fATI = openglGetProcAddress('glVertexStream4fATI')
    glVertexStream4fvATI = openglGetProcAddress('glVertexStream4fvATI')
    glVertexStream4iATI = openglGetProcAddress('glVertexStream4iATI')
    glVertexStream4ivATI = openglGetProcAddress('glVertexStream4ivATI')
    glVertexStream4sATI = openglGetProcAddress('glVertexStream4sATI')
    glVertexStream4svATI = openglGetProcAddress('glVertexStream4svATI')
    glVertexWeightfEXT = openglGetProcAddress('glVertexWeightfEXT')
    glVertexWeightfvEXT = openglGetProcAddress('glVertexWeightfvEXT')
    glVertexWeighthNV = openglGetProcAddress('glVertexWeighthNV')
    glVertexWeighthvNV = openglGetProcAddress('glVertexWeighthvNV')
    glVertexWeightPointerEXT = openglGetProcAddress('glVertexWeightPointerEXT')
    glVideoCaptureStreamParameterdvNV = openglGetProcAddress('glVideoCaptureStreamParameterdvNV')
    glVideoCaptureStreamParameterfvNV = openglGetProcAddress('glVideoCaptureStreamParameterfvNV')
    glVideoCaptureStreamParameterivNV = openglGetProcAddress('glVideoCaptureStreamParameterivNV')
    glViewportArrayv = openglGetProcAddress('glViewportArrayv')
    glViewportIndexedf = openglGetProcAddress('glViewportIndexedf')
    glViewportIndexedfv = openglGetProcAddress('glViewportIndexedfv')
    glWaitSync = openglGetProcAddress('glWaitSync')
    glWeightbvARB = openglGetProcAddress('glWeightbvARB')
    glWeightdvARB = openglGetProcAddress('glWeightdvARB')
    glWeightfvARB = openglGetProcAddress('glWeightfvARB')
    glWeightivARB = openglGetProcAddress('glWeightivARB')
    glWeightPathsNV = openglGetProcAddress('glWeightPathsNV')
    glWeightPointerARB = openglGetProcAddress('glWeightPointerARB')
    glWeightsvARB = openglGetProcAddress('glWeightsvARB')
    glWeightubvARB = openglGetProcAddress('glWeightubvARB')
    glWeightuivARB = openglGetProcAddress('glWeightuivARB')
    glWeightusvARB = openglGetProcAddress('glWeightusvARB')
    glWindowPos2dARB = openglGetProcAddress('glWindowPos2dARB')
    glWindowPos2dMESA = openglGetProcAddress('glWindowPos2dMESA')
    glWindowPos2d = openglGetProcAddress('glWindowPos2d')
    glWindowPos2dvARB = openglGetProcAddress('glWindowPos2dvARB')
    glWindowPos2dvMESA = openglGetProcAddress('glWindowPos2dvMESA')
    glWindowPos2dv = openglGetProcAddress('glWindowPos2dv')
    glWindowPos2fARB = openglGetProcAddress('glWindowPos2fARB')
    glWindowPos2fMESA = openglGetProcAddress('glWindowPos2fMESA')
    glWindowPos2f = openglGetProcAddress('glWindowPos2f')
    glWindowPos2fvARB = openglGetProcAddress('glWindowPos2fvARB')
    glWindowPos2fvMESA = openglGetProcAddress('glWindowPos2fvMESA')
    glWindowPos2fv = openglGetProcAddress('glWindowPos2fv')
    glWindowPos2iARB = openglGetProcAddress('glWindowPos2iARB')
    glWindowPos2iMESA = openglGetProcAddress('glWindowPos2iMESA')
    glWindowPos2i = openglGetProcAddress('glWindowPos2i')
    glWindowPos2ivARB = openglGetProcAddress('glWindowPos2ivARB')
    glWindowPos2ivMESA = openglGetProcAddress('glWindowPos2ivMESA')
    glWindowPos2iv = openglGetProcAddress('glWindowPos2iv')
    glWindowPos2sARB = openglGetProcAddress('glWindowPos2sARB')
    glWindowPos2sMESA = openglGetProcAddress('glWindowPos2sMESA')
    glWindowPos2s = openglGetProcAddress('glWindowPos2s')
    glWindowPos2svARB = openglGetProcAddress('glWindowPos2svARB')
    glWindowPos2svMESA = openglGetProcAddress('glWindowPos2svMESA')
    glWindowPos2sv = openglGetProcAddress('glWindowPos2sv')
    glWindowPos3dARB = openglGetProcAddress('glWindowPos3dARB')
    glWindowPos3dMESA = openglGetProcAddress('glWindowPos3dMESA')
    glWindowPos3d = openglGetProcAddress('glWindowPos3d')
    glWindowPos3dvARB = openglGetProcAddress('glWindowPos3dvARB')
    glWindowPos3dvMESA = openglGetProcAddress('glWindowPos3dvMESA')
    glWindowPos3dv = openglGetProcAddress('glWindowPos3dv')
    glWindowPos3fARB = openglGetProcAddress('glWindowPos3fARB')
    glWindowPos3fMESA = openglGetProcAddress('glWindowPos3fMESA')
    glWindowPos3f = openglGetProcAddress('glWindowPos3f')
    glWindowPos3fvARB = openglGetProcAddress('glWindowPos3fvARB')
    glWindowPos3fvMESA = openglGetProcAddress('glWindowPos3fvMESA')
    glWindowPos3fv = openglGetProcAddress('glWindowPos3fv')
    glWindowPos3iARB = openglGetProcAddress('glWindowPos3iARB')
    glWindowPos3iMESA = openglGetProcAddress('glWindowPos3iMESA')
    glWindowPos3i = openglGetProcAddress('glWindowPos3i')
    glWindowPos3ivARB = openglGetProcAddress('glWindowPos3ivARB')
    glWindowPos3ivMESA = openglGetProcAddress('glWindowPos3ivMESA')
    glWindowPos3iv = openglGetProcAddress('glWindowPos3iv')
    glWindowPos3sARB = openglGetProcAddress('glWindowPos3sARB')
    glWindowPos3sMESA = openglGetProcAddress('glWindowPos3sMESA')
    glWindowPos3s = openglGetProcAddress('glWindowPos3s')
    glWindowPos3svARB = openglGetProcAddress('glWindowPos3svARB')
    glWindowPos3svMESA = openglGetProcAddress('glWindowPos3svMESA')
    glWindowPos3sv = openglGetProcAddress('glWindowPos3sv')
    glWindowPos4dMESA = openglGetProcAddress('glWindowPos4dMESA')
    glWindowPos4dvMESA = openglGetProcAddress('glWindowPos4dvMESA')
    glWindowPos4fMESA = openglGetProcAddress('glWindowPos4fMESA')
    glWindowPos4fvMESA = openglGetProcAddress('glWindowPos4fvMESA')
    glWindowPos4iMESA = openglGetProcAddress('glWindowPos4iMESA')
    glWindowPos4ivMESA = openglGetProcAddress('glWindowPos4ivMESA')
    glWindowPos4sMESA = openglGetProcAddress('glWindowPos4sMESA')
    glWindowPos4svMESA = openglGetProcAddress('glWindowPos4svMESA')
    glWriteMaskEXT = openglGetProcAddress('glWriteMaskEXT')
    dlclose(_opengl_shared_object)
}
foreign glfwInit() int
foreign glfwTerminate() void
foreign glfwGetVersion(*int, *int, *int) void
foreign glfwGetVersionString() *ubyte
foreign glfwSetErrorCallback(ptr) ptr
foreign glfwGetMonitors(*int) **GLFWmonitor
foreign glfwGetPrimaryMonitor() *GLFWmonitor
foreign glfwGetMonitorPos(*GLFWmonitor, *int, *int) void
foreign glfwGetMonitorPhysicalSize(*GLFWmonitor, *int, *int) void
foreign glfwGetMonitorName(*GLFWmonitor) *ubyte
foreign glfwSetMonitorCallback(ptr) ptr
foreign glfwGetVideoModes(*GLFWmonitor, *int) *GLFWvidmode
foreign glfwGetVideoMode(*GLFWmonitor) *GLFWvidmode
foreign glfwSetGamma(*GLFWmonitor, float) void
foreign glfwGetGammaRamp(*GLFWmonitor) *GLFWgammaramp
foreign glfwSetGammaRamp(*GLFWmonitor, *GLFWgammaramp) void
foreign glfwDefaultWindowHints() void
foreign glfwWindowHint(int, int) void
foreign glfwCreateWindow(int, int, *ubyte, *GLFWmonitor, *GLFWwindow) *GLFWwindow
foreign glfwDestroyWindow(*GLFWwindow) void
foreign glfwWindowShouldClose(*GLFWwindow) int
foreign glfwSetWindowShouldClose(*GLFWwindow, int) void
foreign glfwSetWindowTitle(*GLFWwindow, *ubyte) void
foreign glfwSetWindowIcon(*GLFWwindow, int, *GLFWimage) void
foreign glfwGetWindowPos(*GLFWwindow, *int, *int) void
foreign glfwSetWindowPos(*GLFWwindow, int, int) void
foreign glfwGetWindowSize(*GLFWwindow, *int, *int) void
foreign glfwSetWindowSizeLimits(*GLFWwindow, int, int, int, int) void
foreign glfwSetWindowAspectRatio(*GLFWwindow, int, int) void
foreign glfwSetWindowSize(*GLFWwindow, int, int) void
foreign glfwGetFramebufferSize(*GLFWwindow, *int, *int) void
foreign glfwGetWindowFrameSize(*GLFWwindow, *int, *int, *int, *int) void
foreign glfwIconifyWindow(*GLFWwindow) void
foreign glfwRestoreWindow(*GLFWwindow) void
foreign glfwMaximizeWindow(*GLFWwindow) void
foreign glfwShowWindow(*GLFWwindow) void
foreign glfwHideWindow(*GLFWwindow) void
foreign glfwFocusWindow(*GLFWwindow) void
foreign glfwGetWindowMonitor(*GLFWwindow) *GLFWmonitor
foreign glfwSetWindowMonitor(*GLFWwindow, *GLFWmonitor, int, int, int, int, int) void
foreign glfwGetWindowAttrib(*GLFWwindow, int) int
foreign glfwSetWindowUserPointer(*GLFWwindow, ptr) void
foreign glfwGetWindowUserPointer(*GLFWwindow) ptr
foreign glfwSetWindowPosCallback(*GLFWwindow, ptr) ptr
foreign glfwSetWindowSizeCallback(*GLFWwindow, ptr) ptr
foreign glfwSetWindowCloseCallback(*GLFWwindow, ptr) ptr
foreign glfwSetWindowRefreshCallback(*GLFWwindow, ptr) ptr
foreign glfwSetWindowFocusCallback(*GLFWwindow, ptr) ptr
foreign glfwSetWindowIconifyCallback(*GLFWwindow, ptr) ptr
foreign glfwSetFramebufferSizeCallback(*GLFWwindow, ptr) ptr
foreign glfwPollEvents() void
foreign glfwWaitEvents() void
foreign glfwWaitEventsTimeout(double) void
foreign glfwPostEmptyEvent() void
foreign glfwGetInputMode(*GLFWwindow, int) int
foreign glfwSetInputMode(*GLFWwindow, int, int) void
foreign glfwGetKeyName(int, int) *ubyte
foreign glfwGetKey(*GLFWwindow, int) int
foreign glfwGetMouseButton(*GLFWwindow, int) int
foreign glfwGetCursorPos(*GLFWwindow, *double, *double) void
foreign glfwSetCursorPos(*GLFWwindow, double, double) void
foreign glfwCreateCursor(*GLFWimage, int, int) *GLFWcursor
foreign glfwCreateStandardCursor(int) *GLFWcursor
foreign glfwDestroyCursor(*GLFWcursor) void
foreign glfwSetCursor(*GLFWwindow, *GLFWcursor) void
foreign glfwSetKeyCallback(*GLFWwindow, ptr) ptr
foreign glfwSetCharCallback(*GLFWwindow, ptr) ptr
foreign glfwSetCharModsCallback(*GLFWwindow, ptr) ptr
foreign glfwSetMouseButtonCallback(*GLFWwindow, ptr) ptr
foreign glfwSetCursorPosCallback(*GLFWwindow, ptr) ptr
foreign glfwSetCursorEnterCallback(*GLFWwindow, ptr) ptr
foreign glfwSetScrollCallback(*GLFWwindow, ptr) ptr
foreign glfwSetDropCallback(*GLFWwindow, ptr) ptr
foreign glfwJoystickPresent(int) int
foreign glfwGetJoystickAxes(int, *int) *float
foreign glfwGetJoystickButtons(int, *int) *ubyte
foreign glfwGetJoystickName(int) *ubyte
foreign glfwSetJoystickCallback(ptr) ptr
foreign glfwSetClipboardString(*GLFWwindow, *ubyte) void
foreign glfwGetClipboardString(*GLFWwindow) *ubyte
foreign glfwGetTime() double
foreign glfwSetTime(double) void
foreign glfwGetTimerValue() ulong
foreign glfwGetTimerFrequency() ulong
foreign glfwMakeContextCurrent(*GLFWwindow) void
foreign glfwGetCurrentContext() *GLFWwindow
foreign glfwSwapBuffers(*GLFWwindow) void
foreign glfwSwapInterval(int) void
foreign glfwExtensionSupported(*ubyte) int
foreign glfwGetProcAddress(*ubyte) GLFWglproc
foreign glfwVulkanSupported() int
foreign glfwGetRequiredInstanceExtensions(*uint) **ubyte
foreign stbi_load(*ubyte, *int, *int, *int, int) *ubyte
foreign stbi_image_free(*ubyte) void
foreign stbi_failure_reason() *ubyte
foreign clock() clock_t
foreign difftime(time_t, time_t) double
foreign mkdir(*tm) time_t
foreign time(*time_t) time_t
foreign asctime(*tm) *ubyte
foreign ctime(*time_t) *ubyte
foreign gmtime(*time_t) *tm
foreign localtime(*time_t) *tm
foreign strftime(*ubyte, usize, *ubyte, *tm) usize
foreign system(*ubyte) void
foreign exit(int) void
foreign abort() void
foreign atexit(func() void) void
foreign calloc(usize, usize) ptr
foreign free(ptr) void
foreign malloc(usize) ptr
foreign realloc(ptr, usize) ptr
foreign atof(*ubyte) double
foreign atoi(*ubyte) int
foreign atol(*ubyte) long
foreign strtod(*ubyte, **ubyte) double
foreign strtol(*ubyte, **ubyte, int) long
foreign strtoul(*ubyte, **ubyte, int) ulong
foreign abs(int) int
foreign labs(long) long
foreign getenv(*ubyte) *ubyte
foreign qsort(ptr, usize, usize, ptr) void
foreign bsearch(ptr, ptr, usize, usize, func(ptr, ptr) int) ptr
foreign rand() int
foreign srand(uint) void
foreign remove(*ubyte) int
foreign rename(*ubyte, *ubyte) int
foreign tmpfile() *FILE
foreign tmpnam(*ubyte) *ubyte
foreign fclose(*FILE) int
foreign fflush(*FILE) int
foreign fopen(*ubyte, *ubyte) *FILE
foreign freopen(*ubyte, *ubyte, *FILE) *FILE
foreign setbuf(*FILE, *ubyte) void
foreign setvbuf(*FILE, *ubyte, int, usize) int
foreign fgetc(*FILE) int
foreign fgets(*ubyte, int, *FILE) *ubyte
foreign fputc(int, *FILE) int
foreign fputs(*ubyte, *FILE) int
foreign getc(*FILE) int
foreign putc(int, *FILE) int
foreign putchar(int) int
foreign getchar() int
foreign ungetc(int, *FILE) int
foreign puts(*ubyte) int
foreign gets(*ubyte) *ubyte
foreign fread(ptr, usize, usize, *FILE) int
foreign fwrite(ptr, usize, usize, *FILE) int
foreign fgetpos(*FILE, *long) int
foreign fseek(*FILE, int, int) int
foreign fsetpos(*FILE, *long) int
foreign ftell(*FILE) int
foreign rewind(*FILE) void
foreign clearerr(*FILE) void
foreign feof(*FILE) int
foreign ferror(*FILE) int
foreign perror(*ubyte) void
foreign printf(*ubyte, ...) int
foreign fprintf(*FILE, *ubyte, ...) int
foreign sprintf(*ubyte, *ubyte, ...) int
foreign scanf(*ubyte, ...) int
foreign fscanf(*FILE, *ubyte, ...) int
foreign sscanf(*ubyte, *ubyte, ...) int
foreign memcpy(ptr, ptr, usize) ptr
foreign memmove(ptr, ptr, usize) ptr
foreign strcpy(*ubyte, *ubyte) *ubyte
foreign strncpy(*ubyte, *ubyte, usize) *ubyte
foreign strcat(*ubyte, *ubyte) *ubyte
foreign strncat(*ubyte, *ubyte, usize) *ubyte
foreign memcmp(ptr, ptr, usize) int
foreign strcmp(*ubyte, *ubyte) int
foreign strcoll(*ubyte, *ubyte) int
foreign strncmp(*ubyte, *ubyte, usize) int
foreign memchr(ptr, ubyte, usize) ptr
foreign strchr(*ubyte, ubyte) *ubyte
foreign strcspn(*ubyte, *ubyte) usize
foreign strpbrk(*ubyte, *ubyte) *ubyte
foreign strrchr(*ubyte, ubyte) *ubyte
foreign strspn(*ubyte, *ubyte) usize
foreign strstr(*ubyte, *ubyte) *ubyte
foreign strtok(*ubyte, *ubyte) *ubyte
foreign memset(ptr, ubyte, usize) ptr
foreign strlen(*ubyte) usize
foreign strerror(int) *ubyte
foreign acos(double) double
foreign acosf(float) float
foreign asin(double) double
foreign asinf(float) float
foreign atan(double) double
foreign atanf(float) float
foreign atan2(double, double) double
foreign atan2f(float, float) float
foreign cos(double) double
foreign cosf(float) float
foreign cosh(double) double
foreign coshf(float) float
foreign sin(double) double
foreign sinf(float) float
foreign sinh(double) double
foreign sinhf(float) float
foreign tan(double) double
foreign tanf(float) float
foreign tanh(double) double
foreign tanhf(float) float
foreign exp(double) double
foreign expf(float) float
foreign frexp(double, *int) double
foreign frexpf(float, *int) float
foreign lxexp(double, int) double
foreign lxexpd(float, int) float
foreign log(double) double
foreign logf(float) float
foreign log10(double) double
foreign log10f(float) float
foreign modf(double, *double) double
foreign modff(float, *float) float
foreign pow(double, double) double
foreign powf(float, float) float
foreign sqrt(double) double
foreign sqrtf(float) float
foreign ceil(double) double
foreign ceilf(float) float
foreign fabs(double) double
foreign fabsf(float) float
foreign floor(double) double
foreign floorf(float) float
foreign fmod(double, double) double
foreign fmodf(float, float) float
func zero(this *Vector3f) void {
    this.x = 0.000000f
    this.y = 0.000000f
    this.z = 0.000000f
}
func set(this *Vector3f, x float, y float, z float) void {
    this.x = x
    this.y = y
    this.z = z
}
func set(this *Vector3f, other Vector3f) void {
    this.x = other.x
    this.y = other.y
    this.z = other.z
}
func add(this *Vector3f, other Vector3f) void {
    <unknown statement>
    <unknown statement>
    <unknown statement>
}
func subtract(this *Vector3f, other Vector3f) void {
    <unknown statement>
    <unknown statement>
    <unknown statement>
}
func multiply(this *Vector3f, other Vector3f) void {
    <unknown statement>
    <unknown statement>
    <unknown statement>
}
func negate(this *Vector3f) void {
    <unknown statement>
    <unknown statement>
    <unknown statement>
}
func scale(this *Vector3f, amount float) void {
    <unknown statement>
    <unknown statement>
    <unknown statement>
}
func normalize(this *Vector3f) void {
    x float = this.x
    y float = this.y
    z float = this.z
    len float = sqrtf((((x * x) + (y * y)) + (z * z)))
    if (len == 0.000000f) {
        this.set(0.000000f, 0.000000f, 0.000000f)
        return 
    } else {
        if (len == 1.000000f) {
            return 
        }
    }
    len = (1.000000f / len)
    this.set((x * len), (y * len), (z * len))
}
func cross(this *Vector3f, other Vector3f) void {
    x_a float = this.x
    y_a float = this.y
    z_a float = this.z
    x_b float = other.x
    y_b float = other.y
    z_b float = other.z
    this.x = ((y_a * z_b) - (z_a * y_b))
    this.y = ((z_a * x_b) - (x_a * z_b))
    this.z = ((x_a * y_b) - (y_a * x_b))
}
func length(this *Vector3f) float {
    x float = this.x
    y float = this.y
    z float = this.z
    return sqrtf((((x * x) + (y * y)) + (z * z)))
}
func dot(this *Vector3f, other Vector3f) float {
    return (((this.x * other.x) + (this.y * other.y)) + (this.z * other.z))
}
func direction(this *Vector3f, other Vector3f) void {
    x float = (this.x - other.x)
    y float = (this.y - other.y)
    z float = (this.z - other.z)
    len float = sqrtf((((x * x) + (y * y)) + (z * z)))
    if (len == 0.000000f) {
        this.set(0.000000f, 0.000000f, 0.000000f)
        return 
    }
    len = (1.000000f / len)
    this.set((x * len), (y * len), (z * len))
}
func lerp(this *Vector3f, other Vector3f, lerp float) void {
    <unknown statement>
    <unknown statement>
    <unknown statement>
}
func lerp(this *Vector3f, other Vector3f) void {
    this.lerp(other, 0.500000f)
}
func distance(this *Vector3f, other Vector3f) float {
    x float = (other.x - this.x)
    y float = (other.y - this.y)
    z float = (other.z - this.z)
    return sqrtf((((x * x) + (y * y)) + (z * z)))
}
func toString(this *Vector3f) String {
    return ((("Vector3f {%, %, %}" % cast double (this.x)) % cast double (this.y)) % cast double (this.z))
}
func print(this *Vector3f) void {
    printf('Vector3f {%f, %f, %f}\n', cast double (this.x), cast double (this.y), cast double (this.z))
}
func zero(this *Matrix4f) void {
    <unknown statement>
}
func identity(this *Matrix4f) void {
    m *float = cast *float (&this.array)
    m[0gi] = 1.000000f
    m[1gi] = 0.000000f
    m[2gi] = 0.000000f
    m[3gi] = 0.000000f
    m[4gi] = 0.000000f
    m[5gi] = 1.000000f
    m[6gi] = 0.000000f
    m[7gi] = 0.000000f
    m[8gi] = 0.000000f
    m[9gi] = 0.000000f
    m[10gi] = 1.000000f
    m[11gi] = 0.000000f
    m[12gi] = 0.000000f
    m[13gi] = 0.000000f
    m[14gi] = 0.000000f
    m[15gi] = 1.000000f
}
func identity(this *Matrix4f, scale float) void {
    m *float = cast *float (&this.array)
    m[0gi] = scale
    m[1gi] = 0.000000f
    m[2gi] = 0.000000f
    m[3gi] = 0.000000f
    m[4gi] = 0.000000f
    m[5gi] = scale
    m[6gi] = 0.000000f
    m[7gi] = 0.000000f
    m[8gi] = 0.000000f
    m[9gi] = 0.000000f
    m[10gi] = scale
    m[11gi] = 0.000000f
    m[12gi] = 0.000000f
    m[13gi] = 0.000000f
    m[14gi] = 0.000000f
    m[15gi] = scale
}
func transpose(this *Matrix4f) void {
    m *float = cast *float (&this.array)
    a01 float = m[1gi]
    a02 float = m[2gi]
    a03 float = m[3gi]
    a12 float = m[6gi]
    a13 float = m[7gi]
    a23 float = m[11gi]
    m[1gi] = m[4gi]
    m[2gi] = m[8gi]
    m[3gi] = m[12gi]
    m[4gi] = a01
    m[6gi] = m[9gi]
    m[7gi] = m[13gi]
    m[8gi] = a02
    m[9gi] = a12
    m[11gi] = m[14gi]
    m[12gi] = a03
    m[13gi] = a13
    m[14gi] = a23
}
func determinant(this *Matrix4f) float {
    m *float = cast *float (&this.array)
    a00 float = m[0gi]
    a01 float = m[1gi]
    a02 float = m[2gi]
    a03 float = m[3gi]
    a10 float = m[4gi]
    a11 float = m[5gi]
    a12 float = m[6gi]
    a13 float = m[7gi]
    a20 float = m[8gi]
    a21 float = m[9gi]
    a22 float = m[10gi]
    a23 float = m[11gi]
    a30 float = m[12gi]
    a31 float = m[13gi]
    a32 float = m[14gi]
    a33 float = m[15gi]
    return ((((((((((((((((((((((((((a30 * a21) * a12) * a03) - (((a20 * a31) * a12) * a03)) - (((a30 * a11) * a22) * a03)) + (((a10 * a31) * a22) * a03)) + (((a20 * a11) * a32) * a03)) - (((a10 * a21) * a32) * a03)) - (((a30 * a21) * a02) * a13)) + (((a20 * a31) * a02) * a13)) + (((a30 * a01) * a22) * a13)) - (((a00 * a31) * a22) * a13)) - (((a20 * a01) * a32) * a13)) + (((a00 * a21) * a32) * a13)) + (((a30 * a11) * a02) * a23)) - (((a10 * a31) * a02) * a23)) - (((a30 * a01) * a12) * a23)) + (((a00 * a31) * a12) * a23)) + (((a10 * a01) * a32) * a23)) - (((a00 * a11) * a32) * a23)) - (((a20 * a11) * a02) * a33)) + (((a10 * a21) * a02) * a33)) + (((a20 * a01) * a12) * a33)) - (((a00 * a21) * a12) * a33)) - (((a10 * a01) * a22) * a33)) + (((a00 * a11) * a22) * a33))
}
func inverse(this *Matrix4f) void {
    m *float = cast *float (&this.array)
    a00 float = m[0gi]
    a01 float = m[1gi]
    a02 float = m[2gi]
    a03 float = m[3gi]
    a10 float = m[4gi]
    a11 float = m[5gi]
    a12 float = m[6gi]
    a13 float = m[7gi]
    a20 float = m[8gi]
    a21 float = m[9gi]
    a22 float = m[10gi]
    a23 float = m[11gi]
    a30 float = m[12gi]
    a31 float = m[13gi]
    a32 float = m[14gi]
    a33 float = m[15gi]
    b00 float = ((a00 * a11) - (a01 * a10))
    b01 float = ((a00 * a12) - (a02 * a10))
    b02 float = ((a00 * a13) - (a03 * a10))
    b03 float = ((a01 * a12) - (a02 * a11))
    b04 float = ((a01 * a13) - (a03 * a11))
    b05 float = ((a02 * a13) - (a03 * a12))
    b06 float = ((a20 * a31) - (a21 * a30))
    b07 float = ((a20 * a32) - (a22 * a30))
    b08 float = ((a20 * a33) - (a23 * a30))
    b09 float = ((a21 * a32) - (a22 * a31))
    b10 float = ((a21 * a33) - (a23 * a31))
    b11 float = ((a22 * a33) - (a23 * a32))
    d float = ((((((b00 * b11) - (b01 * b10)) + (b02 * b09)) + (b03 * b08)) - (b04 * b07)) + (b05 * b06))
    if (d == 0.000000f) {
        return 
    }
    inv_det float = (1.000000f / d)
    m[0gi] = ((((a11 * b11) - (a12 * b10)) + (a13 * b09)) * inv_det)
    m[1gi] = (((((-1.000000f * a01) * b11) + (a02 * b10)) - (a03 * b09)) * inv_det)
    m[2gi] = ((((a31 * b05) - (a32 * b04)) + (a33 * b03)) * inv_det)
    m[3gi] = (((((-1.000000f * a21) * b05) + (a22 * b04)) - (a23 * b03)) * inv_det)
    m[4gi] = (((((-1.000000f * a10) * b11) + (a12 * b08)) - (a13 * b07)) * inv_det)
    m[5gi] = ((((a00 * b11) - (a02 * b08)) + (a03 * b07)) * inv_det)
    m[6gi] = (((((-1.000000f * a30) * b05) + (a32 * b02)) - (a33 * b01)) * inv_det)
    m[7gi] = ((((a20 * b05) - (a22 * b02)) + (a23 * b01)) * inv_det)
    m[8gi] = ((((a10 * b10) - (a11 * b08)) + (a13 * b06)) * inv_det)
    m[9gi] = (((((-1.000000f * a00) * b10) + (a01 * b08)) - (a03 * b06)) * inv_det)
    m[10gi] = ((((a30 * b04) - (a31 * b02)) + (a33 * b00)) * inv_det)
    m[11gi] = (((((-1.000000f * a20) * b04) + (a21 * b02)) - (a23 * b00)) * inv_det)
    m[12gi] = (((((-1.000000f * a10) * b09) + (a11 * b07)) - (a12 * b06)) * inv_det)
    m[13gi] = ((((a00 * b09) - (a01 * b07)) + (a02 * b06)) * inv_det)
    m[14gi] = (((((-1.000000f * a30) * b03) + (a31 * b01)) - (a32 * b00)) * inv_det)
    m[15gi] = ((((a20 * b03) - (a21 * b01)) + (a22 * b00)) * inv_det)
}
func toRotationMatrix(this *Matrix4f) void {
    m *float = cast *float (&this.array)
    m[12gi] = 0.000000f
    m[13gi] = 0.000000f
    m[14gi] = 0.000000f
    m[15gi] = 1.000000f
}
func multiply(this *Matrix4f, other Matrix4f) void {
    m *float = cast *float (&this.array)
    o *float = cast *float (&other.array)
    a00 float = m[0gi]
    a01 float = m[1gi]
    a02 float = m[2gi]
    a03 float = m[3gi]
    a10 float = m[4gi]
    a11 float = m[5gi]
    a12 float = m[6gi]
    a13 float = m[7gi]
    a20 float = m[8gi]
    a21 float = m[9gi]
    a22 float = m[10gi]
    a23 float = m[11gi]
    a30 float = m[12gi]
    a31 float = m[13gi]
    a32 float = m[14gi]
    a33 float = m[15gi]
    b00 float = o[0gi]
    b01 float = o[1gi]
    b02 float = o[2gi]
    b03 float = o[3gi]
    b10 float = o[4gi]
    b11 float = o[5gi]
    b12 float = o[6gi]
    b13 float = o[7gi]
    b20 float = o[8gi]
    b21 float = o[9gi]
    b22 float = o[10gi]
    b23 float = o[11gi]
    b30 float = o[12gi]
    b31 float = o[13gi]
    b32 float = o[14gi]
    b33 float = o[15gi]
    m[0gi] = ((((b00 * a00) + (b01 * a10)) + (b02 * a20)) + (b03 * a30))
    m[1gi] = ((((b00 * a01) + (b01 * a11)) + (b02 * a21)) + (b03 * a31))
    m[2gi] = ((((b00 * a02) + (b01 * a12)) + (b02 * a22)) + (b03 * a32))
    m[3gi] = ((((b00 * a03) + (b01 * a13)) + (b02 * a23)) + (b03 * a33))
    m[4gi] = ((((b10 * a00) + (b11 * a10)) + (b12 * a20)) + (b13 * a30))
    m[5gi] = ((((b10 * a01) + (b11 * a11)) + (b12 * a21)) + (b13 * a31))
    m[6gi] = ((((b10 * a02) + (b11 * a12)) + (b12 * a22)) + (b13 * a32))
    m[7gi] = ((((b10 * a03) + (b11 * a13)) + (b12 * a23)) + (b13 * a33))
    m[8gi] = ((((b20 * a00) + (b21 * a10)) + (b22 * a20)) + (b23 * a30))
    m[9gi] = ((((b20 * a01) + (b21 * a11)) + (b22 * a21)) + (b23 * a31))
    m[10gi] = ((((b20 * a02) + (b21 * a12)) + (b22 * a22)) + (b23 * a32))
    m[11gi] = ((((b20 * a03) + (b21 * a13)) + (b22 * a23)) + (b23 * a33))
    m[12gi] = ((((b30 * a00) + (b31 * a10)) + (b32 * a20)) + (b33 * a30))
    m[13gi] = ((((b30 * a01) + (b31 * a11)) + (b32 * a21)) + (b33 * a31))
    m[14gi] = ((((b30 * a02) + (b31 * a12)) + (b32 * a22)) + (b33 * a32))
    m[15gi] = ((((b30 * a03) + (b31 * a13)) + (b32 * a23)) + (b33 * a33))
}
func translate(this *Matrix4f, x float, y float, z float) void {
    m *float = cast *float (&this.array)
    m[12gi] = ((((m[0gi] * x) + (m[4gi] * y)) + (m[8gi] * z)) + m[12gi])
    m[13gi] = ((((m[1gi] * x) + (m[5gi] * y)) + (m[9gi] * z)) + m[13gi])
    m[14gi] = ((((m[2gi] * x) + (m[6gi] * y)) + (m[10gi] * z)) + m[14gi])
    m[15gi] = ((((m[3gi] * x) + (m[7gi] * y)) + (m[11gi] * z)) + m[15gi])
}
func translate(this *Matrix4f, xyz Vector3f) void {
    x float = xyz.x
    y float = xyz.y
    z float = xyz.z
    m *float = cast *float (&this.array)
    m[12gi] = ((((m[0gi] * x) + (m[4gi] * y)) + (m[8gi] * z)) + m[12gi])
    m[13gi] = ((((m[1gi] * x) + (m[5gi] * y)) + (m[9gi] * z)) + m[13gi])
    m[14gi] = ((((m[2gi] * x) + (m[6gi] * y)) + (m[10gi] * z)) + m[14gi])
    m[15gi] = ((((m[3gi] * x) + (m[7gi] * y)) + (m[11gi] * z)) + m[15gi])
}
func translateFromIdentity(this *Matrix4f, x float, y float, z float) void {
    this.identity()
    this.translate(x, y, z)
}
func translateFromIdentity(this *Matrix4f, xyz Vector3f) void {
    this.identity()
    this.translate(xyz)
}
func scale(this *Matrix4f, x float, y float, z float) void {
    m *float = cast *float (&this.array)
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
}
func scale(this *Matrix4f, xyz Vector3f) void {
    x float = xyz.x
    y float = xyz.y
    z float = xyz.z
    m *float = cast *float (&this.array)
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
}
func scaleFromIdentity(this *Matrix4f, x float, y float, z float) void {
    this.identity()
    this.scale(x, y, z)
}
func scaleFromIdentity(this *Matrix4f, xyz Vector3f) void {
    this.identity()
    this.scale(xyz)
}
func rotate(this *Matrix4f, angle float, x float, y float, z float) void {
    m *float = cast *float (&this.array)
    len float = sqrtf((((x * x) + (y * y)) + (z * z)))
    if (len == 0.000000f) {
        return 
    }
    if (len != 1.000000f) {
        len = (1.000000f / len)
        <unknown statement>
        <unknown statement>
        <unknown statement>
    }
    s float = sinf(angle)
    c float = cosf(angle)
    t float = (1.000000f - c)
    a00 float = m[0gi]
    a01 float = m[1gi]
    a02 float = m[2gi]
    a03 float = m[3gi]
    a10 float = m[4gi]
    a11 float = m[5gi]
    a12 float = m[6gi]
    a13 float = m[7gi]
    a20 float = m[8gi]
    a21 float = m[9gi]
    a22 float = m[10gi]
    a23 float = m[11gi]
    b00 float = (((x * x) * t) + c)
    b01 float = (((y * x) * t) + (z * s))
    b02 float = (((z * x) * t) - (y * s))
    b10 float = (((x * y) * t) - (z * s))
    b11 float = (((y * y) * t) + c)
    b12 float = (((z * y) * t) + (x * s))
    b20 float = (((x * z) * t) + (y * s))
    b21 float = (((y * z) * t) - (x * s))
    b22 float = (((z * z) * t) + c)
    m[0gi] = (((a00 * b00) + (a10 * b01)) + (a20 * b02))
    m[1gi] = (((a01 * b00) + (a11 * b01)) + (a21 * b02))
    m[2gi] = (((a02 * b00) + (a12 * b01)) + (a22 * b02))
    m[3gi] = (((a03 * b00) + (a13 * b01)) + (a23 * b02))
    m[4gi] = (((a00 * b10) + (a10 * b11)) + (a20 * b12))
    m[5gi] = (((a01 * b10) + (a11 * b11)) + (a21 * b12))
    m[6gi] = (((a02 * b10) + (a12 * b11)) + (a22 * b12))
    m[7gi] = (((a03 * b10) + (a13 * b11)) + (a23 * b12))
    m[8gi] = (((a00 * b20) + (a10 * b21)) + (a20 * b22))
    m[9gi] = (((a01 * b20) + (a11 * b21)) + (a21 * b22))
    m[10gi] = (((a02 * b20) + (a12 * b21)) + (a22 * b22))
    m[11gi] = (((a03 * b20) + (a13 * b21)) + (a23 * b22))
}
func rotate(this *Matrix4f, angle float, axis Vector3f) void {
    x float = axis.x
    y float = axis.y
    z float = axis.z
    m *float = cast *float (&this.array)
    len float = sqrtf((((x * x) + (y * y)) + (z * z)))
    if (len == 0.000000f) {
        return 
    }
    if (len != 1.000000f) {
        len = (1.000000f / len)
        <unknown statement>
        <unknown statement>
        <unknown statement>
    }
    s float = sinf(angle)
    c float = cosf(angle)
    t float = (1.000000f - c)
    a00 float = m[0gi]
    a01 float = m[1gi]
    a02 float = m[2gi]
    a03 float = m[3gi]
    a10 float = m[4gi]
    a11 float = m[5gi]
    a12 float = m[6gi]
    a13 float = m[7gi]
    a20 float = m[8gi]
    a21 float = m[9gi]
    a22 float = m[10gi]
    a23 float = m[11gi]
    b00 float = (((x * x) * t) + c)
    b01 float = (((y * x) * t) + (z * s))
    b02 float = (((z * x) * t) - (y * s))
    b10 float = (((x * y) * t) - (z * s))
    b11 float = (((y * y) * t) + c)
    b12 float = (((z * y) * t) + (x * s))
    b20 float = (((x * z) * t) + (y * s))
    b21 float = (((y * z) * t) - (x * s))
    b22 float = (((z * z) * t) + c)
    m[0gi] = (((a00 * b00) + (a10 * b01)) + (a20 * b02))
    m[1gi] = (((a01 * b00) + (a11 * b01)) + (a21 * b02))
    m[2gi] = (((a02 * b00) + (a12 * b01)) + (a22 * b02))
    m[3gi] = (((a03 * b00) + (a13 * b01)) + (a23 * b02))
    m[4gi] = (((a00 * b10) + (a10 * b11)) + (a20 * b12))
    m[5gi] = (((a01 * b10) + (a11 * b11)) + (a21 * b12))
    m[6gi] = (((a02 * b10) + (a12 * b11)) + (a22 * b12))
    m[7gi] = (((a03 * b10) + (a13 * b11)) + (a23 * b12))
    m[8gi] = (((a00 * b20) + (a10 * b21)) + (a20 * b22))
    m[9gi] = (((a01 * b20) + (a11 * b21)) + (a21 * b22))
    m[10gi] = (((a02 * b20) + (a12 * b21)) + (a22 * b22))
    m[11gi] = (((a03 * b20) + (a13 * b21)) + (a23 * b22))
}
func rotateFromIdentity(this *Matrix4f, angle float, x float, y float, z float) void {
    this.identity()
    this.rotate(angle, x, y, z)
}
func rotateFromIdentity(this *Matrix4f, angle float, axis Vector3f) void {
    this.identity()
    this.rotate(angle, axis)
}
func frustum(this *Matrix4f, left float, right float, bottom float, top float, near float, far float) void {
    m *float = cast *float (&this.array)
    rl float = (right - left)
    tb float = (top - bottom)
    fn float = (far - near)
    m[0gi] = ((near * 2.000000f) / rl)
    m[1gi] = 0.000000f
    m[2gi] = 0.000000f
    m[3gi] = 0.000000f
    m[4gi] = 0.000000f
    m[5gi] = ((near * 2.000000f) / tb)
    m[6gi] = 0.000000f
    m[7gi] = 0.000000f
    m[8gi] = ((right + left) / rl)
    m[9gi] = ((top + bottom) / tb)
    m[10gi] = ((-1.000000f * (far + near)) / fn)
    m[11gi] = -1.000000f
    m[12gi] = 0.000000f
    m[13gi] = 0.000000f
    m[14gi] = ((((-1.000000f * far) * near) * 2.000000f) / fn)
    m[15gi] = 0.000000f
}
func perspective(this *Matrix4f, fovy float, aspect float, near float, far float) void {
    top float = (near * tanf(((fovy * 3.141593f) / 360.000000f)))
    right float = (top * aspect)
    this.frustum((-1.000000f * right), right, (-1.000000f * top), top, near, far)
}
func ortho(this *Matrix4f, left float, right float, bottom float, top float, near float, far float) void {
    m *float = cast *float (&this.array)
    rl float = (right - left)
    tb float = (top - bottom)
    fn float = (far - near)
    m[0gi] = (2.000000f / rl)
    m[1gi] = 0.000000f
    m[2gi] = 0.000000f
    m[3gi] = 0.000000f
    m[4gi] = 0.000000f
    m[5gi] = (2.000000f / tb)
    m[6gi] = 0.000000f
    m[7gi] = 0.000000f
    m[8gi] = 0.000000f
    m[9gi] = 0.000000f
    m[10gi] = (-2.000000f / fn)
    m[11gi] = 0.000000f
    m[12gi] = ((-1.000000f * (left + right)) / rl)
    m[13gi] = ((-1.000000f * (top + bottom)) / tb)
    m[14gi] = ((-1.000000f * (far + near)) / fn)
    m[15gi] = 1.000000f
}
func lookAt(this *Matrix4f, this *Matrix4f, eye Vector3f, center Vector3f, up Vector3f) void {
    m *float = cast *float (&this.array)
    eyex float = eye.x
    eyey float = eye.y
    eyez float = eye.z
    upx float = up.x
    upy float = up.y
    upz float = up.z
    centerx float = center.x
    centery float = center.y
    centerz float = center.z
    if (((eyex == centerx) && (eyey == centery)) && (eyez == centerz)) {
        this.identity()
    }
    z0 float = (eyex - centerx)
    z1 float = (eyey - centery)
    z2 float = (eyez - centerz)
    len float = (1.000000f / sqrtf((((z0 * z0) + (z1 * z1)) + (z2 * z2))))
    <unknown statement>
    <unknown statement>
    <unknown statement>
    x0 float = ((upy * z2) - (upz * z1))
    x1 float = ((upz * z0) - (upx * z2))
    x2 float = ((upx * z1) - (upy * z0))
    len = sqrtf((((x0 * x0) + (x1 * x1)) + (x2 * x2)))
    if (len == 0.000000f) {
        x0 = 0.000000f
        x1 = 0.000000f
        x2 = 0.000000f
    } else {
        len = (1.000000f / len)
        <unknown statement>
        <unknown statement>
        <unknown statement>
    }
    y0 float = ((z1 * x2) - (z2 * x1))
    y1 float = ((z2 * x0) - (z0 * x2))
    y2 float = ((z0 * x1) - (z1 * x0))
    len = sqrtf((((y0 * y0) + (y1 * y1)) + (y2 * y2)))
    if (len == 0.000000f) {
        y0 = 0.000000f
        y1 = 0.000000f
        y2 = 0.000000f
    } else {
        len = (1.000000f / len)
        <unknown statement>
        <unknown statement>
        <unknown statement>
    }
    m[0gi] = x0
    m[1gi] = y0
    m[2gi] = z0
    m[3gi] = 0.000000f
    m[4gi] = x1
    m[5gi] = y1
    m[6gi] = z1
    m[7gi] = 0.000000f
    m[8gi] = x2
    m[9gi] = y2
    m[10gi] = z2
    m[11gi] = 0.000000f
    m[12gi] = (-1.000000f * (((x0 * eyex) + (x1 * eyey)) + (x2 * eyez)))
    m[13gi] = (-1.000000f * (((y0 * eyex) + (y1 * eyey)) + (y2 * eyez)))
    m[14gi] = (-1.000000f * (((z0 * eyex) + (z1 * eyey)) + (z2 * eyez)))
    m[15gi] = 1.000000f
}
func toString(this *Matrix4f) String {
    m *float = cast *float (&this.array)
    return (((((((((((((((("Matrix4f {\0    %f, %f, %f, %f,\0    %f, %f, %f, %f\0    %f, %f, %f, %f\0    %f, %f, %f, %f\0}" % cast double (m[0gi])) % cast double (m[1gi])) % cast double (m[2gi])) % cast double (m[3gi])) % cast double (m[4gi])) % cast double (m[5gi])) % cast double (m[6gi])) % cast double (m[7gi])) % cast double (m[8gi])) % cast double (m[9gi])) % cast double (m[10gi])) % cast double (m[11gi])) % cast double (m[12gi])) % cast double (m[13gi])) % cast double (m[14gi])) % cast double (m[15gi]))
}
func print(this *Matrix4f) void {
    m *float = cast *float (&this.array)
    printf('Matrix4f {\n    %ff, %ff, %ff, %ff,\n    %ff, %ff, %ff, %ff,\n    %ff, %ff, %ff, %ff,\n    %ff, %ff, %ff, %ff\n}\n', cast double (m[0gi]), cast double (m[1gi]), cast double (m[2gi]), cast double (m[3gi]), cast double (m[4gi]), cast double (m[5gi]), cast double (m[6gi]), cast double (m[7gi]), cast double (m[8gi]), cast double (m[9gi]), cast double (m[10gi]), cast double (m[11gi]), cast double (m[12gi]), cast double (m[13gi]), cast double (m[14gi]), cast double (m[15gi]))
}
func __defer__(this *String) void {
    if (this.ownership == StringOwnership::OWN) {
        delete this.array
        this.array = null
        this.length = 0gi
        this.capacity = 0gi
        this.ownership = StringOwnership::REFERENCE
    }
}
func __pass__(string String) String {
    if (string.ownership == StringOwnership::OWN) {
        string.ownership = StringOwnership::REFERENCE
    } else {
        if (string.ownership == StringOwnership::GIVEN) {
            string.ownership = StringOwnership::OWN
        }
    }
    return string
}
func __assign__(this *String, other String) void {
    if (other.ownership == StringOwnership::GIVEN) {
        this.__defer__()
        this.array = other.array
        this.length = other.length
        this.capacity = other.capacity
        this.ownership = StringOwnership::OWN
        return 
    }
    if (other.ownership == StringOwnership::REFERENCE) {
        if (((this.ownership == StringOwnership::OWN) && (other.array >= this.array)) && (other.array < (this.array + cast ptr (this.capacity)))) {
            array *ubyte = new ubyte * (other.length)
            memcpy(array, other.array, other.length)
            delete this.array
            this.array = array
            this.length = other.length
            this.capacity = other.capacity
            this.ownership = StringOwnership::OWN
            return 
        }
        this.__defer__()
        this.array = other.array
        this.length = other.length
        this.capacity = other.capacity
        this.ownership = StringOwnership::REFERENCE
        return 
    }
    this.__defer__()
    this.array = other.array
    this.length = other.length
    this.capacity = other.capacity
    if (other.ownership == StringOwnership::DONOR) {
        this.ownership = StringOwnership::DONOR
    } else {
        this.ownership = StringOwnership::REFERENCE
    }
}
func __equals__(lhs String, rhs String) bool {
    if (lhs.length != rhs.length) {
        return false
    }
    <unknown statement>
    return true
}
func __add__(lhs String, rhs String) String {
    <unknown statement>
    together.length = (lhs.length + rhs.length)
    together.array = new ubyte * (together.length)
    memcpy(together.array, lhs.array, lhs.length)
    memcpy(together.array at (lhs.length), rhs.array, rhs.length)
    together.capacity = together.length
    together.ownership = StringOwnership::GIVEN
    return together
}
func __multiply__(lhs String, times int) String {
    <unknown statement>
    if (times > 0gi) {
        result.length = (lhs.length * times)
        result.array = new ubyte * (result.length)
        <unknown statement>
    } else {
        if (times == 0gi) {
            result.array = null
            result.length = 0gi
            result.capacity = 0gi
            result.ownership = StringOwnership::REFERENCE
            return result
        } else {
            times = (0gi - times)
            result.length = (lhs.length * times)
            result.array = new ubyte * (result.length)
            reversed String = lhs.reversed()
            <unknown statement>
        }
    }
    result.capacity = result.length
    result.ownership = StringOwnership::GIVEN
    return result
}
func __modulus__(lhs String, rhs String) String {
    <unknown statement>
    percent long = lhs.first(0x25ub)
    if (percent == -1gi) {
        return lhs
    }
    formatted.length = ((lhs.length + rhs.length) - 1gi)
    formatted.capacity = formatted.length
    formatted.ownership = StringOwnership::GIVEN
    formatted.array = new ubyte * (formatted.length)
    memcpy(formatted.array, lhs.array, percent)
    memcpy(formatted.array at (percent), rhs.array, rhs.length)
    memcpy(formatted.array at ((percent + rhs.length)), lhs.array at ((percent + 1gi)), ((lhs.length - percent) - 1gi))
    lhs = __pass__(lhs)
    lhs.__defer__()
    return formatted
}
func __modulus__(lhs String, rhs int) String {
    <unknown statement>
    percent long = lhs.first(0x25ub)
    if (percent == -1gi) {
        return lhs
    }
    <unknown statement>
    sprintf(cast *ubyte (&int_string), '%d', rhs)
    int_string_length usize = strlen(cast *ubyte (&int_string))
    formatted.length = ((lhs.length + int_string_length) - 1gi)
    formatted.capacity = formatted.length
    formatted.ownership = StringOwnership::GIVEN
    formatted.array = new ubyte * (formatted.length)
    memcpy(formatted.array, lhs.array, percent)
    memcpy(formatted.array at (percent), cast *ubyte (&int_string), int_string_length)
    memcpy(formatted.array at ((percent + int_string_length)), lhs.array at ((percent + 1gi)), ((lhs.length - percent) - 1gi))
    lhs = __pass__(lhs)
    lhs.__defer__()
    return formatted
}
func __modulus__(lhs String, rhs double) String {
    <unknown statement>
    percent long = lhs.first(0x25ub)
    if (percent == -1gi) {
        return lhs
    }
    <unknown statement>
    sprintf(cast *ubyte (&float_string), '%f', rhs)
    float_string_length usize = strlen(cast *ubyte (&float_string))
    formatted.length = ((lhs.length + float_string_length) - 1gi)
    formatted.capacity = formatted.length
    formatted.ownership = StringOwnership::GIVEN
    formatted.array = new ubyte * (formatted.length)
    memcpy(formatted.array, lhs.array, percent)
    memcpy(formatted.array at (percent), cast *ubyte (&float_string), float_string_length)
    memcpy(formatted.array at ((percent + float_string_length)), lhs.array at ((percent + 1gi)), ((lhs.length - percent) - 1gi))
    lhs = __pass__(lhs)
    lhs.__defer__()
    return formatted
}
func commit(this *String) String {
    if (this.ownership == StringOwnership::OWN) {
        this.ownership = StringOwnership::REFERENCE
        <unknown statement>
        given.array = this.array
        given.length = this.length
        given.capacity = this.capacity
        given.ownership = StringOwnership::GIVEN
        return given
    }
    return *(this)
}
func donate(this *String) String {
    if (this.ownership == StringOwnership::OWN) {
        <unknown statement>
        given.array = this.array
        given.length = this.length
        given.capacity = this.capacity
        given.ownership = StringOwnership::GIVEN
        this.ownership = StringOwnership::REFERENCE
        *(this) = "<DONATED>"
        this.ownership = StringOwnership::DONOR
        return given
    }
    return *(this)
}
func first(this *String, character ubyte) long {
    <unknown statement>
    return -1gi
}
func last(this *String, character ubyte) long {
    <unknown statement>
    return -1gi
}
func reverse(this *String) void {
    <unknown statement>
}
func reversed(this *String) String {
    <unknown statement>
    reversed.array = new ubyte * (this.length)
    reversed.length = this.length
    reversed.capacity = this.length
    reversed.ownership = StringOwnership::GIVEN
    <unknown statement>
    return reversed
}
func sub(this *String, a usize, n usize) String {
    range String = this.range(a, n)
    return range.clone()
}
func range(this *String, a usize, n usize) String {
    <unknown statement>
    substring.array = this.array at (a)
    substring.length = n
    substring.capacity = (this.capacity - a)
    substring.ownership = StringOwnership::REFERENCE
    return substring
}
func clone(this *String) String {
    <unknown statement>
    cloned.array = new ubyte * (this.capacity)
    cloned.length = this.length
    cloned.capacity = this.capacity
    cloned.ownership = StringOwnership::GIVEN
    memcpy(cloned.array, this.array, this.length)
    return cloned
}
func equals(this *String, other String) bool {
    if (this.length != other.length) {
        return false
    }
    <unknown statement>
    return true
}
func cstr(this *String) *ubyte {
    str *ubyte = new ubyte * ((this.length + 1gi))
    memcpy(str, this.array, this.length)
    str[this.length] = 0gi
    return str
}
func string(null_terminated *ubyte) String {
    <unknown statement>
    created.length = strlen(null_terminated)
    created.array = new ubyte * (created.length)
    memcpy(created.array, null_terminated, created.length)
    created.capacity = created.length
    created.ownership = StringOwnership::GIVEN
    return created
}
func captPrepare() successful {
    _captain_window = null
    _captain_setup = null
    _captain_exit = null
    _captain_draw = null
    _captain_step = null
    _captain_step_fps = 60gi
    _captain_click = null
    _captain_release = null
    _captain_display_ratio = 0.000000f
    _captain_view_width = 0.000000f
    _captain_view_height = 0.000000f
    _captain_custom_view = false
    _captain_resizable = true
    _captain_typicals = null
    _captain_typicals_length = 0gi
    _captain_typicals_capacity = 0gi
    _captain_models = null
    _captain_models_length = 0gi
    _captain_models_capacity = 0gi
    _captain_shader_transformation_location = 0gi
    _captain_sprite_models = null
    _captain_sprite_models_length = 0gi
    _captain_sprite_models_capacity = 0gi
    _captain_hide_mouse_on_creation = false
    return (glfwInit() != 0gi)
}
func captAddTypical(w float, h float) void {
    if (_captain_typicals_length == _captain_typicals_capacity) {
        if (_captain_typicals_capacity == 0gi) {
            _captain_typicals_capacity = 4gi
        } else {
            <unknown statement>
        }
        new_typicals *float = new float * ((2gi * _captain_typicals_capacity))
        memcpy(new_typicals, _captain_typicals, ((_captain_typicals_length * 2gi) * sizeof float))
        delete _captain_typicals
        _captain_typicals = new_typicals
    }
    _captain_typicals[(_captain_typicals_length * 2gi)] = w
    _captain_typicals[((_captain_typicals_length * 2gi) + 1gi)] = h
    <unknown statement>
}
func captStart() void {
    captStart('', 640gi, 480gi, false)
}
func captStart(title *ubyte) void {
    captStart(title, 640gi, 480gi, false)
}
func captStart(fullscreen bool) void {
    if fullscreen {
        captStart('', 0gi, 0gi, true)
    } else {
        captStart('', 640gi, 480gi, false)
    }
}
func captStart(title *ubyte, fullscreen bool) void {
    if fullscreen {
        captStart(title, 0gi, 0gi, true)
    } else {
        captStart(title, 640gi, 480gi, false)
    }
}
func captStart(title *ubyte, width int, height int, fullscreen bool) void {
    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3gi)
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 2gi)
    glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE)
    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE)
    unless _captain_resizable {
        glfwWindowHint(GLFW_RESIZABLE, GL_FALSE)
    }
    monitor *GLFWmonitor = null
    if fullscreen {
        monitor = glfwGetPrimaryMonitor()
    }
    if ((width == 0gi) && (height == 0gi)) {
        video_mode *GLFWvidmode = glfwGetVideoMode(monitor)
        width = video_mode.width
        height = video_mode.height
    }
    _captain_window = glfwCreateWindow(width, height, title, monitor, null)
    if (_captain_window == null) {
        glfwTerminate()
        return 
    }
    glfwMakeContextCurrent(_captain_window)
    glfwSwapInterval(1gi)
    openglInit()
    <unknown statement>
    glEnable(GL_BLEND)
    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)
    _captain_shader.create('#version 400 core\nlayout(location = 0) in vec3 vp;\nlayout(location = 1) in vec2 texture_coords;\nuniform mat4 projection;\nuniform mat4 transformation;\nout vec2 uvs;\nvoid main() {\nuvs = texture_coords;\ngl_Position = projection * transformation * vec4(vp, 1.0);\n}', '#version 400 core\nin vec2 uvs;\nout vec4 color;\nuniform sampler2D texture_sampler;\nuniform float opacity;\nvoid main(void) {\ncolor = texture(texture_sampler, uvs);\ncolor.a *= opacity;\nif(color.a == 0) discard;\n}')
    _captain_shader_transformation_location = _captain_shader.getUniformLocation('transformation')
    <unknown statement>
    <unknown statement>
    unless _captain_custom_view {
        glfwGetFramebufferSize(_captain_window, &win_width, &win_height)
        _captain_display_ratio = (cast float (win_width) / cast float (win_height))
        _captain_view_width = (800.000000f * _captain_display_ratio)
        _captain_view_height = 800.000000f
    }
    if _captain_hide_mouse_on_creation {
        captHideMouse()
    }
    if cast ptr (_captain_setup) {
        _captain_setup()
    }
    glfwSetMouseButtonCallback(_captain_window, func &_captMouseCallback)
    glfwSetKeyCallback(_captain_window, func &_captKeyCallback)
    previous_time double = glfwGetTime()
    projection Matrix4f
    until glfwWindowShouldClose(_captain_window) {
        if ((glfwGetTime() - previous_time) > (1.000000gf / cast float (_captain_step_fps))) {
            if cast ptr (_captain_step) {
                _captain_step()
            }
            <unknown statement>
        }
        glClearColor(0.000000f, 0.000000f, 0.000000f, 0.000000f)
        glClear(GL_COLOR_BUFFER_BIT)
        glfwGetFramebufferSize(_captain_window, &win_width, &win_height)
        glViewport(0gi, 0gi, win_width, win_height)
        _captain_display_ratio = (cast float (win_width) / cast float (win_height))
        unless _captain_custom_view {
            _captain_view_width = (800.000000f * _captain_display_ratio)
            _captain_view_height = 800.000000f
        }
        projection.ortho(0.000000f, _captain_view_width, _captain_view_height, 0.000000f, 1.000000f, -1.000000f)
        _captain_shader.use()
        _captain_shader.uploadMatrix4f(_captain_shader.getUniformLocation('projection'), projection)
        _captain_shader.uploadFloat(_captain_shader.getUniformLocation('opacity'), 1.000000f)
        if cast ptr (_captain_draw) {
            _captain_draw()
        }
        glfwSwapBuffers(_captain_window)
        glfwPollEvents()
    }
    if cast ptr (_captain_exit) {
        _captain_exit()
    }
    <unknown statement>
    delete _captain_models
    delete _captain_typicals
    _captain_shader.free()
    glfwDestroyWindow(_captain_window)
    glfwTerminate()
}
func _captMouseCallback(window *GLFWwindow, button int, action int, mods int) void {
    if ((action == GLFW_PRESS) && cast ptr (_captain_click)) {
        <unknown statement>
        <unknown statement>
        if _captain_click_use_view_mouse {
            captMouseViewPosition(&mouse_x, &mouse_y)
        } else {
            captMouseFramePosition(&mouse_x, &mouse_y)
        }
        _captain_click(mouse_x, mouse_y, (button + 1gi))
    } else {
        if ((action == GLFW_RELEASE) && cast ptr (_captain_release)) {
            <unknown statement>
            <unknown statement>
            if _captain_release_use_view_mouse {
                captMouseViewPosition(&mouse_x, &mouse_y)
            } else {
                captMouseFramePosition(&mouse_x, &mouse_y)
            }
            _captain_release(mouse_x, mouse_y, (button + 1gi))
        }
    }
}
func _captKeyCallback(window *GLFWwindow, k int, s int, a int, m int) void {
    if cast ptr (_captain_key) {
        _captain_key(k, s, a, m)
    }
}
func captViewWidth() float {
    return _captain_view_width
}
func captViewHeight() float {
    return _captain_view_height
}
func captFrameWidth() int {
    <unknown statement>
    <unknown statement>
    glfwGetFramebufferSize(_captain_window, &w, &h)
    return w
}
func captFrameHeight() int {
    <unknown statement>
    <unknown statement>
    glfwGetFramebufferSize(_captain_window, &w, &h)
    return h
}
func captCustomView(width float, height float) void {
    _captain_view_width = width
    _captain_view_height = height
    _captain_custom_view = true
}
func captDefaultView() void {
    _captain_custom_view = false
}
func captMouseFramePosition(x *float, y *float) void {
    glfwGetCursorPos(_captain_window, undef x_d double, undef y_d double)
    *(x) = cast float (x_d)
    *(y) = cast float (y_d)
}
func captMouseFramePosition(x *double, y *double) void {
    glfwGetCursorPos(_captain_window, x, y)
}
func captMouseViewPosition(x *float, y *float) void {
    glfwGetCursorPos(_captain_window, undef x_d double, undef y_d double)
    *(x) = ((cast float (x_d) * captViewWidth()) / cast float (captFrameWidth()))
    *(y) = ((cast float (y_d) * captViewHeight()) / cast float (captFrameHeight()))
}
func captResizable(resizable bool) void {
    _captain_resizable = resizable
}
func captOnSetup(on_setup_func func() void) void {
    _captain_setup = on_setup_func
}
func captOnExit(on_exit_func func() void) void {
    _captain_exit = on_exit_func
}
func captOnDraw(on_draw_func func() void) void {
    _captain_draw = on_draw_func
}
func captOnStep(on_step_func func() void) void {
    _captain_step = on_step_func
    _captain_step_fps = 60gi
}
func captOnStep(on_step_func func() void, step_fps uint) void {
    _captain_step = on_step_func
    if (step_fps == 0gi) {
        _captain_step_fps = 1000000gi
    } else {
        _captain_step_fps = step_fps
    }
}
func captOnClick(on_click_func func(float, float, int) void, use_mouse_view_coords bool) void {
    _captain_click = on_click_func
    _captain_click_use_view_mouse = use_mouse_view_coords
}
func captOnRelease(on_release_func func(float, float, int) void, use_mouse_view_coords bool) void {
    _captain_release = on_release_func
    _captain_release_use_view_mouse = use_mouse_view_coords
}
func captOnKey(on_key_func func(int, int, int, int) void) void {
    _captain_key = on_key_func
}
func captColor(r float, g float, b float) CaptColor {
    return captColor(r, g, b, 1.000000f)
}
func captColor(r float, g float, b float, a float) CaptColor {
    <unknown statement>
    color.r = r
    color.g = g
    color.b = b
    color.a = a
    return color
}
func captColor(r int, g int, b int) CaptColor {
    return captColor(r, g, b, 255gi)
}
func captColor(r int, g int, b int, a int) CaptColor {
    <unknown statement>
    color.r = (cast float (r) / 255.000000f)
    color.g = (cast float (g) / 255.000000f)
    color.b = (cast float (b) / 255.000000f)
    color.a = (cast float (a) / 255.000000f)
    return color
}
func captClearColor(color CaptColor) void {
    glClearColor(color.r, color.g, color.b, color.a)
    glClear(GL_COLOR_BUFFER_BIT)
}
func invalidate(this *CaptTexture) void {
    this.id = 0gi
}
func isValid(this *CaptTexture) bool {
    return (this.id != 0gi)
}
func free(this *CaptTexture) void {
    if (this.id != 0gi) {
        glDeleteTextures(1gi, &this.id)
    }
}
func captTexture(filename *ubyte) CaptTexture {
    return captTexture(filename, true)
}
func captTexture(filename *ubyte, approximate bool) CaptTexture {
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    image *ubyte = stbi_load(filename, &x, &y, &n, 4gi)
    if (image == null) {
        texture.id = 0gi
        return texture
    }
    blur_mode GLenum = GL_NEAREST
    if approximate {
        blur_mode = GL_LINEAR
    }
    glGenTextures(1gi, &texture.id)
    glBindTexture(GL_TEXTURE_2D, texture.id)
    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, blur_mode)
    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, blur_mode)
    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE)
    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE)
    glTexImage2D(GL_TEXTURE_2D, 0gi, GL_RGBA, x, y, 0gi, GL_RGBA, GL_UNSIGNED_BYTE, image)
    glBindTexture(GL_TEXTURE_2D, 0ui)
    stbi_image_free(image)
    return texture
}
func create(this *CaptModel, points *float, points_length usize, uvs *float, uvs_length usize) void {
    this.triangle_count = cast int ((points_length / 3ui))
    this.vertices_vbo = 0ui
    glGenBuffers(1gi, &this.vertices_vbo)
    glBindBuffer(GL_ARRAY_BUFFER, this.vertices_vbo)
    glBufferData(GL_ARRAY_BUFFER, cast int ((sizeof float * points_length)), points, GL_STATIC_DRAW)
    this.uvs_vbo = 0ui
    glGenBuffers(1gi, &this.uvs_vbo)
    glBindBuffer(GL_ARRAY_BUFFER, this.uvs_vbo)
    glBufferData(GL_ARRAY_BUFFER, cast int ((sizeof float * uvs_length)), uvs, GL_STATIC_DRAW)
    glGenVertexArrays(1gi, &this.vao)
    glBindVertexArray(this.vao)
    glEnableVertexAttribArray(0ui)
    glBindBuffer(GL_ARRAY_BUFFER, this.vertices_vbo)
    glVertexAttribPointer(0ui, 3gi, GL_FLOAT, GL_FALSE, 0gi, null)
    glEnableVertexAttribArray(1ui)
    glBindBuffer(GL_ARRAY_BUFFER, this.uvs_vbo)
    glVertexAttribPointer(1ui, 2gi, GL_FLOAT, GL_FALSE, 0gi, null)
    glBindBuffer(GL_ARRAY_BUFFER, 0ui)
    glBindVertexArray(0ui)
}
func draw(this *CaptModel) void {
    glBindVertexArray(this.vao)
    glDrawArrays(GL_TRIANGLES, 0gi, this.triangle_count)
}
func free(this *CaptModel) void {
    glDeleteBuffers(1gi, &this.vertices_vbo)
    glDeleteBuffers(1gi, &this.uvs_vbo)
    glDeleteVertexArrays(1gi, &this.vao)
}
func captBindTexture(texture CaptTexture) void {
    glActiveTexture(GL_TEXTURE0)
    glBindTexture(GL_TEXTURE_2D, texture.id)
}
func create(this *CaptShader, vertex_code *ubyte, fragment_code *ubyte) void {
    log_length int
    log_message *ubyte
    status GLint
    this.vertex = glCreateShader(GL_VERTEX_SHADER)
    glShaderSource(this.vertex, 1gi, &vertex_code, null)
    glCompileShader(this.vertex)
    glGetShaderiv(this.vertex, GL_COMPILE_STATUS, &status)
    if (status == 0gi) {
        puts('Failed to compile vertex shader')
        log_message = malloc(1024gi)
        glGetShaderInfoLog(this.vertex, 1024gi, &log_length, log_message)
        if (log_length != 0gi) {
            puts(log_message)
        }
        free(log_message)
    }
    this.fragment = glCreateShader(GL_FRAGMENT_SHADER)
    glShaderSource(this.fragment, 1gi, &fragment_code, null)
    glCompileShader(this.fragment)
    glGetShaderiv(this.fragment, GL_COMPILE_STATUS, &status)
    if (status == 0gi) {
        puts('Failed to compile fragment shader')
        log_message = malloc(1024gi)
        glGetShaderInfoLog(this.fragment, 1024gi, &log_length, log_message)
        if (log_length != 0gi) {
            puts(log_message)
        }
        free(log_message)
    }
    this.program = glCreateProgram()
    glAttachShader(this.program, this.vertex)
    glAttachShader(this.program, this.fragment)
    glLinkProgram(this.program)
    glValidateProgram(this.program)
}
func use(this *CaptShader) void {
    glUseProgram(this.program)
}
func free(this *CaptShader) void {
    glDetachShader(this.program, this.vertex)
    glDetachShader(this.program, this.fragment)
    glDeleteShader(this.vertex)
    glDeleteShader(this.fragment)
    glDeleteProgram(this.program)
}
func getUniformLocation(this *CaptShader, name *ubyte) GLint {
    return glGetUniformLocation(this.program, name)
}
func uploadFloat(this *CaptShader, location GLint, value float) void {
    glUniform1f(location, value)
}
func uploadMatrix4f(this *CaptShader, location GLint, matrix *Matrix4f) void {
    if (matrix == null) {
        return 
    }
    glUniformMatrix4fv(location, 1gi, false, cast *float (&matrix.array))
}
func uploadMatrix4f(this *CaptShader, location GLint, matrix Matrix4f) void {
    glUniformMatrix4fv(location, 1gi, false, cast *float (&matrix.array))
}
func captDrawTexture(texture CaptTexture, x float, y float, w float, h float) void {
    <unknown statement>
    transformation.translateFromIdentity(x, y, 0.000000f)
    _captain_shader.uploadMatrix4f(_captain_shader_transformation_location, transformation)
    <unknown statement>
    temporary CaptModel = captTemporaryModel(w, h)
    captBindTexture(texture)
    temporary.draw()
    temporary.free()
}
func captDrawOpacity(value float) void {
    _captain_shader.uploadFloat(_captain_shader.getUniformLocation('opacity'), value)
}
func captAddFrameModel(w float, h float) *CaptModel {
    frameModel CaptFrameModel
    frameModel.model = captTemporaryModel(w, h)
    frameModel.width = w
    frameModel.height = h
    if (_captain_models_length == _captain_models_capacity) {
        if (_captain_models_capacity == 0gi) {
            _captain_models_capacity = 8gi
        } else {
            <unknown statement>
        }
        new_models *CaptFrameModel = new CaptFrameModel * (_captain_models_capacity)
        memcpy(new_models, _captain_models, (_captain_models_length * sizeof CaptFrameModel))
        delete _captain_models
        _captain_models = new_models
    }
    _captain_models[_captain_models_length] = frameModel
    <unknown statement>
    return &_captain_models[(_captain_models_length - 1gi)].model
}
func captTemporaryModel(w float, h float) CaptModel {
    <unknown statement>
    <unknown statement>
    points *float = cast *float (&points_storage)
    points_length usize = 18gi
    uv_data *float = cast *float (&uv_data_storage)
    uv_data_length usize = 12gi
    points[0gi] = 0.000000f
    points[1gi] = h
    points[2gi] = 0.000000f
    points[3gi] = 0.000000f
    points[4gi] = 0.000000f
    points[5gi] = 0.000000f
    points[6gi] = w
    points[7gi] = 0.000000f
    points[8gi] = 0.000000f
    points[9gi] = 0.000000f
    points[10gi] = h
    points[11gi] = 0.000000f
    points[12gi] = w
    points[13gi] = 0.000000f
    points[14gi] = 0.000000f
    points[15gi] = w
    points[16gi] = h
    points[17gi] = 0.000000f
    uv_data[0gi] = 0.000000f
    uv_data[1gi] = 1.000000f
    uv_data[2gi] = 0.000000f
    uv_data[3gi] = 0.000000f
    uv_data[4gi] = 1.000000f
    uv_data[5gi] = 0.000000f
    uv_data[6gi] = 0.000000f
    uv_data[7gi] = 1.000000f
    uv_data[8gi] = 1.000000f
    uv_data[9gi] = 0.000000f
    uv_data[10gi] = 1.000000f
    uv_data[11gi] = 1.000000f
    model CaptModel
    model.create(points, points_length, uv_data, uv_data_length)
    return model
}
func captRandomize() void {
    srand(time(null))
}
func captRandom() double {
    return (cast double (rand()) / cast double (RAND_MAX))
}
func captKeyHeld(key int) bool {
    return (glfwGetKey(_captain_window, key) == GLFW_PRESS)
}
func captHideMouse() void {
    if _captain_window {
        glfwSetInputMode(_captain_window, GLFW_CURSOR, GLFW_CURSOR_HIDDEN)
    } else {
        _captain_hide_mouse_on_creation = true
    }
}
func captShowMouse() void {
    if _captain_window {
        glfwSetInputMode(_captain_window, GLFW_CURSOR, GLFW_CURSOR_NORMAL)
    } else {
        _captain_hide_mouse_on_creation = false
    }
}
func captTexture(filename String) CaptTexture {
    cstr *ubyte = filename.cstr()
    texture CaptTexture = captTexture(cstr)
    delete cstr
    if (texture.id == 0gi) {
        printf('Error loading texture: %s\n', filename)
        printf('Reason: %s\n', stbi_failure_reason())
        printf('[errno %d %s]\n', errno, strerror(errno))
    }
    return texture
}
func captTexture(filename String, appoximate bool) CaptTexture {
    cstr *ubyte = filename.cstr()
    errno = 0gi
    texture CaptTexture = captTexture(cstr, appoximate)
    if (texture.id == 0gi) {
        printf('Error loading texture: %s\n', filename)
        printf('Reason: %s\n', stbi_failure_reason())
        printf('[errno %d %s]\n', errno, strerror(errno))
    }
    delete cstr
    return texture
}
func destroy(this *GameAnimation) void {
    <unknown statement>
    delete this.frames
}
func reset(this *GameAnimation) void {
    this.currentFrame = 0gi
    this.ticker = 0gi
}
func now(this *GameAnimation) CaptTexture {
    return this.frames[this.currentFrame]
}
func update(this *GameAnimation) void {
    if (++(this.ticker) > this.interval) {
        this.ticker = 0gi
        this.advance()
    }
}
func advance(this *GameAnimation) void {
    if (++(this.currentFrame) == this.length) {
        this.currentFrame = 0gi
    }
}
func newInstance(this *GameAnimation) GameAnimation {
    anim GameAnimation = *(this)
    anim.currentFrame = 0gi
    anim.ticker = 0gi
    return anim
}
func gameAnimation(pattern String, beginning int, end int, tickerInterval int) GameAnimation {
    anim GameAnimation
    anim.interval = tickerInterval
    if (beginning <= end) {
        anim.length = ((end - beginning) + 1gi)
        anim.frames = new CaptTexture * (anim.length)
        n int = beginning
        while (n <= end) {
            anim.frames[(n - beginning)] = captTexture((pattern % n), false)
            <unknown statement>
        }
    } else {
        anim.length = ((beginning - end) + 1gi)
        anim.frames = new CaptTexture * (anim.length)
        n int = end
        while (n <= beginning) {
            anim.frames[(((anim.length - n) + end) - 1gi)] = captTexture((pattern % n), false)
            <unknown statement>
        }
    }
    return anim
}
func gameAnimation(frames *CaptTexture, length usize, interval usize) GameAnimation {
    <unknown statement>
    anim.frames = frames
    anim.length = length
    anim.currentFrame = 0gi
    anim.ticker = 0gi
    anim.interval = interval
    return anim
}
func isValid(this *GameImageEx) bool {
    return this.texture.isValid()
}
func gameImageEx(texture CaptTexture, x_offset int, y_offset int, width int, height int) GameImageEx {
    <unknown statement>
    ex.texture = texture
    ex.x_offset = x_offset
    ex.y_offset = y_offset
    ex.width = width
    ex.height = height
    return ex
}
func pickupItem(itemSpawn ItemSpawn) void {
    pickupItem(itemSpawn.item, (cast float (cast *Region (&itemSpawn).getX()) - camera_x), (cast float (cast *Region (&itemSpawn).getY()) - camera_y))
}
func pickupItem(newItem Item, screenX float, screenY float) void {
    item = newItem
    item_screen_x = screenX
    item_screen_y = screenY
    cannon.rid()
}
func addCollectedResource(resource Resource, screenX float, screenY float) void {
    <unknown statement>
    collected.resource = resource
    collected.x = screenX
    collected.y = screenY
    collected_resources.add(collected)
}
func set(this *Price, string int, slime int, wood int, feathers int, metal int, crystals int) void {
    this.string = string
    this.slime = slime
    this.wood = wood
    this.feathers = feathers
    this.metal = metal
    this.crystals = crystals
}
func create(this *Player, x int, y int) void {
    this.x = x
    this.y = y
    this.vx = 0gi
    this.vy = 0gi
    this.direction = 1gi
    this.swimming = false
    this.moving = false
    this.moving_horizontally = false
    this.parachuting = false
    this.on_ground = null
    this.frozen_image.texture.invalidate()
}
func create(this *Player, x int, y int, vx int, vy int, direction int, swimming bool, moving bool, moving_horizontally bool, parachuting bool, on_ground *Region, frozen_image GameImageEx) void {
    this.x = x
    this.y = y
    this.vx = vx
    this.vy = vy
    this.direction = direction
    this.swimming = swimming
    this.moving = moving
    this.moving_horizontally = moving_horizontally
    this.parachuting = parachuting
    this.on_ground = on_ground
    this.frozen_image = frozen_image
}
func freeze(this *Player, frozen_image GameImageEx) Player {
    <unknown statement>
    newPlayer.create(this.x, this.y, this.vx, this.vy, this.direction, this.swimming, this.moving, this.moving_horizontally, this.parachuting, this.on_ground, frozen_image)
    return newPlayer
}
func thaw(this *Player) Player {
    invalidGameImageEx GameImageEx
    <unknown statement>
    newPlayer.create(this.x, this.y, this.vx, this.vy, this.direction, this.swimming, this.moving, this.moving_horizontally, this.parachuting, this.on_ground, invalidGameImageEx)
    return newPlayer
}
func getAABB(this *Player) AABB {
    return AABB(this.x, this.y, 64gi, 64gi)
}
func getAABB(this *Player, adj_x int, adj_y int) AABB {
    return AABB((this.x + adj_x), (this.y + adj_y), 64gi, 64gi)
}
func getX(this *Region) int {
    return this.collision.x
}
func getY(this *Region) int {
    return this.collision.y
}
func getMaxX(this *Region) int {
    return (this.collision.x + this.collision.w)
}
func getMaxY(this *Region) int {
    return (this.collision.y + this.collision.h)
}
func getVisualX(this *Region) int {
    return this.visual.x
}
func getVisualY(this *Region) int {
    return this.visual.y
}
func getVisualMaxX(this *Region) int {
    return (this.visual.x + this.visual.w)
}
func getVisualMaxY(this *Region) int {
    return (this.visual.y + this.visual.h)
}
func getWidth(this *Region) int {
    return this.collision.w
}
func getHeight(this *Region) int {
    return this.collision.h
}
func getVisualWidth(this *Region) int {
    return this.visual.w
}
func getVisualHeight(this *Region) int {
    return this.visual.h
}
func region(x int, y int, w int, h int) Region {
    <unknown statement>
    region.collision = AABB(x, y, w, h)
    region.visual = region.collision
    return region
}
func region(x int, y int, w int, h int, x2 int, y2 int, w2 int, h2 int) Region {
    <unknown statement>
    region.collision = AABB(x, y, w, h)
    region.visual = AABB(x2, y2, w2, h2)
    return region
}
func platform(x int, y int, w int, h int) Platform {
    platform Platform
    platform.collision = AABB(x, y, w, h)
    platform.visual = AABB(x, y, w, h)
    return platform
}
func lake(x int, y int, w int, h int) Lake {
    <unknown statement>
    lake.collision = AABB(x, y, w, h)
    lake.visual = AABB(x, y, w, h)
    return lake
}
func bridge(x int, y int, w int) Bridge {
    <unknown statement>
    bridge.collision = AABB(x, y, w, 4gi)
    bridge.visual = AABB(x, y, w, 4gi)
    return bridge
}
func portal(x int, y int) Portal {
    <unknown statement>
    portal.collision = AABB((x + 48gi), (y + 64gi), 32gi, 64gi)
    portal.visual = AABB(x, y, 128gi, 128gi)
    return portal
}
func decoration(texture CaptTexture, x int, y int, w int, h int) Decoration {
    <unknown statement>
    decor.collision = AABB(x, y, w, h)
    decor.visual = AABB(x, y, w, h)
    decor.texture = texture
    return decor
}
func itemSpawn(item Item, x int, y int, w int, h int) ItemSpawn {
    <unknown statement>
    spawn.collision = AABB(x, y, w, h)
    spawn.visual = AABB(x, y, w, h)
    spawn.item = item
    return spawn
}
func portalEnabler(x int, y int, w int, h int) PortalEnabler {
    <unknown statement>
    enabler.collision = AABB(x, y, w, h)
    enabler.visual = AABB(x, y, w, h)
    enabler.collected = false
    return enabler
}
func update(this *Particle) bool {
    if (this.animation.currentFrame == (this.animation.length - 1gi)) {
        return true
    }
    this.animation.update()
    return false
}
func now(this *Particle) CaptTexture {
    return this.animation.now()
}
func particle(sourceAnimation GameAnimation, x int, y int, w int, h int) Particle {
    <unknown statement>
    particle.collision = AABB(x, y, w, h)
    particle.visual = AABB(x, y, w, h)
    particle.animation = sourceAnimation.newInstance()
    return particle
}
func update(this *Spider) void {
    this.animation.update()
}
func now(this *Spider) CaptTexture {
    return this.animation.now()
}
func getAABB(this *Spider) AABB {
    return AABB(this.x, this.y, 64gi, 32gi)
}
func getAABB(this *Spider, adj_x int, adj_y int) AABB {
    return AABB((this.x + adj_x), (this.y + adj_y), 64gi, 32gi)
}
func getDroppedResource(this *Spider) Resource {
    return ((captRandom() < 0.250000gf) ? this.potential_resource : Resource::NONE)
}
func spider(source_animation GameAnimation, x int, y int) Spider {
    return spider(source_animation, x, y, 1gi, false)
}
func spider(source_animation GameAnimation, x int, y int, speed int) Spider {
    return spider(source_animation, x, y, speed, false)
}
func spider(source_animation GameAnimation, x int, y int, speed int, reverse bool) Spider {
    <unknown statement>
    spider.x = x
    spider.y = y
    spider.vx = (reverse ? -1gi : 1gi)
    spider.vy = 0gi
    spider.speed = speed
    spider.animation = source_animation.newInstance()
    spider.potential_resource = Resource::NONE
    if (source_animation.frames == spider_animation.frames) {
        spider.potential_resource = Resource::STRING
    } else {
        if (source_animation.frames == beetle_animation.frames) {
            spider.potential_resource = Resource::WOOD
        }
    }
    if (source_animation.frames == slime_animation.frames) {
        spider.potential_resource = Resource::SLIME
    }
    return spider
}
func update(this *Swordfish) void {
    this.animation.update()
    if (++(this.ticker) == this.interval) {
        this.ticker = 0gi
        <unknown statement>
    }
}
func now(this *Swordfish) CaptTexture {
    return this.animation.now()
}
func getAABB(this *Swordfish) AABB {
    return AABB(this.x, this.y, 256gi, 64gi)
}
func swordfish(source_animation GameAnimation, x int, y int, speed int, interval int) Swordfish {
    return swordfish(source_animation, x, y, speed, interval, false)
}
func swordfish(source_animation GameAnimation, x int, y int, speed int, interval int, reverse bool) Swordfish {
    <unknown statement>
    fish.x = x
    fish.y = y
    fish.vx = (reverse ? -1gi : 1gi)
    fish.speed = speed
    fish.interval = interval
    fish.ticker = 0gi
    fish.animation = source_animation.newInstance()
    return fish
}
func set(this *<$T> Optional, value $T) void {
    this.value = value
    this.has = true
}
func get(this *<$T> Optional) $T {
    return this.value
}
func rid(this *<$T> Optional) void {
    this.has = false
}
func loadTextures(assetsFolder String) void {
    sky = captTexture((assetsFolder + "skywrap.png"), false)
    platform_north = captTexture((assetsFolder + "platformn.png"), false)
    platform_north_east = captTexture((assetsFolder + "platformne.png"), false)
    platform_north_west = captTexture((assetsFolder + "platformnw.png"), false)
    platform_south = captTexture((assetsFolder + "platforms.png"), false)
    platform_south_east = captTexture((assetsFolder + "platformse.png"), false)
    platform_south_west = captTexture((assetsFolder + "platformsw.png"), false)
    platform_east = captTexture((assetsFolder + "platforme.png"), false)
    platform_west = captTexture((assetsFolder + "platformw.png"), false)
    platform_center = captTexture((assetsFolder + "platformc.png"), false)
    water = captTexture((assetsFolder + "water.png"), false)
    bushl = captTexture((assetsFolder + "bushl.png"), false)
    bushr = captTexture((assetsFolder + "bushr.png"), false)
    sky_th2 = captTexture((assetsFolder + "skywrap_th2.png"), false)
    platform_north_th2 = captTexture((assetsFolder + "platformn_th2.png"), false)
    platform_north_east_th2 = captTexture((assetsFolder + "platformne_th2.png"), false)
    platform_north_west_th2 = captTexture((assetsFolder + "platformnw_th2.png"), false)
    platform_south_th2 = captTexture((assetsFolder + "platforms_th2.png"), false)
    platform_south_east_th2 = captTexture((assetsFolder + "platformse_th2.png"), false)
    platform_south_west_th2 = captTexture((assetsFolder + "platformsw_th2.png"), false)
    platform_east_th2 = captTexture((assetsFolder + "platforme_th2.png"), false)
    platform_west_th2 = captTexture((assetsFolder + "platformw_th2.png"), false)
    platform_center_th2 = captTexture((assetsFolder + "platformc_th2.png"), false)
    water_th2 = captTexture((assetsFolder + "water_th2.png"), false)
    bushl_th2 = captTexture((assetsFolder + "bushl_th2.png"), false)
    bushr_th2 = captTexture((assetsFolder + "bushr_th2.png"), false)
    idle = captTexture((assetsFolder + "idle.png"), false)
    death = captTexture((assetsFolder + "death.png"), false)
    gun_idle = captTexture((assetsFolder + "gunIdle.png"), false)
    gun_death = captTexture((assetsFolder + "gunDeath.png"), false)
    cannoneer_idle = captTexture((assetsFolder + "cannoneerIdle.png"), false)
    cannoneer_death = captTexture((assetsFolder + "cannoneerDeath.png"), false)
    bridge0 = captTexture((assetsFolder + "bridge0.png"), false)
    bridge1 = captTexture((assetsFolder + "bridge1.png"), false)
    parachute = captTexture((assetsFolder + "parachute.png"), false)
    cannoneer_parachute = captTexture((assetsFolder + "cannoneerParachute.png"), false)
    flower_a = captTexture((assetsFolder + "flowera.png"), false)
    flower_b = captTexture((assetsFolder + "flowerb.png"), false)
    rock_a = captTexture((assetsFolder + "rocka.png"), false)
    rock_b = captTexture((assetsFolder + "rockb.png"), false)
    mushroom_a = captTexture((assetsFolder + "mushrooma.png"), false)
    mushroom_b = captTexture((assetsFolder + "mushroomb.png"), false)
    stump = captTexture((assetsFolder + "stump.png"), false)
    grass_a = captTexture((assetsFolder + "grassa.png"), false)
    grass_b = captTexture((assetsFolder + "grassb.png"), false)
    grass_c = captTexture((assetsFolder + "grassc.png"), false)
    fence_a = captTexture((assetsFolder + "fencea.png"), false)
    fence_b = captTexture((assetsFolder + "fenceb.png"), false)
    slot = captTexture((assetsFolder + "slot.png"), false)
    star = captTexture((assetsFolder + "star.png"), false)
    wing = captTexture((assetsFolder + "wing.png"), false)
    gun = captTexture((assetsFolder + "gun.png"), false)
    bullet = captTexture((assetsFolder + "bullet.png"), false)
    cannon_power = captTexture((assetsFolder + "cannonPower.png"), false)
    cannon_idle = captTexture((assetsFolder + "cannon0.png"), false)
    ball = captTexture((assetsFolder + "ball.png"), false)
    win = captTexture((assetsFolder + "win.png"), false)
    how_to_play = captTexture((assetsFolder + "controls.png"), false)
    testinv = captTexture((assetsFolder + "testinv.png"), false)
    invselected = captTexture((assetsFolder + "invselected.png"), false)
    number0 = captTexture((assetsFolder + "0.png"), false)
    number1 = captTexture((assetsFolder + "1.png"), false)
    number2 = captTexture((assetsFolder + "2.png"), false)
    number3 = captTexture((assetsFolder + "3.png"), false)
    number4 = captTexture((assetsFolder + "4.png"), false)
    number5 = captTexture((assetsFolder + "5.png"), false)
    number6 = captTexture((assetsFolder + "6.png"), false)
    number7 = captTexture((assetsFolder + "7.png"), false)
    number8 = captTexture((assetsFolder + "8.png"), false)
    number9 = captTexture((assetsFolder + "9.png"), false)
    string = captTexture((assetsFolder + "string_item.png"), false)
    slime = captTexture((assetsFolder + "slime_item.png"), false)
    wood = captTexture((assetsFolder + "wood_item.png"), false)
    feather = captTexture((assetsFolder + "feather_item.png"), false)
    metal = captTexture((assetsFolder + "metal_item.png"), false)
    crystal = captTexture((assetsFolder + "crystal_item.png"), false)
    crafting_mode = captTexture((assetsFolder + "crafting_mode.png"), false)
    inventory_mode = captTexture((assetsFolder + "inventory_mode.png"), false)
}
func destroyTextures() void {
    sky.free()
    platform_north.free()
    platform_north_east.free()
    platform_north_west.free()
    platform_south.free()
    platform_south_east.free()
    platform_south_west.free()
    platform_east.free()
    platform_west.free()
    platform_center.free()
    water.free()
    bushl.free()
    bushr.free()
    sky_th2.free()
    platform_north_th2.free()
    platform_north_east_th2.free()
    platform_north_west_th2.free()
    platform_south_th2.free()
    platform_south_east_th2.free()
    platform_south_west_th2.free()
    platform_east_th2.free()
    platform_west_th2.free()
    platform_center_th2.free()
    water_th2.free()
    bushl_th2.free()
    bushr_th2.free()
    idle.free()
    death.free()
    gun_idle.free()
    gun_death.free()
    cannoneer_idle.free()
    cannoneer_death.free()
    bridge0.free()
    bridge1.free()
    parachute.free()
    cannoneer_parachute.free()
    flower_a.free()
    flower_b.free()
    rock_a.free()
    rock_b.free()
    mushroom_a.free()
    mushroom_b.free()
    stump.free()
    grass_a.free()
    grass_b.free()
    grass_c.free()
    fence_a.free()
    fence_b.free()
    slot.free()
    star.free()
    wing.free()
    gun.free()
    bullet.free()
    cannon_power.free()
    cannon_idle.free()
    ball.free()
    win.free()
    how_to_play.free()
    testinv.free()
    invselected.free()
    number0.free()
    number1.free()
    number2.free()
    number3.free()
    number4.free()
    number5.free()
    number6.free()
    number7.free()
    number8.free()
    number9.free()
    string.free()
    slime.free()
    wood.free()
    feather.free()
    metal.free()
    crystal.free()
    crafting_mode.free()
    inventory_mode.free()
}
func loadAnimations(assetsFolder String) void {
    wave = gameAnimation((assetsFolder + "wave%.png"), 0gi, 3gi, 10gi)
    wave_th2 = gameAnimation((assetsFolder + "wave%_th2.png"), 0gi, 3gi, 10gi)
    walk = gameAnimation((assetsFolder + "walk%.png"), 0gi, 3gi, 4gi)
    swim = gameAnimation((assetsFolder + "swim%.png"), 0gi, 5gi, 6gi)
    gun_walk = gameAnimation((assetsFolder + "gunWalk%.png"), 0gi, 5gi, 6gi)
    gun_swim = gameAnimation((assetsFolder + "gunSwim%.png"), 0gi, 5gi, 6gi)
    cannoneer_walk = gameAnimation((assetsFolder + "cannoneerWalk%.png"), 0gi, 3gi, 6gi)
    cannoneer_swim = gameAnimation((assetsFolder + "cannoneerSwim%.png"), 0gi, 5gi, 6gi)
    spider_animation = gameAnimation((assetsFolder + "spider%.png"), 0gi, 3gi, 4gi)
    beetle_animation = gameAnimation((assetsFolder + "beetle%.png"), 0gi, 3gi, 4gi)
    slime_animation = gameAnimation((assetsFolder + "slime%.png"), 0gi, 1gi, 15gi)
    swordfish_animation = gameAnimation((assetsFolder + "swordfish%.png"), 0gi, 1gi, 30gi)
    inwards_portal = gameAnimation((assetsFolder + "portal%.png"), 4gi, 0gi, 15gi)
    outwards_portal = gameAnimation((assetsFolder + "portal%.png"), 0gi, 4gi, 15gi)
    disabled_portal = gameAnimation((assetsFolder + "disabled_portal%.png"), 0gi, 16gi, 5gi)
    smoke = gameAnimation((assetsFolder + "smoke%.png"), 0gi, 4gi, 1gi)
    flame = gameAnimation((assetsFolder + "flame%.png"), 0gi, 1gi, 1gi)
    enabler = gameAnimation((assetsFolder + "enabler%.png"), 0gi, 1gi, 20gi)
    coin = gameAnimation((assetsFolder + "coin%.png"), 0gi, 7gi, 5gi)
}
func destroyAnimations() void {
    wave.destroy()
    walk.destroy()
    swim.destroy()
    gun_walk.destroy()
    gun_swim.destroy()
    cannoneer_walk.destroy()
    cannoneer_swim.destroy()
    spider_animation.destroy()
    beetle_animation.destroy()
    slime_animation.destroy()
    swordfish_animation.destroy()
    inwards_portal.destroy()
    outwards_portal.destroy()
    disabled_portal.destroy()
    smoke.destroy()
    flame.destroy()
    enabler.destroy()
    coin.destroy()
}
func loadAssets() void {
    assetsFolder String = (where() + "assets/")
    loadTextures(assetsFolder)
    loadAnimations(assetsFolder)
}
func destroyAssets() void {
    destroyTextures()
    destroyAnimations()
    platforms.__defer__()
    lakes.__defer__()
    bridges.__defer__()
    spiders.__defer__()
    swordfishes.__defer__()
    item_spawns.__defer__()
    particles.__defer__()
    bullets.__defer__()
    collected_resources.__defer__()
}
func setupState() void {
    wasd = controlScheme(GLFW_KEY_SPACE, GLFW_KEY_S, GLFW_KEY_A, GLFW_KEY_D, GLFW_KEY_J, GLFW_KEY_K, GLFW_KEY_ESCAPE, GLFW_KEY_W)
    arrows = controlScheme(GLFW_KEY_UP, GLFW_KEY_DOWN, GLFW_KEY_LEFT, GLFW_KEY_RIGHT, GLFW_KEY_SPACE, GLFW_KEY_LEFT_SHIFT, GLFW_KEY_ESCAPE, GLFW_KEY_UP)
    controls = wasd
    when_paused = 0.000000gf
    accumulated_pause_time = 0.000000gf
    is_paused = false
    is_dead = false
    respawn_timer = 0gi
    scene = 0gi
    scene_width = 1920.000000f
    item = Item::NONE
    item_screen_x = 0.000000f
    item_screen_y = 0.000000f
    inventory_open = false
    inventory_bg_shade = 0.000000f
    inventory_selection_x = 0gi
    inventory_selection_y = 0gi
    clearInventory()
    numbers[0gi] = number0
    numbers[1gi] = number1
    numbers[2gi] = number2
    numbers[3gi] = number3
    numbers[4gi] = number4
    numbers[5gi] = number5
    numbers[6gi] = number6
    numbers[7gi] = number7
    numbers[8gi] = number8
    numbers[9gi] = number9
    craftable[0gi] = Item::WING
    craftable_prices[0gi].set(0gi, 0gi, 0gi, 5gi, 0gi, 0gi)
    craftable[1gi] = Item::GUN
    craftable_prices[1gi].set(3gi, 0gi, 0gi, 0gi, 0gi, 0gi)
}
func gotoScene(newScene int) void {
    if (newScene == 1gi) {
        gotoScene1()
        return 
    }
    if (newScene == 2gi) {
        gotoScene2()
        return 
    }
    if (newScene == 3gi) {
        gotoScene3()
        return 
    }
    if (newScene == 4gi) {
        gotoScene4()
        return 
    }
    if (newScene == 5gi) {
        gotoScene5()
        return 
    }
    if (newScene == 6gi) {
        gotoScene6()
        return 
    }
    if (newScene == 7gi) {
        gotoScene7()
        return 
    }
    if (newScene == 8gi) {
        gotoScene8()
        return 
    }
    gotoWinScreen()
}
func scenePresets() void {
    camera_x = 0.000000f
    camera_y = 0.000000f
    is_dead = false
    respawn_timer = 0gi
    platforms.clear()
    lakes.clear()
    bridges.clear()
    spiders.clear()
    swordfishes.clear()
    item = Item::NONE
    item_spawns.clear()
    entrance.rid()
    exit_disabled = false
    portal_enabler.rid()
    particles.clear()
    bullets.clear()
    collected_resources.clear()
    cannon.rid()
    cannon_ball.rid()
    theme = &theme1
}
func sceneDefaultShadows() void {
    shadow = player.freeze(gameImageEx(idle, 0gi, 0gi, 64gi, 64gi))
    default_shadow = player.freeze(gameImageEx(idle, 0gi, 0gi, 64gi, 64gi))
}
func gotoTitleScreen() void {
    scenePresets()
    scene = 0gi
    scene_width = 2560.000000f
    player.create((640gi - 64gi), (544gi - 64gi))
    sceneDefaultShadows()
    createPlatform(512gi, 544gi, 256gi, 256gi, DECOR_BUSH)
    createPlatform(1088gi, 320gi, 256gi, 256gi, DECOR_NONE)
    createPlatform(64gi, 704gi, 256gi, 128gi, DECOR_NONE)
    lakes.add(lake(0gi, 768gi, 2560gi, 512gi))
    bridges.add(bridge((256gi + 64gi), 704gi, 192gi))
    bridges.add(bridge((((256gi + 256gi) + 256gi) + 192gi), (320gi + 192gi), 128gi))
}
func gotoScene1() void {
    scenePresets()
    scene = 1gi
    scene_width = 2560.000000f
    player.create((640gi - 64gi), (544gi - 64gi))
    sceneDefaultShadows()
    createPlatform(512gi, 544gi, 256gi, 256gi, DECOR_BUSH)
    createPlatform(1088gi, 320gi, 256gi, 256gi, DECOR_NONE)
    createPlatform(64gi, 704gi, 256gi, 128gi, DECOR_NONE)
    createPlatform(1920gi, 480gi, 256gi, 512gi, DECOR_NONE)
    lakes.add(lake(0gi, 768gi, 2560gi, 512gi))
    bridges.add(bridge((256gi + 64gi), 704gi, 192gi))
    bridges.add(bridge((((256gi + 256gi) + 256gi) + 192gi), (320gi + 192gi), 128gi))
    bridges.add(bridge((1920gi + 256gi), (480gi + 32gi), 256gi))
    exit.set(portal((1920gi + 64gi), (480gi - 128gi)))
}
func gotoScene2() void {
    scenePresets()
    scene = 2gi
    scene_width = 5120.000000f
    player.create((640gi - 64gi), (544gi - 64gi))
    sceneDefaultShadows()
    createPlatform(512gi, 544gi, 256gi, 640gi, DECOR_NONE)
    createPlatform(1298gi, 544gi, 256gi, 384gi, DECOR_FLOWERA)
    createPlatform(1984gi, 384gi, 512gi, 192gi, DECOR_NONE)
    createPlatform(3072gi, 256gi, 256gi, 256gi, DECOR_FLOWERA)
    createPlatform(4608gi, 512gi, 384gi, 512gi, DECOR_NONE)
    createPlatform(3712gi, 512gi, 512gi, 448gi, DECOR_BUSH)
    lakes.add(lake(0gi, 768gi, 5120gi, 512gi))
    bridges.add(bridge(384gi, 704gi, 128gi))
    bridges.add(bridge(3328gi, 384gi, 128gi))
    bridges.add(bridge(4544gi, 704gi, 64gi))
    spiders.add(spider(spider_animation, 1298gi, (544gi - 32gi)))
    spiders.add(spider(spider_animation, 4608gi, (512gi - 32gi)))
    spiders.add(spider(spider_animation, 3712gi, (512gi - 32gi)))
    spiders.add(spider(spider_animation, (3712gi + 256gi), (512gi - 32gi)))
    swordfishes.add(swordfish(swordfish_animation, 2048gi, 1024gi, 4gi, 180gi))
    entrance.set(portal((player.x - 32gi), (player.y - 64gi)))
    exit.set(portal(2048gi, 256gi))
}
func gotoScene3() void {
    scenePresets()
    scene = 3gi
    scene_width = 5120.000000f
    player.create((320gi - 64gi), (544gi - 64gi))
    sceneDefaultShadows()
    createPlatform(128gi, 544gi, 640gi, 320gi, DECOR_FENCE)
    createPlatform(1024gi, 480gi, 512gi, 192gi, DECOR_MUSHROOMB)
    createPlatform(2048gi, 544gi, 256gi, 704gi, DECOR_MUSHROOMA)
    createPlatform(3072gi, 544gi, 320gi, 192gi, DECOR_MUSHROOMB)
    createPlatform(4160gi, 576gi, 640gi, 384gi, DECOR_BUSH)
    lakes.add(lake(0gi, 768gi, 5120gi, 512gi))
    bridges.add(bridge((128gi + 640gi), (544gi + 192gi), 128gi))
    bridges.add(bridge((2048gi + 256gi), (544gi + 192gi), 128gi))
    spiders.add(spider(beetle_animation, 1024gi, (480gi - 32gi), 2gi))
    spiders.add(spider(beetle_animation, 2048gi, (544gi - 32gi), 2gi))
    spiders.add(spider(beetle_animation, 4160gi, (576gi - 32gi), 2gi))
    spiders.add(spider(beetle_animation, (4160gi + 128gi), (576gi - 32gi), 2gi))
    spiders.add(spider(beetle_animation, (4160gi + 384gi), (576gi - 32gi), 2gi))
    swordfishes.add(swordfish(swordfish_animation, (512gi + (4gi * 240gi)), 1024gi, 4gi, 240gi, true))
    swordfishes.add(swordfish(swordfish_animation, (2048gi + 512gi), 896gi, 4gi, 270gi, false))
    swordfishes.add(swordfish(swordfish_animation, ((2048gi + 512gi) + 1024gi), 1024gi, 4gi, 240gi, true))
    swordfishes.add(swordfish(swordfish_animation, 4160gi, 1024gi, 4gi, 90gi, false))
    swordfishes.add(swordfish(swordfish_animation, ((4160gi - 64gi) + (90gi * 4gi)), 1088gi, 4gi, 90gi, true))
    swordfishes.add(swordfish(swordfish_animation, (4160gi + 64gi), 1184gi, 4gi, 90gi, false))
    item_spawns.add(itemSpawn(Item::WING, (1024gi + 256gi), (480gi - 64gi), 64gi, 64gi))
    entrance.set(portal((player.x - 32gi), (player.y - 64gi)))
    exit.set(portal(4864gi, (1280gi - 128gi)))
}
func gotoScene4() void {
    scenePresets()
    scene = 4gi
    scene_width = 5120.000000f
    player.create((640gi - 64gi), (544gi - 64gi))
    sceneDefaultShadows()
    createPlatform(512gi, 544gi, 256gi, 384gi, DECOR_NONE)
    createPlatform(1088gi, 480gi, 256gi, 256gi, DECOR_NONE)
    createPlatform(1856gi, 384gi, 256gi, 768gi, DECOR_FLOWERA)
    createPlatform(2752gi, 320gi, 256gi, 832gi, DECOR_BUSH)
    createPlatform(3584gi, 512gi, 256gi, 640gi, DECOR_STUMP)
    createPlatform(4352gi, 384gi, 576gi, 704gi, DECOR_NONE)
    lakes.add(lake(0gi, 768gi, 5120gi, 512gi))
    bridges.add(bridge((512gi + 256gi), 704gi, 128gi))
    spiders.add(spider(spider_animation, (1856gi + 192gi), (384gi - 32gi), 1gi))
    spiders.add(spider(spider_animation, 2752gi, (320gi - 32gi), 1gi))
    spiders.add(spider(spider_animation, (2752gi + 128gi), (320gi - 32gi), 1gi))
    spiders.add(spider(spider_animation, (2752gi + 128gi), (320gi - 32gi), 1gi))
    spiders.add(spider(beetle_animation, 3584gi, (512gi - 32gi), 2gi))
    spiders.add(spider(beetle_animation, 4352gi, (384gi - 32gi), 2gi))
    spiders.add(spider(beetle_animation, (4352gi + 256gi), (384gi - 32gi), 2gi))
    item_spawns.add(itemSpawn(Item::WING, (1088gi + 96gi), (480gi - 64gi), 64gi, 64gi))
    entrance.set(portal((player.x - 32gi), (player.y - 64gi)))
    exit.set(portal(4736gi, 256gi))
}
func gotoScene5() void {
    scenePresets()
    scene = 5gi
    scene_width = 2560.000000f
    player.create((640gi - 64gi), (544gi - 64gi))
    sceneDefaultShadows()
    createPlatform((256gi + 256gi), 544gi, 256gi, 256gi, DECOR_NONE)
    createPlatform(64gi, 704gi, 256gi, 128gi, DECOR_FLOWERA)
    createPlatform(1024gi, (384gi + 32gi), 640gi, 832gi, DECOR_BUSH)
    createPlatform(2112gi, 576gi, 256gi, 320gi, DECOR_NONE)
    lakes.add(lake(0gi, 768gi, 2560gi, 512gi))
    bridges.add(bridge((256gi + 64gi), 704gi, 192gi))
    swordfishes.add(swordfish(swordfish_animation, 1792gi, 1024gi, 4gi, 90gi, false))
    item_spawns.add(itemSpawn(Item::STAR, (192gi + 32gi), (704gi - 64gi), 64gi, 64gi))
    entrance.set(portal((player.x - 32gi), (player.y - 64gi)))
    exit.set(portal((1024gi + 320gi), ((384gi + 32gi) - 128gi)))
    exit_disabled = true
    portal_enabler.set(portalEnabler((2112gi + 128gi), (576gi - 64gi), 64gi, 64gi))
}
func gotoScene6() void {
    scenePresets()
    scene = 6gi
    scene_width = 5120.000000f
    player.create((640gi - 64gi), (544gi - 64gi))
    sceneDefaultShadows()
    createPlatform(256gi, 544gi, 512gi, 384gi, DECOR_BUSH)
    createPlatform(1088gi, 480gi, 256gi, 256gi, DECOR_NONE)
    createPlatform(1792gi, 480gi, 320gi, 256gi, DECOR_FLOWERA)
    createPlatform(2496gi, 480gi, 320gi, 256gi, DECOR_BUSH)
    createPlatform(2976gi, 352gi, 768gi, 256gi, DECOR_FENCE)
    createPlatform(4224gi, 384gi, 704gi, 256gi, DECOR_FLOWERA)
    lakes.add(lake(0gi, 768gi, 5120gi, 512gi))
    bridges.add(bridge((512gi + 256gi), 704gi, 128gi))
    spiders.add(spider(spider_animation, 1792gi, (480gi - 32gi), 1gi))
    spiders.add(spider(spider_animation, (1792gi + 128gi), (480gi - 32gi), 1gi))
    spiders.add(spider(spider_animation, (1792gi + 256gi), (480gi - 32gi), 1gi))
    spiders.add(spider(spider_animation, 2496gi, (480gi - 32gi), 1gi))
    spiders.add(spider(spider_animation, (2496gi + 128gi), (480gi - 32gi), 1gi))
    spiders.add(spider(spider_animation, (2496gi + 256gi), (480gi - 32gi), 1gi))
    spiders.add(spider(spider_animation, 2976gi, (352gi - 32gi), 1gi))
    spiders.add(spider(spider_animation, (2976gi + 128gi), (352gi - 32gi), 1gi))
    spiders.add(spider(spider_animation, (2976gi + 256gi), (352gi - 32gi), 1gi, true))
    spiders.add(spider(spider_animation, (2976gi + 384gi), (352gi - 32gi), 1gi))
    spiders.add(spider(spider_animation, (2976gi + 512gi), (352gi - 32gi), 1gi))
    spiders.add(spider(spider_animation, (2976gi + 640gi), (352gi - 32gi), 1gi, true))
    spiders.add(spider(spider_animation, (2976gi + 768gi), (352gi - 32gi), 1gi))
    item_spawns.add(itemSpawn(Item::GUN, (1088gi + 96gi), (480gi - 64gi), 64gi, 64gi))
    entrance.set(portal((player.x - 32gi), (player.y - 64gi)))
    exit.set(portal(4736gi, 256gi))
}
func gotoScene7() void {
    scenePresets()
    scene = 7gi
    scene_width = 5120.000000f
    player.create((640gi - 64gi), (480gi - 64gi))
    sceneDefaultShadows()
    createPlatform(448gi, 480gi, 320gi, 384gi, DECOR_MUSHROOMB)
    createPlatform(1088gi, 480gi, 256gi, 256gi, DECOR_NONE)
    createPlatform(1792gi, 480gi, 320gi, 512gi, DECOR_MUSHROOMA)
    createPlatform(2496gi, 480gi, 320gi, 256gi, DECOR_BUSH)
    createPlatform(2976gi, 352gi, 320gi, 512gi, DECOR_MUSHROOMA)
    createPlatform(3456gi, 512gi, 640gi, 512gi, DECOR_FENCE)
    createPlatform(4224gi, 384gi, 704gi, 256gi, DECOR_MUSHROOMA)
    lakes.add(lake(0gi, 768gi, 5120gi, 512gi))
    bridges.add(bridge((512gi + 256gi), 640gi, 128gi))
    spiders.add(spider(beetle_animation, 1792gi, (480gi - 32gi), 2gi))
    spiders.add(spider(beetle_animation, (1792gi + 128gi), (480gi - 32gi), 2gi, true))
    spiders.add(spider(beetle_animation, (1792gi + 128gi), (480gi - 32gi), 2gi))
    spiders.add(spider(beetle_animation, (1792gi + 256gi), (480gi - 32gi), 2gi, true))
    spiders.add(spider(spider_animation, 2496gi, (480gi - 32gi), 1gi))
    spiders.add(spider(spider_animation, (2496gi + 128gi), (480gi - 32gi), 1gi))
    spiders.add(spider(spider_animation, (2496gi + 256gi), (480gi - 32gi), 1gi))
    spiders.add(spider(spider_animation, (2496gi + 128gi), (480gi - 32gi), 1gi, true))
    spiders.add(spider(spider_animation, (2496gi + 256gi), (480gi - 32gi), 1gi, true))
    spiders.add(spider(beetle_animation, 3456gi, (512gi - 32gi), 2gi))
    spiders.add(spider(spider_animation, (3456gi + 128gi), (512gi - 32gi), 1gi, true))
    spiders.add(spider(spider_animation, (3456gi + 480gi), (512gi - 32gi), 1gi))
    spiders.add(spider(beetle_animation, (3456gi + 512gi), (512gi - 32gi), 2gi, true))
    spiders.add(spider(spider_animation, (3456gi + 128gi), (512gi - 32gi), 1gi))
    spiders.add(spider(beetle_animation, (3456gi + 384gi), (512gi - 32gi), 2gi, true))
    item_spawns.add(itemSpawn(Item::CANNON, (1088gi + 96gi), (480gi - 64gi), 64gi, 64gi))
    entrance.set(portal((player.x - 32gi), (player.y - 64gi)))
    exit.set(portal(4736gi, 256gi))
}
func gotoScene8() void {
    scenePresets()
    theme = &theme2
    scene = 8gi
    scene_width = 5120.000000f
    player.create((4736gi + 32gi), (256gi + 64gi))
    sceneDefaultShadows()
    createPlatform(448gi, 480gi, 320gi, 384gi, DECOR_NONE)
    createPlatform(1088gi, 480gi, 256gi, 256gi, DECOR_NONE)
    createPlatform(1792gi, 480gi, 320gi, 512gi, DECOR_NONE)
    createPlatform(2496gi, 480gi, 320gi, 256gi, DECOR_NONE)
    createPlatform(2976gi, 352gi, 320gi, 512gi, DECOR_NONE)
    createPlatform(3456gi, 512gi, 640gi, 512gi, DECOR_NONE)
    createPlatform(4224gi, 384gi, 704gi, 256gi, DECOR_NONE)
    lakes.add(lake(0gi, 768gi, 5120gi, 512gi))
    bridges.add(bridge((512gi + 256gi), 640gi, 128gi))
    spiders.add(spider(slime_animation, 1792gi, (480gi - 32gi), 2gi))
    spiders.add(spider(slime_animation, (1792gi + 128gi), (480gi - 32gi), 2gi, true))
    spiders.add(spider(slime_animation, (1792gi + 128gi), (480gi - 32gi), 2gi))
    spiders.add(spider(slime_animation, (1792gi + 256gi), (480gi - 32gi), 2gi, true))
    spiders.add(spider(slime_animation, 2496gi, (480gi - 32gi), 1gi))
    spiders.add(spider(slime_animation, (2496gi + 128gi), (480gi - 32gi), 1gi))
    spiders.add(spider(slime_animation, (2496gi + 256gi), (480gi - 32gi), 1gi))
    spiders.add(spider(slime_animation, (2496gi + 128gi), (480gi - 32gi), 1gi, true))
    spiders.add(spider(slime_animation, (2496gi + 256gi), (480gi - 32gi), 1gi, true))
    spiders.add(spider(slime_animation, 3456gi, (512gi - 32gi), 2gi))
    spiders.add(spider(slime_animation, (3456gi + 128gi), (512gi - 32gi), 1gi, true))
    spiders.add(spider(slime_animation, (3456gi + 480gi), (512gi - 32gi), 1gi))
    spiders.add(spider(slime_animation, (3456gi + 512gi), (512gi - 32gi), 2gi, true))
    spiders.add(spider(slime_animation, (3456gi + 128gi), (512gi - 32gi), 1gi))
    spiders.add(spider(slime_animation, (3456gi + 384gi), (512gi - 32gi), 2gi, true))
    exit.set(portal((640gi - 96gi), (480gi - 128gi)))
    entrance.set(portal(4736gi, 256gi))
    updateCamera()
}
func gotoThemeTestScreen() void {
    scenePresets()
    scene = 2004gi
    scene_width = 2560.000000f
    player.create((640gi - 64gi), (544gi - 64gi))
    sceneDefaultShadows()
    createPlatform(512gi, 544gi, 256gi, 256gi, DECOR_BUSH)
    createPlatform(1088gi, 320gi, 256gi, 256gi, DECOR_MUSHROOMB)
    createPlatform(64gi, 704gi, 256gi, 128gi, DECOR_FLOWERA)
    lakes.add(lake(0gi, 768gi, 2560gi, 512gi))
    bridges.add(bridge((256gi + 64gi), 704gi, 192gi))
    bridges.add(bridge((((256gi + 256gi) + 256gi) + 192gi), (320gi + 192gi), 128gi))
    exit.set(portal((1920gi + 64gi), (480gi - 128gi)))
}
func gotoWinScreen() void {
    scenePresets()
    scene = 2002gi
    scene_width = 2560.000000f
    player.create((640gi - 64gi), (544gi - 64gi))
    sceneDefaultShadows()
    createPlatform(128gi, 544gi, 896gi, 384gi, DECOR_BUSH)
    createPlatform(1152gi, 256gi, 256gi, 384gi, DECOR_FLOWERA)
    createPlatform(1920gi, 480gi, 256gi, 512gi, DECOR_MUSHROOMB)
    lakes.add(lake(0gi, 768gi, 2560gi, 512gi))
    bridges.add(bridge(1408gi, 448gi, 128gi))
    bridges.add(bridge((1920gi + 256gi), (480gi + 32gi), 256gi))
    bridges.add(bridge((1920gi - 128gi), 640gi, 128gi))
    item_spawns.add(itemSpawn(Item::WING, player.x, (player.y - 128gi), 64gi, 64gi))
    item_spawns.add(itemSpawn(Item::GUN, 384gi, (544gi - 64gi), 64gi, 64gi))
    item_spawns.add(itemSpawn(Item::CANNON, 768gi, (544gi - 64gi), 64gi, 64gi))
    entrance.set(portal((player.x - 32gi), (player.y - 64gi)))
    exit.rid()
}
func pause() void {
    was_paused bool = is_paused
    is_paused = (!(is_dead) && !(is_paused))
    if was_paused {
        <unknown statement>
    } else {
        when_paused = glfwGetTime()
    }
}
func teleport() void {
    teleporting = true
    teleport_opacity = 1.000000f
}
func killPlayer() void {
    is_dead = true
    respawn_timer = 135gi
    death_x = cast float (player.x)
    death_y = cast float (player.y)
    death_vx = 0.000000f
    death_vy = -30.000000f
    if (item == Item::GUN) {
        death_image = gameImageEx(gun_death, 0gi, -24gi, 64gi, 96gi)
    } else {
        if (item == Item::CANNON) {
            death_image = gameImageEx(cannoneer_death, 0gi, -24gi, 64gi, 88gi)
        } else {
            death_image = gameImageEx(death, 0gi, 0gi, 64gi, 64gi)
        }
    }
}
func createPlatform(x int, y int, w int, h int, decor int) void {
    p Platform = platform(x, y, w, h)
    if (decor == DECOR_NONE) {
        platforms.add(p)
        return 
    }
    if (decor == DECOR_BUSH) {
        p.decorations.add(decoration(theme.bushl, (x + 64gi), (y - 64gi), 64gi, 64gi))
        p.decorations.add(decoration(theme.bushr, (x + 128gi), (y - 64gi), 64gi, 64gi))
        platforms.add(p)
        return 
    }
    if (decor == DECOR_FLOWERA) {
        p.decorations.add(decoration(flower_a, (x + 64gi), (y - 64gi), 64gi, 64gi))
        platforms.add(p)
        return 
    }
    if (decor == DECOR_FLOWERB) {
        p.decorations.add(decoration(flower_a, (x + 64gi), (y - 64gi), 64gi, 64gi))
        platforms.add(p)
        return 
    }
    if (decor == DECOR_ROCKA) {
        p.decorations.add(decoration(rock_a, (x + 64gi), (y - 64gi), 64gi, 64gi))
        platforms.add(p)
        return 
    }
    if (decor == DECOR_ROCKB) {
        p.decorations.add(decoration(rock_b, (x + 128gi), (y - 64gi), 64gi, 64gi))
        platforms.add(p)
        return 
    }
    if (decor == DECOR_MUSHROOMA) {
        p.decorations.add(decoration(mushroom_a, (x + 64gi), (y - 64gi), 64gi, 64gi))
        platforms.add(p)
        return 
    }
    if (decor == DECOR_MUSHROOMB) {
        p.decorations.add(decoration(mushroom_b, ((x + w) - 128gi), (y - 64gi), 64gi, 64gi))
        platforms.add(p)
        return 
    }
    if (decor == DECOR_STUMP) {
        p.decorations.add(decoration(stump, (x + 64gi), (y - 64gi), 64gi, 64gi))
        platforms.add(p)
        return 
    }
    if (decor == DECOR_FENCE) {
        p.decorations.add(decoration(fence_a, ((x + w) - 128gi), (y - 64gi), 64gi, 64gi))
        p.decorations.add(decoration(fence_b, ((x + w) - 192gi), (y - 64gi), 64gi, 64gi))
        platforms.add(p)
        return 
    }
    printf('ERROR: createPlatform() invalid decor type!\n')
}
func playerIsInWater() bool {
    return isInWater(player.getAABB())
}
func isInWater(aabb AABB) bool {
    <unknown statement>
    return false
}
func collidingGround(aabb AABB) *Region {
    <unknown statement>
    <unknown statement>
    return null
}
func playerCollidingPlatform() *Region {
    return collidingGround(player.getAABB())
}
func playerOnPlatform() *Region {
    return collidingGround(player.getAABB(0gi, 1gi))
}
func updateSpiders() void {
    player_killed_spider bool = false
    playerAABB AABB = player.getAABB()
    <unknown statement>
    if player_killed_spider {
        player.vy = -10gi
    }
}
func updateSwordfish() void {
    playerAABB AABB = player.getAABB()
    <unknown statement>
}
func updateCannon() void {
    unless cannon.has {
        return 
    }
    c *Cannon = &cannon.value
    ground *Region = collidingGround(c.getAABB(0gi, 1gi))
    c.vy = ((ground != null) ? 0gi : ((c.vy < 32gi) ? (c.vy + 1gi) : c.vy))
    <unknown statement>
    collision *Region = collidingGround(c.getAABB())
    if collision {
        c.y = ((c.vy > 0gi) ? (collision.getY() - 72gi) : collision.getMaxY())
    }
    if ((c.y + 72gi) > 1280gi) {
        c.y = (1280gi - 72gi)
        c.vy = 0gi
    }
}
func drawFromCamera(texture CaptTexture, x float, y float, w float, h float) void {
    captDrawTexture(texture, (x - camera_x), (y - camera_y), w, h)
}
func drawFromCameraEx(texture CaptTexture, x float, y float, w float, h float) void {
    if (w < 0gi) {
        <unknown statement>
    }
    if (h < 0gi) {
        <unknown statement>
    }
    captDrawTexture(texture, (x - camera_x), (y - camera_y), w, h)
}
func drawLakeBehind(lake Lake) void {
    y int = cast *Region (&lake).getY()
    while (y < cast *Region (&lake).getMaxY()) {
        x int = cast *Region (&lake).getX()
        while (x < cast *Region (&lake).getMaxX()) {
            drawFromCamera(((y == cast *Region (&lake).getY()) ? theme.wave.now() : theme.water), cast float (x), cast float (y), 64.000000f, 64.000000f)
            <unknown statement>
        }
        <unknown statement>
    }
}
func drawLakeUpFront(lake Lake) void {
    y int = cast *Region (&lake).getY()
    while (y < cast *Region (&lake).getMaxY()) {
        x int = cast *Region (&lake).getX()
        while (x < cast *Region (&lake).getMaxX()) {
            opacity float = 0.000000f
            tile AABB = AABB(x, y, 64gi, 64gi)
            if (opacity == 0.000000f) {
                <unknown statement>
            }
            if (opacity == 0.000000f) {
                <unknown statement>
            }
            if (((opacity == 0.000000f) && exit.has) && tile.intersecting(exit.value.visual)) {
                opacity = 0.500000f
            }
            if (opacity == 0.000000f) {
                <unknown statement>
                <unknown statement>
            }
            captDrawOpacity(opacity)
            drawFromCamera(((y == cast *Region (&lake).getY()) ? theme.wave.now() : theme.water), cast float (x), cast float (y), 64.000000f, 64.000000f)
            <unknown statement>
        }
        <unknown statement>
    }
    captDrawOpacity(1.000000f)
}
func drawPlatform(platform Platform) void {
    y int = cast *Region (&platform).getY()
    while (y < cast *Region (&platform).getMaxY()) {
        x int = cast *Region (&platform).getX()
        while (x < cast *Region (&platform).getMaxX()) {
            if ((x == cast *Region (&platform).getX()) && (y == cast *Region (&platform).getY())) {
                drawFromCamera(theme.platform_nw, cast float (x), cast float (y), 64.000000f, 64.000000f)
            } else {
                if ((x == cast *Region (&platform).getX()) && ((y + 64gi) >= cast *Region (&platform).getMaxY())) {
                    drawFromCamera(theme.platform_sw, cast float (x), cast float (y), 64.000000f, 64.000000f)
                } else {
                    if (((x + 64gi) >= cast *Region (&platform).getMaxX()) && (y == cast *Region (&platform).getY())) {
                        drawFromCamera(theme.platform_ne, cast float (x), cast float (y), 64.000000f, 64.000000f)
                    } else {
                        if (((x + 64gi) >= cast *Region (&platform).getMaxX()) && ((y + 64gi) >= cast *Region (&platform).getMaxY())) {
                            drawFromCamera(theme.platform_se, cast float (x), cast float (y), 64.000000f, 64.000000f)
                        } else {
                            if (x == cast *Region (&platform).getX()) {
                                drawFromCamera(theme.platform_w, cast float (x), cast float (y), 64.000000f, 64.000000f)
                            } else {
                                if (y == cast *Region (&platform).getY()) {
                                    drawFromCamera(theme.platform_n, cast float (x), cast float (y), 64.000000f, 64.000000f)
                                } else {
                                    if ((x + 64gi) >= cast *Region (&platform).getMaxX()) {
                                        drawFromCamera(theme.platform_e, cast float (x), cast float (y), 64.000000f, 64.000000f)
                                    } else {
                                        if ((y + 64gi) >= cast *Region (&platform).getMaxY()) {
                                            drawFromCamera(theme.platform_s, cast float (x), cast float (y), 64.000000f, 64.000000f)
                                        } else {
                                            drawFromCamera(theme.platform_c, cast float (x), cast float (y), 64.000000f, 64.000000f)
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            <unknown statement>
        }
        <unknown statement>
    }
    <unknown statement>
}
func drawBridge(bridge Bridge) void {
    if ((cast *Region (&bridge).getWidth() / 64gi) == 2gi) {
        drawFromCamera(bridge0, cast float (cast *Region (&bridge).getX()), cast float (cast *Region (&bridge).getY()), 64.000000f, 64.000000f)
        drawFromCamera(bridge1, (cast float (cast *Region (&bridge).getX()) + 64.000000f), cast float (cast *Region (&bridge).getY()), 64.000000f, 64.000000f)
        return 
    }
    x int = cast *Region (&bridge).getX()
    while (x < cast *Region (&bridge).getMaxX()) {
        drawFromCamera(bridge0, cast float (x), cast float (cast *Region (&bridge).getY()), 64.000000f, 64.000000f)
        <unknown statement>
    }
}
func drawPlayer(p Player, opacity float) void {
    image GameImageEx = (p.frozen_image.isValid() ? p.frozen_image : getImageForPlayer(p))
    captDrawOpacity(opacity)
    drawFromCameraEx(image.texture, (cast float (p.x) + cast float (image.x_offset)), (cast float (p.y) + cast float (image.y_offset)), (cast float (p.direction) * cast float (image.width)), cast float (image.height))
    if (!(p.swimming) && p.parachuting) {
        drawFromCamera(((item == Item::CANNON) ? cannoneer_parachute : parachute), cast float (p.x), (cast float (p.y) - 64.000000f), 64.000000f, 64.000000f)
    }
    captDrawOpacity(1.000000f)
}
func drawDeath() void {
    drawFromCameraEx(death_image.texture, (death_x + cast float (death_image.x_offset)), (death_y + cast float (death_image.y_offset)), cast float (death_image.width), cast float (death_image.height))
}
func drawInventory() void {
    inventory_x float = getInventoryX()
    inventory_y float = getInventoryY()
    captDrawTexture(testinv, inventory_x, inventory_y, (224.000000f * 4.000000f), (112.000000f * 4.000000f))
    selection_relx float = (4.000000f + (96.000000f * cast float (inventory_selection_x)))
    selection_rely float = (((112.000000f / 106.000000f) * (35.000000f + (24.000000f * cast float (inventory_selection_y)))) * 4.000000f)
    captDrawTexture(invselected, (inventory_x + selection_relx), (inventory_y + selection_rely), (22.000000f * 4.000000f), (((112.000000f / 106.000000f) * 22.000000f) * 4.000000f))
    <unknown statement>
    <unknown statement>
    captDrawTexture((crafting ? crafting_mode : inventory_mode), ((inventory_x + (144.000000f * 2.000000f)) - (96.000000f * 2.000000f)), (inventory_y - 128.000000f), (96.000000f * 4.000000f), (32.000000f * 4.000000f))
}
func getImageForPlayer(player Player) GameImageEx {
    if (item == Item::GUN) {
        if player.swimming {
            return gameImageEx(gun_swim.now(), ((player.direction == 1gi) ? 0gi : -8gi), -8gi, 72gi, 72gi)
        }
        unless player.moving {
            return gameImageEx(gun_idle, ((player.direction == 1gi) ? 0gi : -48gi), -8gi, 112gi, 72gi)
        }
        return gameImageEx(gun_walk.now(), ((player.direction == 1gi) ? 0gi : -48gi), -8gi, 112gi, 72gi)
    }
    if (item == Item::CANNON) {
        if player.swimming {
            return gameImageEx(cannoneer_swim.now(), ((player.direction == 1gi) ? 0gi : -8gi), -8gi, 72gi, 72gi)
        }
        unless player.moving {
            return gameImageEx(cannoneer_idle, 0gi, -24gi, 64gi, 88gi)
        }
        return gameImageEx(cannoneer_walk.now(), 0gi, -24gi, 64gi, 88gi)
    }
    unless player.moving {
        return gameImageEx(idle, 0gi, 0gi, 64gi, 64gi)
    }
    if player.swimming {
        return gameImageEx(swim.now(), 0gi, 0gi, 64gi, 64gi)
    }
    return gameImageEx(walk.now(), 0gi, 0gi, 64gi, 64gi)
}
func getImageForItem(item Item) CaptTexture {
    if (item == Item::STAR) {
        return star
    }
    if (item == Item::WING) {
        return wing
    }
    if (item == Item::GUN) {
        return gun
    }
    if (item == Item::CANNON) {
        return cannon_power
    }
    return stump
}
func getImageForResource(resource Resource) CaptTexture {
    return getImageForResource(cast int (resource))
}
func getImageForResource(resource_id int) CaptTexture {
    if (resource_id == cast int (Resource::STRING)) {
        return string
    }
    if (resource_id == cast int (Resource::SLIME)) {
        return slime
    }
    if (resource_id == cast int (Resource::WOOD)) {
        return wood
    }
    if (resource_id == cast int (Resource::FEATHER)) {
        return feather
    }
    if (resource_id == cast int (Resource::METAL)) {
        return metal
    }
    if (resource_id == cast int (Resource::CRYSTAL)) {
        return crystal
    }
    return stump
}
foreign _NSGetExecutablePath(*ubyte, *uint) int
foreign realpath(*ubyte, *ubyte) *ubyte
func getExecutableLocation() String {
    <unknown statement>
    size uint = 1024gi
    if (_NSGetExecutablePath(cast *ubyte (&storage), &size) != 0gi) {
        return ""
    }
    <unknown statement>
    realpath(cast *ubyte (&storage), cast *ubyte (&resolved))
    return string(cast *ubyte (&resolved))
}
func where() String {
    executable String = getExecutableLocation()
    last_slash long = max(executable.last(0x2Fub), executable.last(0x5Cub))
    if (last_slash == -1gi) {
        print("where(): Failed to get containing folder")
        return ""
    }
    result String = executable.sub(0gi, cast usize ((last_slash + 1gi)))
    return result
}
func loadThemes() void {
    theme1.sky = sky
    theme1.wave = wave
    theme1.water = water
    theme1.platform_n = platform_north
    theme1.platform_ne = platform_north_east
    theme1.platform_nw = platform_north_west
    theme1.platform_s = platform_south
    theme1.platform_se = platform_south_east
    theme1.platform_sw = platform_south_west
    theme1.platform_e = platform_east
    theme1.platform_w = platform_west
    theme1.platform_c = platform_center
    theme1.bushr = bushr
    theme1.bushl = bushl
    theme2.sky = sky_th2
    theme2.wave = wave_th2
    theme2.water = water_th2
    theme2.platform_n = platform_north_th2
    theme2.platform_ne = platform_north_east_th2
    theme2.platform_nw = platform_north_west_th2
    theme2.platform_s = platform_south_th2
    theme2.platform_se = platform_south_east_th2
    theme2.platform_sw = platform_south_west_th2
    theme2.platform_e = platform_east_th2
    theme2.platform_w = platform_west_th2
    theme2.platform_c = platform_center_th2
    theme2.bushr = bushr_th2
    theme2.bushl = bushl_th2
    theme = &theme1
}
func cycleThemes() void {
    if (theme == &theme1) {
        theme = &theme2
    } else {
        theme = &theme1
    }
}
func updateCamera() void {
    camera_x = (!(teleporting) ? ((cast float (player.x) + 32.000000f) - (captViewWidth() / 2.000000f)) : camera_x)
    camera_x = ((camera_x < 0.000000f) ? 0.000000f : (((camera_x + captViewWidth()) > scene_width) ? (scene_width - captViewWidth()) : camera_x))
}
func getInventoryX() float {
    return ((cast float (captViewWidth()) / 2.000000f) - (224.000000f * 2.000000f))
}
func getInventoryY() float {
    return ((cast float (captViewHeight()) / 2.000000f) - (112.000000f * 3.000000f))
}
func toggleInventory() void {
    inventory_open = !(inventory_open)
    unless inventory_open {
        return 
    }
    inventory_selection_x = 0gi
    inventory_selection_y = 0gi
    crafting = false
}
func controlInventory(key int) void {
    if (key == controls.alt_up) {
        inventory_selection_y = ((inventory_selection_y == 0gi) ? 0gi : (inventory_selection_y - 1gi))
    }
    if (key == controls.left) {
        inventory_selection_x = ((inventory_selection_x == 0gi) ? 0gi : (inventory_selection_x - 1gi))
    }
    if (key == controls.down) {
        inventory_selection_y = ((inventory_selection_y == 2gi) ? 2gi : (inventory_selection_y + 1gi))
    }
    if (key == controls.right) {
        inventory_selection_x = ((inventory_selection_x == 5gi) ? 5gi : (inventory_selection_x + 1gi))
    }
    if (key == controls.a) {
        index int = (inventory_selection_x + (inventory_selection_y * 6gi))
        if crafting {
            if (((((((craftable[index] != Item::NONE) && (resources[0gi] >= craftable_prices[index].string)) && (resources[1gi] >= craftable_prices[index].slime)) && (resources[2gi] >= craftable_prices[index].wood)) && (resources[3gi] >= craftable_prices[index].feathers)) && (resources[4gi] >= craftable_prices[index].metal)) && (resources[5gi] >= craftable_prices[index].crystals)) {
                addToInventory(craftable[index])
                <unknown statement>
                <unknown statement>
                <unknown statement>
                <unknown statement>
                <unknown statement>
                <unknown statement>
            }
        } else {
            unless (inventory[index] == Item::NONE) {
                pickupItem(inventory[index], getInventoryItemX(index), getInventoryItemY(index))
                inventory[index] = Item::NONE
            }
        }
    }
    if (key == controls.b) {
        crafting = !(crafting)
    }
}
func clearInventory() void {
    memset(&inventory, 0gi, (18gi * sizeof Item))
}
func addToInventory(item Item) void {
    <unknown statement>
}
func getInventoryItemRelX(id int) float {
    return (16.000000f + (96.000000f * cast float ((cast int (id) % 6gi))))
}
func getInventoryItemRelY(id int) float {
    return ((152.000000f + (96.000000f * cast float ((cast int (id) / 6gi)))) * (112.000000f / 106.000000f))
}
func getInventoryItemX(id int) float {
    return (getInventoryX() + getInventoryItemRelX(id))
}
func getInventoryItemY(id int) float {
    return (getInventoryY() + getInventoryItemRelY(id))
}
func print(string String) void {
    <unknown statement>
    putchar(10gi)
}
func place(string String) void {
    <unknown statement>
}
func newline() void {
    putchar(10gi)
}
func scan() String {
    <unknown statement>
    result.array = new ubyte * (32gi)
    result.length = 0gi
    result.capacity = 32gi
    result.ownership = StringOwnership::GIVEN
    <unknown statement>
    return result
}
func scan(prompt String) String {
    place(prompt)
    return scan()
}
func skim() String {
    <unknown statement>
    result.array = new ubyte * (16gi)
    result.length = 0gi
    result.capacity = 16gi
    result.ownership = StringOwnership::GIVEN
    <unknown statement>
    return result
}
func skim(prompt String) String {
    place(prompt)
    return skim()
}
func skimInt() int {
    <unknown statement>
    skimIntInto(&result)
    return result
}
func skimInt(prompt String) int {
    place(prompt)
    skimIntInto(undef result int)
    return result
}
func skimIntInto(result *int) successful {
    *(result) = 0gi
    skimmed String = skim()
    is_negative bool = false
    <unknown statement>
    if is_negative {
        *(result) = (0gi - *(result))
    }
    return true
}
func skimIntInto(prompt String, result *int) successful {
    place(prompt)
    return skimIntInto(result)
}
func skimDouble() double {
    skimDoubleInto(undef result double)
    return result
}
func skimDouble(prompt String) double {
    place(prompt)
    skimDoubleInto(undef result double)
    return result
}
func skimDoubleInto(result *double) successful {
    skimmed String = (skim() + "\0")
    *(result) = strtod(skimmed.array, undef end *ubyte)
    return (end == skimmed.array at ((skimmed.length - 1gi)))
}
func skimDoubleInto(prompt String, result *double) successful {
    place(prompt)
    return skimDoubleInto(result)
}
func __array__(this *<$T> List) *$T {
    return this.items
}
func __length__(this *<$T> List) usize {
    return this.length
}
func add(this *<$T> List, item $T) void {
    if (this.items == null) {
        this.items = new $T * (4gi)
        this.length = 0gi
        this.capacity = 4gi
        this.ownership = Ownership::OWN
    } else {
        if (this.length == this.capacity) {
            <unknown statement>
            new_items *$T = new $T * (this.capacity)
            memcpy(new_items, this.items, (sizeof $T * this.length))
            delete this.items
            this.items = new_items
        }
    }
    if (this.ownership != Ownership::OWN) {
        printf('<$T> List Error: can't add to list via reference\n')
        return 
    }
    this.items[this.length] = item
    <unknown statement>
}
func remove(this *<$T> List, index usize) void {
    if (this.length == 0gi) {
        printf('<$T> List Error: remove() called on empty list')
        return 
    }
    if ((index < 0gi) || (index >= this.length)) {
        printf('<$T> List Error: remove() index out of range')
        return 
    }
    if (this.ownership != Ownership::OWN) {
        printf('<$T> List Error: can't remove from list via reference\n')
        return 
    }
    <unknown statement>
    this.items[index].__defer__?()
    memmove(this.items at (index), this.items at ((index + 1gi)), ((this.length - index) * sizeof $T))
}
func get(this *<$T> List, index usize) $T {
    if ((index < 0gi) || (index >= this.length)) {
        printf('<$T> List Error: get() index out of range')
        return this.items[0gi]
    }
    return this.items[index]
}
func getPointer(this *<$T> List, index usize) *$T {
    if ((index < 0gi) || (index >= this.length)) {
        printf('<$T> List Error: getPointer() index out of range')
        return this.items
    }
    return this.items at (index)
}
func clear(this *<$T> List) void {
    if (this.ownership == Ownership::OWN) {
        <unknown statement>
        this.length = 0gi
    }
}
func __defer__(this *<$T> List) void {
    if (this.ownership == Ownership::OWN) {
        <unknown statement>
        delete this.items
    }
}
func __pass__(list <$T> List) <$T> List {
    if (list.ownership == Ownership::OWN) {
        list.ownership = Ownership::REFERENCE
    } else {
        if (list.ownership == Ownership::GIVEN) {
            list.ownership = Ownership::OWN
        }
    }
    return list
}
func randomize() void {
    srand(time(null))
}
func random() double {
    return (cast double (randReduced()) / cast double (RAND_REDUCED_RANGE))
}
func randomInt(exclusive_max int) int {
    return cast int ((random() * cast double (exclusive_max)))
}
func randomInt(inclusive_min int, exclusive_max int) int {
    return (randomInt((exclusive_max - inclusive_min)) + inclusive_min)
}
func randomDouble(exclusive_max double) double {
    return (random() * exclusive_max)
}
func randomDouble(inclusive_min double, exclusive_max double) double {
    return (randomDouble((exclusive_max - inclusive_min)) + inclusive_min)
}
func randReduced() int {
    return (rand() % RAND_REDUCED_RANGE)
}
func max(a $T, b $T) $T {
    return ((a < b) ? b : a)
}
func min(a $T, b $T) $T {
    return ((b < a) ? b : a)
}
func main() void {
    unless captPrepare() {
        return 
    }
    captOnSetup(func &on_setup)
    captOnStep(func &on_step, 60gi)
    captOnKey(func &on_key)
    captOnDraw(func &on_draw)
    captOnExit(func &on_exit)
    captAddTypical(64.000000f, 64.000000f)
    captAddTypical(64.000000f, 32.000000f)
    captAddTypical(128.000000f, 128.000000f)
    captHideMouse()
    captCustomView(1920.000000f, 1280.000000f)
    captStart('Tangent', true)
}
func on_setup() void {
    captRandomize()
    loadAssets()
    loadThemes()
    setupState()
    gotoTitleScreen()
}
func on_exit() void {
    destroyAssets()
}
func on_step() void {
    if is_dead {
        if ((death_y > 1280.000000f) || (--(respawn_timer) == 0gi)) {
            is_dead = false
            respawn_timer = 0gi
            item = Item::NONE
            cannon.rid()
            gotoScene(scene)
        }
        if (respawn_timer < 120gi) {
            <unknown statement>
            <unknown statement>
            <unknown statement>
        }
        return 
    }
    if is_paused {
        return 
    }
    if inventory_open {
        inventory_bg_shade = ((fabs((inventory_bg_shade - 0.500000f)) < 0.010000f) ? 0.500000f : (((inventory_bg_shade * 4.000000f) + 0.500000f) / 5.000000f))
    } else {
        inventory_bg_shade = ((fabs(inventory_bg_shade) < 0.010000f) ? 0.000000f : ((inventory_bg_shade * 4.000000f) / 5.000000f))
    }
    if (item != Item::NONE) {
        target_screen_x float = (1792.000000f + 14.000000f)
        target_screen_y float = (32.000000f + 14.000000f)
        item_screen_x = ((item_screen_x < (target_screen_x - 4.000000f)) ? (item_screen_x + ((target_screen_x - item_screen_x) / 4.000000f)) : target_screen_x)
        item_screen_y = ((item_screen_y > (target_screen_y + 4.000000f)) ? (item_screen_y + ((target_screen_y - item_screen_y) / 4.000000f)) : target_screen_y)
    }
    if inventory_open {
        return 
    }
    if player.swimming {
        gun_swim.update()
        cannoneer_swim.update()
        unless playerIsInWater() {
            player.swimming = false
            swim.reset()
            walk.reset()
            gun_walk.reset()
            gun_swim.reset()
            cannoneer_walk.reset()
            cannoneer_swim.reset()
            <unknown statement>
            if player.moving_horizontally {
                <unknown statement>
            }
        }
    } else {
        if playerIsInWater() {
            player.swimming = true
            swim.reset()
            walk.reset()
            gun_walk.reset()
            gun_swim.reset()
            cannoneer_walk.reset()
            cannoneer_swim.reset()
        }
    }
    if player.moving {
        if (player.swimming && (item != Item::GUN)) {
            swim.update()
        } else {
            unless player.parachuting {
                if (item == Item::GUN) {
                    gun_walk.update()
                } else {
                    if (item == Item::CANNON) {
                        cannoneer_walk.update()
                    } else {
                        walk.update()
                    }
                }
            }
        }
    }
    theme.wave.update()
    inwards_portal.update()
    disabled_portal.update()
    outwards_portal.update()
    enabler.update()
    player.moving = false
    player.moving_horizontally = false
    <unknown statement>
    <unknown statement>
    if cannon_ball.has {
        <unknown statement>
        aabb AABB = cannon_ball.value.getAABB()
        if (((cannon_ball.value.x < 0gi) || (cast float (cannon_ball.value.x) > scene_width)) || (collidingGround(aabb) != null)) {
            cannon_ball.rid()
        } else {
            hit bool = false
            <unknown statement>
            unless hit {
                <unknown statement>
            }
            if (!(hit) && aabb.intersecting(player.getAABB())) {
                killPlayer()
                return 
            }
        }
    }
    if captKeyHeld(controls.right) {
        <unknown statement>
        player.direction = 1gi
        player.moving = true
        player.moving_horizontally = true
        collision *Region = playerCollidingPlatform()
        if collision {
            player.x = (collision.getX() - 64gi)
        }
    }
    if captKeyHeld(controls.left) {
        <unknown statement>
        player.direction = -1gi
        player.moving = true
        player.moving_horizontally = true
        collision *Region = playerCollidingPlatform()
        if collision {
            player.x = collision.getMaxX()
        }
    }
    currently_on_ground *Region = playerOnPlatform()
    if player.swimming {
        if captKeyHeld(controls.up) {
            <unknown statement>
            player.moving = true
            collision *Region = playerCollidingPlatform()
            if collision {
                player.y = collision.getMaxY()
            }
        }
        if captKeyHeld(controls.down) {
            <unknown statement>
            player.moving = true
        }
        <unknown statement>
    } else {
        if (currently_on_ground == null) {
            <unknown statement>
        } else {
            if ((item == Item::WING) && captKeyHeld(controls.b)) {
                player.vy = -24gi
                <unknown statement>
                particles.add(particle(smoke, player.x, player.y, 64gi, 64gi))
            } else {
                if captKeyHeld(controls.up) {
                    player.vy = -20gi
                } else {
                    player.vy = 0gi
                }
            }
        }
    }
    player.parachuting = (((currently_on_ground == null) && (player.vy > 0gi)) && captKeyHeld(controls.up))
    if (player.parachuting && (player.vy > 4gi)) {
        player.vy = 4gi
        <unknown statement>
    }
    collision *Region = playerCollidingPlatform()
    if collision {
        player.x = ((player.vx > 0gi) ? (collision.getX() - 64gi) : collision.getMaxX())
    }
    <unknown statement>
    collision = playerCollidingPlatform()
    if collision {
        player.y = ((player.vy > 0gi) ? (collision.getY() - 64gi) : collision.getMaxY())
    }
    <unknown statement>
    player.x = ((player.x < 0gi) ? 0gi : (((cast float (player.x) + 64.000000f) > scene_width) ? (cast int (scene_width) - 64gi) : player.x))
    player.y = ((player.y < 0gi) ? 0gi : (((cast float (player.y) + 64.000000f) > 1280.000000f) ? 1216gi : player.y))
    if teleporting {
        <unknown statement>
        if (teleport_opacity < 0.000000f) {
            player = shadow.thaw()
            teleporting = false
        }
    }
    <unknown statement>
    if (portal_enabler.has && portal_enabler.value.collision.intersecting(player.getAABB())) {
        portal_enabler.value.collected = true
    }
    if ((portal_enabler.has && portal_enabler.value.collected) && exit.has) {
        exit_x int = (exit.value.visual.x + 32gi)
        exit_y int = (exit.value.visual.y + 48gi)
        new_x int = ((portal_enabler.value.collision.x + exit_x) / 2gi)
        new_y int = ((portal_enabler.value.collision.y + exit_y) / 2gi)
        portal_enabler.value.collision.x = new_x
        portal_enabler.value.collision.y = new_y
        portal_enabler.value.visual.x = new_x
        portal_enabler.value.visual.y = new_y
        x_diff double = cast double (abs((new_x - exit_x)))
        y_diff double = cast double (abs((new_y - exit_y)))
        dist double = sqrt(((x_diff * x_diff) + (y_diff * y_diff)))
        if (dist < 2.000000gf) {
            exit_disabled = false
            portal_enabler.rid()
        }
    }
    updateCamera()
    updateSpiders()
    updateSwordfish()
    updateCannon()
    <unknown statement>
    if ((exit.has && !(exit_disabled)) && exit.value.collision.intersecting(player.getAABB())) {
        gotoScene(++(scene))
    }
}
func on_key(key int, scancode int, action int, mods int) void {
    if (action != GLFW_PRESS) {
        return 
    }
    if (key == controls.pause) {
        pause()
        return 
    }
    if is_paused {
        return 
    }
    if (scene == 0gi) {
        gotoScene1()
    }
    if (key == GLFW_KEY_T) {
        gotoThemeTestScreen()
        return 
    }
    if (key == GLFW_KEY_Y) {
        cycleThemes()
        return 
    }
    if (key == GLFW_KEY_E) {
        toggleInventory()
    }
    if inventory_open {
        controlInventory(key)
        return 
    }
    if (controls == wasd) {
        if ((((key == GLFW_KEY_UP) || (key == GLFW_KEY_DOWN)) || (key == GLFW_KEY_LEFT)) || (key == GLFW_KEY_RIGHT)) {
            controls = arrows
        }
    } else {
        if (controls == arrows) {
            if ((((key == GLFW_KEY_W) || (key == GLFW_KEY_S)) || (key == GLFW_KEY_A)) || (key == GLFW_KEY_D)) {
                controls = wasd
            }
        }
    }
    if (item == Item::STAR) {
        if (key == controls.a) {
            teleport()
        }
        if (key == controls.b) {
            shadow = player.freeze(getImageForPlayer(player))
        }
    } else {
        if (item == Item::GUN) {
            if ((key == controls.a) && !(player.swimming)) {
                particles.add(particle(smoke, (player.x + (player.direction * 128gi)), player.y, 64gi, 64gi))
                bullets.add(bullet(((player.x + (player.direction * 96gi)) + 16gi), (player.y + 28gi), (player.direction * 20gi)))
            }
        } else {
            if (item == Item::CANNON) {
                if ((key == controls.a) && cannon.has) {
                    c *Cannon = &cannon.value
                    particles.add(particle(flame, ((c.x + ((c.direction == 1gi) ? -4gi : 120gi)) - 16gi), (c.y - 16gi), 64gi, 64gi))
                    if !(cannon_ball.has) {
                        cannon_ball.set(cannonBall((c.x + ((c.direction == 1gi) ? 128gi : -40gi)), (c.y + 16gi), (c.direction * 20gi)))
                        particles.add(particle(smoke, (c.x + ((c.direction == 1gi) ? 128gi : -40gi)), c.y, 64gi, 64gi))
                    }
                }
                if (key == controls.b) {
                    newCannon Cannon = cannon(((player.direction == 1gi) ? player.x : (player.x - 88gi)), (player.y - 128gi), player.direction)
                    if (collidingGround(newCannon.getAABB()) == null) {
                        cannon.set(newCannon)
                    }
                }
            }
        }
    }
    <unknown statement>
}
func on_draw() void {
    captClearColor(captColor(1.000000f, 1.000000f, 1.000000f))
    unless is_paused {
        sky_shift = ((cast float (((glfwGetTime() * 1000.000000f) - (accumulated_pause_time * 1000.000000f))) / 100.000000f) % captViewWidth())
    }
    captDrawTexture(theme.sky, ceilf((0.000000f - sky_shift)), 0.000000f, captViewWidth(), captViewHeight())
    captDrawTexture(theme.sky, ((0.000000f - sky_shift) + captViewWidth()), 0.000000f, captViewWidth(), captViewHeight())
    <unknown statement>
    if exit.has {
        drawFromCamera((exit_disabled ? disabled_portal.now() : inwards_portal.now()), cast float (cast *Region (&exit).getVisualX()), cast float (cast *Region (&exit).getVisualY()), cast float (cast *Region (&exit).getVisualWidth()), cast float (cast *Region (&exit).getVisualHeight()))
    }
    if entrance.has {
        drawFromCamera(outwards_portal.now(), cast float (cast *Region (&entrance).getVisualX()), cast float (cast *Region (&entrance).getVisualY()), cast float (cast *Region (&entrance).getVisualWidth()), cast float (cast *Region (&entrance).getVisualHeight()))
    }
    <unknown statement>
    <unknown statement>
    <unknown statement>
    <unknown statement>
    if cannon.has {
        drawFromCameraEx(cannon_idle, cast float (cannon.value.x), cast float (cannon.value.y), (152.000000f * cast float (cannon.value.direction)), 72.000000f)
    }
    if cannon_ball.has {
        drawFromCamera(ball, cast float (cannon_ball.value.x), cast float (cannon_ball.value.y), 32.000000f, 32.000000f)
    }
    <unknown statement>
    if portal_enabler.has {
        r *Region = cast *Region (&portal_enabler.value)
        drawFromCamera(enabler.now(), cast float (r.getVisualX()), cast float (r.getVisualY()), cast float (r.getVisualWidth()), cast float (r.getVisualHeight()))
    }
    <unknown statement>
    <unknown statement>
    <unknown statement>
    if (item == Item::STAR) {
        drawPlayer(shadow, 0.500000f)
    }
    if is_dead {
        drawDeath()
    } else {
        unless (scene == 0gi) {
            drawPlayer(player, (teleporting ? teleport_opacity : 1.000000f))
        }
    }
    if ((scene == 0gi) || (scene == 1gi)) {
        drawFromCamera(how_to_play, (576.000000f - 224.000000f), 192.000000f, 512.000000f, 256.000000f)
    }
    if (scene == 2002gi) {
        drawFromCamera(win, (576.000000f - 224.000000f), 192.000000f, 512.000000f, 128.000000f)
    }
    <unknown statement>
    if (inventory_bg_shade != 0.000000f) {
        captDrawOpacity(inventory_bg_shade)
        captDrawTexture(bullet, 0.000000f, 0.000000f, captViewWidth(), captViewHeight())
        captDrawOpacity(1.000000f)
    }
    unless (scene == 0gi) {
        captDrawTexture(slot, 1792.000000f, 32.000000f, 96.000000f, 96.000000f)
    }
    if inventory_open {
        drawInventory()
    }
    if (!(is_dead) && (item != Item::NONE)) {
        captDrawTexture(getImageForItem(item), item_screen_x, item_screen_y, 64.000000f, 64.000000f)
    }
}
foreign 'OpenGL'
foreign '/Users/isaac/Projects/Adept/bin/import/glfw/macos_libglfw3.a'
foreign 'Cocoa'
foreign 'IOKit'
foreign 'CoreFoundation'
foreign 'CoreVideo'
foreign '/Users/isaac/Projects/Adept/bin/import/stb/macos_stb_image.a'
