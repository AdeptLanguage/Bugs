
struct Spider (x, y, vx, vy, speed int, animation GameAnimation, potential_resource Resource) {
    func update {
        this.animation.update()
    }
    
    func now CaptTexture
        = this.animation.now()
    
    func getAABB AABB
        = AABB(this.x, this.y, 64, 32)
    
    func getAABB(adj_x, adj_y int) AABB
        = AABB(this.x + adj_x, this.y + adj_y, 64, 32)
    
    func getDroppedResource Resource {
        return captRandom() < 0.25 ? this.potential_resource : Resource::NONE
    }
}

func spider(source_animation GameAnimation, x, y int) Spider
    = spider(source_animation, x, y, 1, false)

func spider(source_animation GameAnimation, x, y, speed int) Spider
    = spider(source_animation, x, y, speed, false)

func spider(source_animation GameAnimation, x, y, speed int, reverse bool) Spider {
    spider Spider = undef
    spider.x = x
    spider.y = y
    spider.vx = reverse ? -1 : 1
    spider.vy = 0
    spider.speed = speed
    spider.animation = source_animation.newInstance()
    
    spider.potential_resource = Resource::NONE
    
    if source_animation.frames == spider_animation.frames,
        spider.potential_resource = Resource::STRING
    else if source_animation.frames == beetle_animation.frames,
        spider.potential_resource = Resource::WOOD
    if source_animation.frames == slime_animation.frames,
        spider.potential_resource = Resource::SLIME    
    
    return spider
}
